<?xml version="1.0" encoding="UTF-8"?>

<!-- Declare external file containing WAS variables referenced in the following steps -->
<!DOCTYPE workflow [<!ENTITY variables SYSTEM "variable_imports.xml">
                    <!ENTITY image_properties SYSTEM "extensions/image_properties.xml">
                    ]> 
                    
<!--
/******************************************************************************/
/* Copyright Contributors to the zOS-Workflow Project.                        */
/* SPDX-License-Identifier: Apache-2.0                                        */
/******************************************************************************/
-->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../workflow/schemas/workflow_v1.xsd">
    <!--  Note: The schema workflow_v1.xsd is shipped with z/OSMF. To use the schema
          to validate this XML, modify the above schema location to point to the 
          schema in z/OSMF, or copy the schema to an appropriate location.  -->

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- UKO Provisioning : Provision a UKO agent                      -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

  <workflowInfo>
      <workflowID>ukoagent_Provision</workflowID>
      <workflowDescription>Provision a UKO agent</workflowDescription>
    <workflowVersion>1.0.0.0</workflowVersion>
        <!-- Build timestamp 2021.05.09.21.03.24 -->
      <vendor>IBM</vendor>
      <Provisioning>
          <productID>5655-EKM</productID>
          <productName>UKO</productName>
          <productVersion>V2R1+</productVersion>
          <softwareType>ukoagent</softwareType>
      </Provisioning>
  </workflowInfo>
  
  	<!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--     Include variables used by the following steps     -->
	<!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	&variables;
	&image_properties;

    <!--++++++++++++++++++++++-->
    <!--   Provision Steps    -->
    <!--++++++++++++++++++++++-->  


    <step name="configureAgent">
    	<title>Configure UKO agent</title>
    	<description>Configure the agent to start as a started task</description>

        <step name="substituteAgentConfigNoWorkstation">
            <title>Substitute KMGPARM without Workstation</title>
            <description>Replace values in KMGPARM with template variable values</description>
            <runAsUser substitution="true">$!{instance-UKO_ADMIN_SERVER}</runAsUser>
            <approver substitution="true">$!{instance-UKO_APPROVER_SERVER}</approver>
            <condition>
                <expression>"1"=="1"</expression>
                <description>always true</description>
                <targetStateSet>
                    <description>Execute if no workstation access is required</description>
                    <extendStateExpression>
                        <description>Skip if workstation access is required</description>
                        <expression>${instance-WORKSTATION_ACCESS_REQUIRED} == "true"</expression>
                        <targetState>Skipped</targetState>
                    </extendStateExpression>
                </targetStateSet>
            </condition>
            <variableValue name="UKO_AGENT_CLIENT_USER" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="UKO_AGENT_PORT" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="UKO_KEY_PREFIX" scope="instance" noPromptIfSet="false" required="false"/>
            <instructions substitution="true">Submit shell script to execute step</instructions>
            <weight>1</weight>
            <autoEnable>true</autoEnable>
            <template>
                    <inlineTemplate substitution="true">
                        echo "workstation access is not required, using sample options member KMGOPCRY"
                        # getting rid of potential dashes in the codepage
                        ccsid=$(echo "${instance-DB_CODEPAGE}" | sed 's/-//g')

                        echo "/* Agent configuration parameters */" > ${instance-TEMP_DIR}/${instance-UKO_AGENT_STC_NAME}-KMGPARM;    
                        sed "s#^\&amp;IP-PORT.*#\&amp;IP-PORT(${instance-UKO_AGENT_PORT})#g;
                            s#^\&amp;SYS-RSAKEK-PREFIX.*#\&amp;SYS-RSAKEK-PREFIX(${instance-UKO_KEY_PREFIX}.RSAKEK)#g;
                            s#^\&amp;SYS-ECCSIGN-PREFIX.*#\&amp;SYS-ECCSIGN-PREFIX(${instance-UKO_KEY_PREFIX}.ECCSIGN)#g;
                            s#^\&amp;SYS-CCSID.*#\&amp;SYS-CCSID(${ccsid})#g;
                            s#^\&amp;WEBCLIENT.*#\&amp;WEBCLIENT(${instance-UKO_AGENT_CLIENT_USER})#g" "//'${instance-UKO_AGENT_HLQ}.SKMGSAMP(KMGOPCRY)'" >> ${instance-TEMP_DIR}/${instance-UKO_AGENT_STC_NAME}-KMGPARM;
                            
                    </inlineTemplate>
                <submitAs>shell-JCL</submitAs>
            </template>
        </step>

        <step name="substituteAgentConfigWithWorkstation">
            <title>Substitute KMGPARM with Workstation</title>
            <description>Replace values in KMGPARM with template variable values</description>
            <runAsUser substitution="true">$!{instance-UKO_ADMIN_SERVER}</runAsUser>
            <approver substitution="true">$!{instance-UKO_APPROVER_SERVER}</approver>
            <condition>
                <expression>"1"=="1"</expression>
                <description>always true</description>
                <targetStateSet>
                    <description>Only execute for workstation access</description>
                    <extendStateExpression>
                        <description>Skip if no workstation access is required</description>
                        <expression>${instance-WORKSTATION_ACCESS_REQUIRED} == "false"</expression>
                        <targetState>Skipped</targetState>
                    </extendStateExpression>
                </targetStateSet>
            </condition>
            <variableValue name="UKO_AGENT_CLIENT_USER" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="UKO_AGENT_PORT" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="DB_AGENT_PLAN" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="DB2_JCC_SSID" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="DB_LOCATION" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="DB_JDBC_PORT" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="DB_JDBC_SECPORT" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="UKO_KEY_PREFIX" scope="instance" noPromptIfSet="false" required="false"/>
            <instructions substitution="true">Submit shell script to execute step</instructions>
            <weight>1</weight>
            <autoEnable>true</autoEnable>
            <template>
                    <inlineTemplate substitution="true">
                        echo "workstation access is required, using sample options member KMGOPDB2"
                        # getting rid of potential dashes in the codepage
                        ccsid=$(echo "${instance-DB_CODEPAGE}" | sed 's/-//g')

                        echo "/* Agent configuration parameters */" > ${instance-TEMP_DIR}/${instance-UKO_AGENT_STC_NAME}-KMGPARM;    
                        sed "s#^\&amp;IP-PORT.*#\&amp;IP-PORT(${instance-UKO_AGENT_PORT})#g;
                            s#^\&amp;SYS-RSAKEK-PREFIX.*#\&amp;SYS-RSAKEK-PREFIX(${instance-UKO_KEY_PREFIX}.RSAKEK)#g;
                            s#^\&amp;SYS-ECCSIGN-PREFIX.*#\&amp;SYS-ECCSIGN-PREFIX(${instance-UKO_KEY_PREFIX}.ECCSIGN)#g;
                            s#^\&amp;DB2-PLAN.*#\&amp;DB2-PLAN(${instance-DB_AGENT_PLAN})#g;
                            s#^\&amp;DB2-SYSTEM.*#\&amp;DB2-SYSTEM(${instance-DB2_JCC_SSID})#g;
                            s#^\&amp;SYS-CCSID.*#\&amp;SYS-CCSID(${ccsid})#g;
                            s#^\&amp;SYS-JDBC-LOCATION.*#\&amp;SYS-JDBC-LOCATION(${instance-DB_LOCATION})#g;
                            s#^\&amp;SYS-JDBC-PORT.*#\&amp;SYS-JDBC-PORT(${instance-DB_JDBC_PORT})#g;
                            s#^\&amp;SYS-JDBC-SECPORT.*#\&amp;SYS-JDBC-SECPORT(${instance-DB_JDBC_SECPORT})#g;
                            s#^\&amp;WEBCLIENT.*#\&amp;WEBCLIENT(${instance-UKO_AGENT_CLIENT_USER})#g" "//'${instance-UKO_AGENT_HLQ}.SKMGSAMP(KMGOPDB2)'" >> ${instance-TEMP_DIR}/${instance-UKO_AGENT_STC_NAME}-KMGPARM;

                        echo "&amp;DB2-QUALIFIER(${instance-DB_CURRENT_SCHEMA})" >> ${instance-TEMP_DIR}/${instance-UKO_AGENT_STC_NAME}-KMGPARM;    
                            
                    </inlineTemplate>
                <submitAs>shell-JCL</submitAs>
            </template>
        </step>

        <step name="copyAgentConfiguration">
		    <title>Copy KMGPARM into place</title>
	        <description>Copy KMGPARM template into the PROCLIB</description>
	        <runAsUser substitution="true">$!{instance-UKO_ADMIN_SERVER}</runAsUser>
	        <approver substitution="true">$!{instance-UKO_APPROVER_SERVER}</approver>
        	<instructions substitution="true">Submit JCL to execute step</instructions>
            <weight>5</weight>
            <autoEnable>true</autoEnable>
            <template>
               <fileTemplate substitution="true">jcl/copy-agent-config.jcl</fileTemplate>
               <submitAs>JCL</submitAs>
               <maxLrecl>80</maxLrecl>
          </template>
        </step> 

    	<step name="createAgentProc">
            <title>Create Agent Proc</title>
            <description>Create the agent proc</description>
       		<runAsUser substitution="true">$!{instance-UKO_ADMIN_TSO}</runAsUser>
       		<approver substitution="true">$!{instance-UKO_APPROVER_TSO}</approver>
            <variableValue name="UKO_ZOS_PROCLIB" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="UKO_AGENT_RUN_HLQ" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="TCPIP_HLQ" scope="instance" noPromptIfSet="false" required="false"/>
        	<instructions substitution="true">Submit JCL to execute step</instructions>
            <weight>5</weight>
            <autoEnable>true</autoEnable>
            <template>
               <fileTemplate substitution="true">jcl/create-agent-proc.jcl</fileTemplate>
               <submitAs>JCL</submitAs>
               <maxLrecl>80</maxLrecl>
          </template>
        </step>
	</step>

    <step name="configureSecurity">
    	<title>Configure Security for UKO agent</title>
    	<description>Configure security for UKO agent and related resources</description>

        <step name="configureSAFSecurityProfiles">
            <title>Configure SAF Security</title>
            <description>Configure UKO agent Security</description>
            <runAsUser substitution="true">$!{instance-UKO_ADMIN_SECURITY}</runAsUser>
            <approver substitution="true">$!{instance-UKO_APPROVER_SECURITY}</approver>
            <variableValue name="UKO_AGENT_STC_NAME" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="UKO_AGENT_STC_USER" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="UKO_AGENT_STC_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="UKO_AGENT_CLIENT_USER" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="UKO_AGENT_CLIENT_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
            <instructions substitution="true">Submit rexx exec to execute step</instructions>
            <weight>1</weight>
            <autoEnable>true</autoEnable>
            <template>
                <fileTemplate substitution="true">extensions/defineSecurity.rexx</fileTemplate>
                <submitAs maxRc="0">TSO-REXX-JCL</submitAs>
                <maxLrecl>1024</maxLrecl>
            </template>
        </step>

        <step name="defineIcsfAccess">
            <title>Define access to ICSF</title>
            <description>Define the profiles in the CSFSERV class and grant access</description>
            <runAsUser substitution="true">$!{instance-UKO_ADMIN_SECURITY}</runAsUser>
            <approver substitution="true">$!{instance-UKO_APPROVER_SECURITY}</approver>
            <instructions>Executes a REXX program to create profiles and grant access</instructions>
            <weight>1</weight>
            <autoEnable>true</autoEnable>
            <template>
                <fileTemplate substitution="true">extensions/defineIcsfAccess.rexx</fileTemplate>
                <submitAs maxRc="4">TSO-REXX-JCL</submitAs>
                <maxLrecl>1024</maxLrecl>
            </template>
        </step>

        <step name="defineLinkEncryption">
            <title>Define link encryption</title>
            <description>Define link encryption between the agent and clients</description>
            <runAsUser substitution="true">$!{instance-UKO_ADMIN_SECURITY}</runAsUser>
            <approver substitution="true">$!{instance-UKO_APPROVER_SECURITY}</approver>
            <variableValue name="UKO_SERVER_PUBLIC_KEY_HASH" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="UKO_AGENT_STC_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
            <instructions substitution="true">Submit rexx exec to execute step</instructions>
            <weight>1</weight>
            <autoEnable>true</autoEnable>
            <template>
                <fileTemplate substitution="true">extensions/defineLinkEncryption.rexx</fileTemplate>
                <submitAs maxRc="0">TSO-REXX-JCL</submitAs>
                <maxLrecl>1024</maxLrecl>
            </template>
        </step>

        <step name="defineKeyAccess">
            <title>Key prefix creation</title>
            <description>Create entry in CSFKEYS class and grant access</description>
            <runAsUser substitution="true">$!{instance-UKO_ADMIN_SECURITY}</runAsUser>
            <approver substitution="true">$!{instance-UKO_APPROVER_SECURITY}</approver>
            <variableValue name="UKO_KEY_PREFIX" scope="instance" noPromptIfSet="false" required="false"/>
            <instructions>Executes a REXX program to create the key prefix</instructions>
            <weight>1</weight>
            <autoEnable>true</autoEnable>
            <template>
                <fileTemplate substitution="true">extensions/defineKeyAccess.rexx</fileTemplate>
                <submitAs maxRc="4">TSO-REXX-JCL</submitAs>
                <maxLrecl>1024</maxLrecl>
            </template>
        </step>


	</step>

    <step name="startAgent">
        <title>Start the agent</title>
        <description>Start the agent</description>

        <step name="validateConsoleAPI" optional="false">
            <title>Validating console commands can be issued</title>
            <description>Issue a command via the console API to ensure basic commands can be executed.</description>
            <runAsUser substitution="true">$!{instance-UKO_ADMIN_CONSOLE}</runAsUser>
            <approver substitution="true">$!{instance-UKO_APPROVER_CONSOLE}</approver>
            <condition>
                <expression><![CDATA["1" == "1"]]></expression>
                <description>Should the step be executed, based on the START_AGENT setting</description>
                <targetStateSet>
                  <description/>
                    <extendStateExpression>
                        <description>Skip if START_AGENT == false</description>
                      <expression><![CDATA[ ${instance-START_AGENT} == "false"]]></expression>
                        <targetState>Skipped</targetState>
                    </extendStateExpression>
                </targetStateSet>
            </condition>
            <variableValue name="UKO_AGENT_STC_NAME" scope="instance" noPromptIfSet="false" required="false"/>
            <instructions>Execute console API to check if its set up correctly</instructions>
            <weight>1</weight>
            <skills>z/OS administration</skills>
            <autoEnable>true</autoEnable>
            <rest>
                <httpMethod>PUT</httpMethod>
                <uriPath substitution="true">/zosmf/restconsoles/consoles/defcn</uriPath>
                <requestBody substitution="true">
                    { 
                      "cmd" : "d a,${instance-UKO_AGENT_STC_NAME}",
                      "sol-key" : "NOT FOUND",
                      "system" : "${_workflow-systemName}"
                      
                    }
                </requestBody>
                <expectedStatusCode>200</expectedStatusCode>
                <propertyMapping mapTo="UKO_REST_STATUS">["sol-key-detected"]</propertyMapping>
            </rest>
        </step>    

        <step name="startAgent_console">
        	<title>Start the agent from console</title>
        	<description>Start the agent from the console</description>
        	<runAsUser substitution="true">$!{instance-UKO_ADMIN_CONSOLE}</runAsUser>
	        <approver substitution="true">$!{instance-UKO_APPROVER_CONSOLE}</approver>
	        <condition>
      			<expression><![CDATA["1" == "1"]]></expression>
				<description>Should the step be executed, based on the START_AGENT setting</description>
				<targetStateSet>
					<description/>
	      			<extendStateExpression>
	      				<description>Skip if START_AGENT == false</description>
	            		<expression><![CDATA[ ${instance-START_AGENT} == "false"]]></expression>
	      				<targetState>Skipped</targetState>
	      			</extendStateExpression>
				</targetStateSet>
			</condition>
     		<instructions substitution="false">Submitting script to stop the server.</instructions>
        	<weight>1</weight>
        	<autoEnable>true</autoEnable>
        	<rest>
				<httpMethod>PUT</httpMethod>
				<uriPath substitution="true">/zosmf/restconsoles/consoles/defcn</uriPath>
				<requestBody substitution="true">
				  {
				    "cmd" : "START ${instance-UKO_AGENT_STC_NAME}",
				    "unsol-key" : "CONSOLE INTERFACE READY",
				    "unsol-detect-sync" : "Y",
				    "unsol-detect-timeout" : "120",
				    "detect-time" : "120",
				    "system" : "${_workflow-systemName}"
				    
				  }	
				</requestBody>
				<expectedStatusCode>200</expectedStatusCode>
				<propertyMapping mapTo="AGENT_REST_STATUS">["status"]</propertyMapping>
			</rest>
    	</step>
    	
    	<step name="CheckStartupAgent" optional="false">
            <title>Checking the rest status from the start command</title>
            <description>Check the REST Status from the start command</description>
            <prereqStep name="startAgent_console"/>
            <runAsUser substitution="true">$!{instance-UKO_ADMIN_TSO}</runAsUser>
            <approver substitution="true">$!{instance-UKO_APPROVER_TSO}</approver>
            <condition>
                <expression><![CDATA[${startAgent_console.stepState} == "Complete" || ${startAgent_console.stepState} == "Skipped"]]></expression>
                <description>Should the step be executed based on the AGENT_REST_STATUS setting</description>
                <targetStateSet>
                    <description>Check to see whether this step should be skipped</description>
                    <extendStateExpression>
                        <description>Only execute it AGENT_REST_STATUS is not detected</description>
                        <expression><![CDATA[ ${instance-AGENT_REST_STATUS} == "detected"]]></expression>
                        <targetState>Skipped</targetState>
                    </extendStateExpression>
	      			<extendStateExpression>
	      				<description>Skip if START_AGENT == false</description>
	            		<expression><![CDATA[ ${instance-START_AGENT} == "false"]]></expression>
	      				<targetState>Skipped</targetState>
	      			</extendStateExpression>
                </targetStateSet>
            </condition>
            <instructions>Execute simple Rexx command to always return a bad returncode</instructions>
            <weight>1</weight>
            <skills>z/OS Administration</skills>
            <autoEnable>true</autoEnable>
            <template>
                <inlineTemplate substitution="true">
                    exit 8
                </inlineTemplate>
                <submitAs maxRc="0">TSO-REXX-JCL</submitAs>
            </template>
        </step> 
    </step>

</workflow>