//*********************************************************************
//*  NAME = DSNTEJ1L
//*
//*  DESCRIPTIVE NAME = DB2 SAMPLE APPLICATION
//*                     PHASE 1
//*                     L/E
//*
//*    Licensed Materials - Property of IBM
//*    5650-DB2
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 12
//*
//*  FUNCTION = THIS JCL CREATES THE DSNTEP2 LOAD MODULE FROM THE
//*             SHIPPED OBJECT DECK, DSNTEP2L, AND LINKS THE
//*             PACKAGE AND PLAN FOR THIS VERSION OF DSNTEP2.
//*
//*           = THIS JCL ALSO CREATES THE DSNTEP4 LOAD MODULE FROM
//*             THE SHIPPED OBJECT DECK, DSNTEP4L, AND LINKS THE
//*             PACKAGE AND PLAN FOR THIS VERSION OF DSNTEP4.
//*
//*         THIS JOB IS RUN AFTER DSNTEJ1.
//*
//*   NOTE: IF YOU RUN THIS JOB, YOU DO NOT NEED TO RUN THE SAMPLE
//*         JOB DSNTEJ1P EXCEPT TO PREPARE CUSTOMIZED VERSIONS OF
//*         THE DSNTEP2 AND DSNTEP4 SOURCE CODE (YOU NEED A PL/I
//*         COMPILER TO RUN DSNTEJ1P SUCCESSFULLY).
//*
//*  CHANGE ACTIVITY =
//*    08/18/2014 Single-phase migration            s21938_inst1 s21938
//*    02/15/2016 Long data set names                           PI42601
//*
//*********************************************************************
//JOBLIB   DD DISP=SHR,DSN=${DSNLOAD}
#if (${LERUN}!="")
//         DD DISP=SHR,DSN=${LERUN}
#end
//*
//*        STEP 1 : CREATE DSNTEP2 LOADMOD FROM DSNTEP2L OBJECT DECK
//*
//PH01LS01 EXEC PGM=IEWL,PARM='XREF'
//SYSLIB   DD DISP=SHR,DSN=${LELKED}
//         DD DISP=SHR,DSN=${DSNLOAD}
//SDSNSAMP DD DISP=SHR,
//         DSN=${DSNSAMP}(DSNTEP2L)
//SYSLMOD  DD DISP=SHR,
//         DSN=${RUNLIB}(DSNTEP2)
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSUT1   DD #unit("${TVOLDEVT}",",")SPACE=(1024,(50,50))
//SYSLIN   DD *
     INCLUDE SDSNSAMP(DSNTEP2L)
     INCLUDE SYSLIB(DSNELI)
     NAME DSNTEP2(R)
//*
//*        STEP 2 : BIND AND RUN PROGRAM DSNTEP2, TO
//*                 PRINT THE TABLES
//*
//PH01LS02 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//DBRMLIB  DD DISP=SHR,DSN=${DSNSAMP}
//SYSTSPRT DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSTSIN  DD *
 DSN SYSTEM(${GRPATTNM})
 BIND PACKAGE (DSNTEP2) MEMBER(DSN@EP2L) APPLCOMPAT(V12R1) +
#if (${IVPPKOWN}!="")
       OWNER(${IVPPKOWN}) QUALIFIER(DSN81210) +
#end
      CURRENTDATA(NO) ACT(REP) ISO(CS) ENCODING(EBCDIC)
 BIND PLAN(DSNTEP12)  PKLIST(#pf(${DDSTART})DSNTEP2.*) +
#if (${IVPPKOWN}!="")
       OWNER(${IVPPKOWN}) QUALIFIER(DSN81210) +
#end
      ACTION(REPLACE) RETAIN +
      CURRENTDATA(NO) ISO(CS) ENCODING(EBCDIC) SQLRULES(DB2)
 RUN  PROGRAM(DSNTEP2) PLAN(DSNTEP12) +
      LIB('${RUNLIB}') +
      PARMS('/ALIGN(MID)')
 END
//*
//SYSIN    DD *
    SET CURRENT SQLID = '${IVPSQLID}';
    GRANT EXECUTE, BIND ON PLAN DSNTEP12
      TO ${IVPGRLST};
    SELECT EMPNO, FIRSTNME, MIDINIT, LASTNAME,
      WORKDEPT, PHONENO, HIREDATE, JOB, EDLEVEL,
      SEX, BIRTHDATE, SALARY, BONUS, COMM,
      SALARY+BONUS+COMM AS TOTAL_SALARY
     FROM EMP
     ORDER BY TOTAL_SALARY;
    SELECT * FROM DEPT;
    SELECT * FROM ACT;
    SELECT * FROM EMPPROJACT;
    SELECT * FROM PROJ;
    SELECT * FROM PROJACT;
//*
//*        STEP 3 : CREATE DSNTEP4 LOADMOD FROM DSNTEP4L OBJECT DECK
//*
//PH01LS03 EXEC PGM=IEWL,COND=(4,LT),PARM='XREF'
//SYSLIB   DD DISP=SHR,DSN=${LELKED}
//         DD DISP=SHR,DSN=${DSNLOAD}
//SDSNSAMP DD DISP=SHR,
//         DSN=${DSNSAMP}(DSNTEP4L)
//SYSLMOD  DD DISP=SHR,
//         DSN=${RUNLIB}(DSNTEP4)
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSUT1   DD #unit("${TVOLDEVT}",",")SPACE=(1024,(50,50))
//SYSLIN   DD *
     INCLUDE SDSNSAMP(DSNTEP4L)
     INCLUDE SYSLIB(DSNELI)
     NAME DSNTEP4(R)
//*
//*        STEP 4 : BIND AND RUN PROGRAM DSNTEP4, TO
//*                 PRINT THE TABLES
//*
//PH01LS04 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//DBRMLIB  DD DISP=SHR,DSN=${DSNSAMP}
//SYSTSPRT DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSTSIN  DD *
 DSN SYSTEM(${GRPATTNM})
 BIND PACKAGE (DSNTEP4) MEMBER(DSN@EP4L) APPLCOMPAT(V12R1) +
#if (${IVPPKOWN}!="")
       OWNER(${IVPPKOWN}) QUALIFIER(DSN81210) +
#end
      CURRENTDATA(NO) ACT(REP) ISO(CS) ENCODING(EBCDIC)
 BIND PLAN(DSNTP412)  PKLIST(#pf(${DDSTART})DSNTEP4.*) +
#if (${IVPPKOWN}!="")
       OWNER(${IVPPKOWN}) QUALIFIER(DSN81210) +
#end
      ACTION(REPLACE) RETAIN +
      CURRENTDATA(NO) ISO(CS) ENCODING(EBCDIC) SQLRULES(DB2)
 RUN  PROGRAM(DSNTEP4) PLAN(DSNTP412) +
      LIB('${RUNLIB}') +
      PARMS('/ALIGN(MID)')
 END
//*
//SYSIN    DD *
    SET CURRENT SQLID = '${IVPSQLID}';
    GRANT EXECUTE, BIND ON PLAN DSNTP412
      TO ${IVPGRLST};
    SELECT EMPNO, FIRSTNME, MIDINIT, LASTNAME,
      WORKDEPT, PHONENO, HIREDATE, JOB, EDLEVEL,
      SEX, BIRTHDATE, SALARY, BONUS, COMM,
      SALARY+BONUS+COMM AS TOTAL_SALARY
     FROM EMP
     ORDER BY TOTAL_SALARY;
    SELECT * FROM DEPT;
    SELECT * FROM ACT;
    SELECT * FROM EMPPROJACT;
    SELECT * FROM PROJ;
    SELECT * FROM PROJACT;
//*
## Macro to get the UNIT parameter of a DD statement.
## $device is the device type.
## $pad is the string to be padded on the right.
#macro(unit $devtype $pad)
#if($devtype != "")UNIT=${devtype}${pad}#{else}#{end}
#end
## Macro to get the prefix of the packages in PKLIST of DSNExxxx
## $ddstart is DDF startup option
## return *. if $ddstart is AUTO or COMMAND
## otherwise, return blank
#macro(pf $ddstart)
#if (($ddstart == "AUTO") || ($ddstart == "COMMAND"))
*.#else#end#end
## Macro to append suffix for data sets
## $suffix is the data set suffix
## return the suffix with the right period
#macro (libs $suffix)
#if ($suffix !=  "")
.$suffix#else#end#end
