## -------------------------------------------------------------------------------------------------------------------------
## -- Section 0: Variables in sections 2 to 10 apply to both install and provision mode.                                  --
## --            Special mode dependent requirements are noted.                                                           --
## -------------------------------------------------------------------------------------------------------------------------
## "INSTYPE": INSTALLATION TYPE
## The INSTYPE is the type for which the workflow input variable file is used. The accepted values are "MNDS", "MDS1", "MDSS", "MNFM", "INDS", "IDS1", "IDSS"
INSTYPE=IDS1
## -------------------------------------------------------------------------------------------------------------------------
## -- Section 1: Variables to support provisioning instantiation.                                                         --
## --            This section applies to provisioning mode only.                                                          --
## --            Do not modify values in this section.                                                                    --
## -------------------------------------------------------------------------------------------------------------------------
## -- No Related Panel --
## "AUTOGEN": AUTOGEN
## Whether to automate processing: true | false  -- Default false
AUTOGEN=true
## "AGGROUP": AGGROUP
## Whether this is the originating member of a Db2 data sharing group or a non-data sharing Db2 subsystem. Acceptable values: true | false</description>
AGGROUP=true
## "AGICHLQ": PROVISION IMAGE COPY HLQ
## The HLQ for image copy data sets during provisioning -- (ssidCP1.&DB..&SN..&IC.&JU..&UQ.).
AGICHLQ=
## "AGJDBC": ENABLE JDBC
## Whether to enable JDBC and run verification steps: true | false  -- Default false
AGJDBC=false
## "AGODBC": ENABLE ODBC
## Whether to enable ODBC and run verification steps: true | false  -- Default false
AGODBC=false
## "AGREST": ENABLE DB2 REST SERIVCES
## Whether to enable Db2 REST services: true | false  -- Default false
AGREST=false
## "IRLMISEQ": IRLM ID SEQUENCE
## The IRLMISEQ variable is used to track the unique ID number that uniquely names an IRLM member within an IRLM data sharing group. The value of IRLMISEQ is incremented with every data sharing group member provisioned, with the exception of the originating DSG member.
IRLMISEQ=1
## "PPROCLIB": PRIVATE PROCLIB
## The procedure library allocated for provisioning to contain JCL procedures for program preparation and utilities invocation. The value of this variable is generated during provisioning.
PPROCLIB=
## -- PANEL DSNTIPAP (PROVISIONING PREFERENCES AND DATA SET NAMES) --
## "AGSSIDPX" on panel DSNTIPAP: DB2 COMMAND PREFIX FIRST CHARACTER
## The first character of the generated command prefix for the provisioned Db2 system.
AGSSIDPX=-
## "AGNEWIDS" on panel DSNTIPAP: DATA SET OR LIBRARY QUALIFIER
## The intermediate qualifier for the data set or library for customized copies of Db2 target library members during provisioning. By default, it is the NEW in the generated library name prefix.NEW.ssid.SDSNCLST for the field CLIST LIBRARY on panel DSNTIPT.
AGNEWIDS=NEW
## -------------------------------------------------------------------------------------------------------------------------
## -- Section 2: Db2 function level                                                                                       --
## -------------------------------------------------------------------------------------------------------------------------
## -- PANEL DSNTIP00 (ACTIVATE A FUNCTION LEVEL FOR DB2) --
## "FUNCLVL" on panel DSNTIP00: DB2 FUNCTION LEVEL
## The DB2 FUNCTION LEVEL field specifies the DB2 function level you want to activate.
FUNCLVL=V12R1M504
## "APCO" on panel DSNTIP00: APPL COMPAT LEVEL
## The APPL COMPAT LEVEL field specifies the default release level value of the APPLCOMPAT BIND and REBIND option.
APCO=V12R1M504
## "SQLL" on panel DSNTIP00: PRECOMPILER SQL LEVEL
## Corresponds to the SQLLEVEL application programming defaults (a.k.a. DSNHDECP) parameter SQLLEVEL.  Specifies the DB2 function level to be used by the precompiler and coprocessor in the absence of the SQLLEVEL option. DB2 uses this parameter only to set the SYSIBM.DEFAULT_SQLLEVEL global variable. In most cases set this field to current DB2 function level.
SQLL=V12R1M504
## -------------------------------------------------------------------------------------------------------------------------
## -- Section 3: Db2 install data sets prefix/HLQ.                                                                        --
## --            o For non-data sharing system provisioning:                                                              --
## --              - INSDSPRE & INSICPRE respective values will be concatenated with the instantiated ssid:               --
## --                INSDSPRE.ssid, INSICPRE.ssid.                                                                        --
## --              - The maximum length of a complete HLQ entered for this variable is 12 characters,                     --
## --                including the periods.                                                                               --
## --            o For data sharing system provisioning:                                                                  --
## --              - INSDSPRE & INSICPRE values are generated during provisioning. Do not modify values in this section.  --
## -------------------------------------------------------------------------------------------------------------------------
## -- PANEL DSNTIPG1 (INSTALLATION PREFERENCES PANEL 2) --
## "INSICPRE" on panel DSNTIPG1: INSTALL IC PREFIX
## The INSTALL IC PREFIX field specifies the prefix for image copy data sets that are created by DB2 installation and IVP jobs.
INSICPRE=
## "INSDSPRE" on panel DSNTIPG1: INSTALL DS PREFIX
## The INSTALL DS PREFIX field specifies the prefix for most data sets that are created by most DB2 installation and IVP jobs, including non-VSAM data sets created by job DSNTIJIN in provisioning mode.
INSDSPRE=
## -------------------------------------------------------------------------------------------------------------------------
## -- Section 4: Db2 authorization IDs                                                                                    --
## -------------------------------------------------------------------------------------------------------------------------
## -- PANEL DSNTIPG (INSTALLATION PREFERENCES) --
## "AUTHID" on panel DSNTIPG: ROUTINES CREATOR
## The ROUTINES CREATOR field specifies the CURRENT SQLID setting that is to be used when creating, configuring, and validating most DB2-supplied routines. This field also specifies the default OWNER that is to be used when binding packages for these routines.
AUTHID=id_for_above
## "SECDEFID" on panel DSNTIPG: SEC DEF CREATOR
## The value of the SEC DEF CREATOR field specifies the CURRENT SQLID setting that is to be used when creating and configuring DB2-supplied routines that are defined with the SECURITY DEFINER option.
SECDEFID=id_for_above
## "INSSQLID" on panel DSNTIPG: INSTALL SQL ID
## The INSTALL SQL ID field specifies the CURRENT SQLID setting that is to be used when SQL is processed by most DB2 installation and sample jobs.
INSSQLID=id_for_above
## "INSPKOWN" on panel DSNTIPG: INSTALL PKG OWNER
## The INSTALL PKG OWNER field specifies the authorization ID to assign as the owner of packages and plans that are bound by most installation and sample jobs.
INSPKOWN=id_for_above
## "INSGRLST" on panel DSNTIPG: INSTALL GRANTEE(S)
## The INSTALL GRANTEE(S) field specifies the authorization IDs that are to be granted access to objects that are created and bound by most installation and sample jobs.
INSGRLST=PUBLIC_or_list_of_ids_for_above
## "IVPSQLID" on panel DSNTIPG: IVP SQL ID
## Specifies the CURRENT SQLID setting when SQL is processed by most DB2 sample jobs
IVPSQLID=id_for_above
## "IVPPKOWN" on panel DSNTIPG: IVP PACKAGE OWNER
## Specifies the authorization ID to be assigned as the owner of packages and plans that are bound by DB2 sample jobs.
IVPPKOWN=id_for_above
## "IVPGRLST" on panel DSNTIPG: IVP GRANTEE(S)
## Specifies the authorization IDs that are to be granted access to objects created and bound by DB2 sample jobs.
IVPGRLST=PUBLIC_or_list_of_ids_for_above
## "AGEXECID" on panel DSNTIPG: PROVISION EXEC ID
## The default ID for executing steps in a provisioning workflow.
AGEXECID=id_exec_steps_of_workflow
## -- PANEL DSNTIPP1 (PROTECTION) --
## "PROTADMN" on panel DSNTIPP1: SYSTEM ADMIN 1
## The SYSADM subsystem parameter specifies the first of two authorization IDs that are to have installation SYSADM authority.
PROTADMN=id_for_above
## "PROTADM2" on panel DSNTIPP1: SYSTEM ADMIN 2
## The SYSADM2 subsystem parameter specifies the second of two authorization IDs that are to have installation SYSADM authority.
PROTADM2=id_for_above
## "PROTOPR1" on panel DSNTIPP1: SYSTEM OPERATOR 1
## The SYSOPR1 subsystem parameter specifies the first of two authorization IDs that are to have installation SYSOPR authority.
PROTOPR1=id_for_above
## "PROTOPR2" on panel DSNTIPP1: SYSTEM OPERATOR 2
## The SYSOPR2 subsystem parameter specifies the second of two system operators that are to have installation SYSOPR authority.
PROTOPR2=id_for_above
## "SECADMN1" on panel DSNTIPP1: SECURITY ADMIN 1
## The SECADM1 subsystem parameter specifies the first of two authorization IDs or roles that are to have DB2 security administrator authority. In the SEC ADMIN 1 TYPE field, specify whether this entry is an authorization ID or a role.
SECADMN1=id_for_above
## "SECADMN2" on panel DSNTIPP1: SECURITY ADMIN 2
## The SECADM2 subsystem parameter specifies the second of two authorization IDs or roles that are to have DB2 security administrator authority. In the SEC ADMIN 2 TYPE field, specify whether this entry is an authorization ID or a role.
SECADMN2=id_for_above
## -- PANEL DSNTIPM5 (Z/OSMF JCL TEMPLATE CUSTOMIZATION) --
## "CONSNAME" on panel DSNTIPM5: CONSOLE NAME
## The CONSNAME variable specifies the name of a z/OS operator's console which is used to START DB2 in the job DSNTIJSA/DSNTIJSM and STOP DB2 in the job DSNTIJSO/DSNTIJSC.
CONSNAME=id_for_above
## -- PANEL DSNTIPRM (DB2 optimization routines) --
## "RTM05PKO"  on panel DSNTIPRM: DSNAHVPM PACKAGE OWNER
## Specify the ID that should own the package for the SYSPROC.DSNAHVPM stored procedure, that is the value of the OWNER parameter in the BIND PACKAGE command for DSNAHVPM.  At a minimum, this ID needs to have SELECT authority on the SYSIBM.SYSPACKSTMT and SYSIBM.SYSSTMT catalog tables.
RTM05PKO=id_for_above
## -------------------------------------------------------------------------------------------------------------------------
## -- Section 5: Db2 product SMP/E target libraries                                                                       --
## -------------------------------------------------------------------------------------------------------------------------
## -- PANEL DSNTIPA1 (DB2 VERSION 12 INSTALL, UPDATE, MIGRATE AND PROVISION - MAIN PANEL) --
## "DSNTLIBP" on panel DSNTIPA1: LIBRARY NAME PREFIX
## The LIBRARY NAME PREFIX field specifies the input prefix for the SDSNLOAD, SDSNMACS, SDSNSAMP, SDSNDBRM, and SDSNCLST libraries.
DSNTLIBP=prefix_of_smpe_target_library
## "DSNTLIBS" on panel DSNTIPA1: LIBRARY NAME SUFFIX
## The LIBRARY NAME SUFFIX field specifies a suffix for the names of the libraries that are to be used by installation and sample jobs.
DSNTLIBS=sufix_of_smpe_target_library
## -- PANEL DSNTIPAP (PROVISIONING PREFERENCES AND DATA SET NAMES) --
## "DSNPFPE" on panel DSNTIPAP: ENGLISH TASK AND PANELS LIBRARY
## Specifies the data set name of SDSNPFPE. SDSNPFPE is the SMP/E target library for the Db2, which contains the English task and help panels
DSNPFPE=db2_sdsnpfpe_smpe_target_library
## "DSNSPFM" on panel DSNTIPAP: ISPF MESSAGE LIBRARY
## Specifies the data set name of SDSNSPFM. SDSNSPFM is the SMP/E target library for the Db2, which contains messages that are issued during installation or migrate processing.
DSNSPFM=db2_sdsnspfm_smpe_target_library
## "DSNSPFP" on panel DSNTIPAP: ISPF INSTALL TASK AND PANELS LIBRARY
## Specifies the data set name of SDSNSPFP. SDSNSPFP is the SMP/E target library for the Db2 ISPF installation task and help routing panels.
DSNSPFP=db2_sdsnspfp_smpe_target_library
## "DSNSPFS" on panel DSNTIPAP: ISPF SKELETON LIBRARY
## Specifies the data set name of SDSNSPFS. SDSNSPFS is the SMP/E target library for the Db2 ISPF skeleton that is used to produce EDITJCL.
DSNSPFS=db2_sdsnspfs_smpe_target_library
## "DSNSPFT" on panel DSNTIPAP: ISPF COMMAND TABLE LIBRARY
## Specifies the data set name of SDSNSPFT. SDSNSPFT is the SMP/E target library for the Db2 ISPF command table.
DSNSPFT=db2_sdsnspft_smpe_target_library
## -- PANEL DSNTIPT (DB2 DATA SET NAMES) --
## "DSNLINK" on panel DSNTIPT: LINK LIST LIBRARY
## The LINK LIST LIBRARY field specifies the name of the APF-authorized DB2 early code library.
DSNLINK=db2_sdsnlink_smpe_target_library
## "DSNLOAD" on panel DSNTIPT: LOAD LIBRARY
## The value of the LOAD LIBRARY field specifies the name of the main APF-authorized DB2 load module library that is to be used by installation and sample jobs.
DSNLOAD=db2_sdsnload_smpe_target_library
## "DSNLOD2" on panel DSNTIPT: JDBC AND SQLJ DLLS
## The JDBC AND SQLJ DLLS field specifies the name of the main APF-authorized DLL library for DB2 Java support. This library is used by installation and sample jobs and some of the stored procedures that are provided by DB2.
DSNLOD2=db2_sdsnlod2_smpe_target_library
## "DSNMACS" on panel DSNTIPT: MACRO LIBRARY
## The value of the MACRO LIBRARY field specifies the name of the macro library that is to be used by installation and sample jobs. This library contains the CICS and IMS attachment facility macros, the initialization parameter macros, and some data-mapping macros that are needed for some applications.
DSNMACS=db2_sdsnmacs_smpe_target_library
## "DSNEXIT" on panel DSNTIPT: EXIT LIBRARY
## The value of the EXIT LIBRARY field specifies the name of the library where your DSNZPxxx module, application defaults load module (dsnhdecp), and exit routines are to be placed.
DSNEXIT=db2_sdsnexit_smpe_target_library
## "DSNDBRM" on panel DSNTIPT: DBRM LIBRARY
## The value of the DBRM LIBRARY field identifies the name of the library where the DBRMs that are shipped with DB2 are to be placed.
DSNDBRM=db2_sdsndbrm_smpe_target_library
## "DSNIRLM" on panel DSNTIPT: IRLM LOAD LIBRARY
## The value of the IRLM LOAD LIBRARY field specifies the name of the IRLM load library data set that is to be used in the IRLM procedure.
DSNIRLM=irlm_reslib_smpe_target_library
## "DSNIVPD" on panel DSNTIPT: IVP DATA LIBRARY
## The value of the IVP DATA LIBRARY field specifies the data set name of SDSNIVPD. SDSNIVPD is the SMP/E target library for the DB2 installation verification procedure (IVP) input data and for the expected output from the sample applications.
DSNIVPD=db2_sdsnivpd_smpe_target_library
## "DSNCHDRS" on panel DSNTIPT: INCLUDE LIBRARY
## The value of the INCLUDE LIBRARY field identifies the name of the include library data set that is to be used by sample and installation jobs.
DSNCHDRS=db2_sdsnc_h_smpe_target_library
## -- No Related Panel --
## "DSNCLIST": CLIST LIBRARY - prefix.SDSNCLST
## The value of the CLIST LIBRARY - prefix.SDSNCLST variable specifies the name of the library where the CLISTs and REXX execs that are shipped with DB2 are to be placed.
DSNCLIST=db2_sdsnclst_smpe_target_library
## "DSNSAMP" : SAMPLE LIBRARY - prefix.SDSNSAMP
## The value of the SAMPLE LIBRARY - prefix.SDSNSAMP variable specifies the name of the JCL library which is used by sample and installation jobs.
DSNSAMP=db2_sdsnsamp_smpe_target_library
## -------------------------------------------------------------------------------------------------------------------------
## -- Section 6: Db2 Java properties                                                                                      --
## -------------------------------------------------------------------------------------------------------------------------
## -- PANEL DSNTIPX1 (DB2 JAVA PROPERTIES)
## "JAVAHOME" on panel DSNTIPX1: Z/OS SDK HOME DIR
## The Z/OS SDK HOME DIR field specifies the absolute path of the HFS/zFS directory where the z/OS Java Software Development Kit (SDK) resides. This directory is provided by z/OS and is referenced by the JAVA_HOME variable in the file specified in the JAVA ENV VAR FILE field.
JAVAHOME=javahome_directory
## "CLASPATH" on panel DSNTIPX1: Z/OS USS JAVA CLASSES
## The Z/OS USS JAVA CLASSES field specifies the absolute path of the HFS/zFS directory that contains jar files provided by z/OS Unix System Services (z/OS Unix). Verify that this directory contains the jar files gxljapi.jar (z/OS XML System Services XML schema registration) and IRRRacf.jar (Java interface to the system security product). This directory is provided by z/OS and is referenced by the CLASSPATH variable in the file specified in the JAVA ENV VAR FILE field.
CLASPATH=java_classes_directory
## "LIBPATH" on panel DSNTIPX1: Z/OS USS JAVA RUNTIME
## The Z/OS USS JAVA RUNTIME field specifies the absolute path of the HFS/zFS directory that contains the native library (DLLs) provided by z/OS Unix System Services (z/OS Unix). Verify that this directory contains libGXLNVBAT.so, the DLL for z/OS XML System Services. This directory is provided by z/OS and is referenced by the LIBPATH variable in the file specified in the JAVA ENV VAR FILE field.
LIBPATH=java_runtime_directory
## "JCCHOME" on panel DSNTIPX1: JDBC/SQLJ ENV VAR DIR
## The JDBC/SQLJ ENV VAR DIR field specifies the absolute path of the highest-level directory in the set of HFS/zFS directories that contain the classes and other objects for the IBM Data Server Driver for JDBC and SQLJ. This directory and its subdirectories are typically managed by SMP/E. It is referenced by the JCC_HOME variable in the file specified in the JAVA ENV VAR FILE field. Within the directory specified here, the subdirectories bin (contains the runtime objects for the IBM Data Server Driver for JDBC and SQLJ), classes (contains the jar files for the IBM Data Server Driver for JDBC and SQLJ), and lib (contains the DLLs for the IBM Data Server Driver for JDBC and SQLJ) are used for Db2 configuration. This directory set exists only if you have received and applied JDBCC12, the FMID for Db2 12 JDBC/SQLJ.
JCCHOME=jcchome_directory
## "JCCSID" on panel DSNTIPX1: JDBC/SQLJ INSTALL ID
## The JDBC/SQLJ INSTALL ID field specifies the ID for connecting to Db2 using a secure signon and a RACF PassTicket for authentication.  The ID will be used for binding the IBM Data Server Driver for JDBC and SQLJ during installation or migration to Db2 and for running an installation verification procedure (IVP) to validate that JDBC and SQLJ are deployed correctly on Db2.
JCCSID=id_for_Db2_connection_for_jdbc_bind_and_verify
## "DB2BASE" on panel DSNTIPX1: DB2 BASE JAVA DIR
## The DB2 BASE JAVA DIR field specifies the absolute path of the highest-level directory in the set of HFS/zFS directories that contain the DB2 for z/OS-supplied Java classes, native methods (DLLs), and samples. This directory and its subdirectories are typically managed by SMP/E. It is referenced by the DB2_BASE variable in the file specified in the JAVA ENV VAR FILE field.  Within the directory specified here, the subdirectories classes (contains the DB2 base-supplied jar files), lib (contains the DB2 base-supplied DLLs), and samples (contains the DB2 base-supplied sample objects) are used for Db2 configuration.
DB2BASE=db2base_directory
## "JVMAMODE" on panel DSNTIPX1: JVM ADDRESSING MODE
## The JVM ADDRESSING MODE field indicates whether DSNWLMJ, the address space proc for DSNWLM_JAVA, should be configured to request a 32-bit or a 64-bit JVM. When this field is set to 32, DSNTIJMW is configured to add DSNWLMJ with NUMTCB set to 5 and the started WLM module set to DSNX9WLM. When this field is set to 64, DSNTIJMW is configured to add DSNWLMJ with NUMTCB set to 25 and the started WLM module set to DSNX9WJM.
JVMAMODE=jvm_addressing_mode
## "JVMHEAP" on panel DSNTIPX1: INIT JAVA HEAP SIZE
## The INIT JAVA HEAP SIZE indicates the size in megabytes of the initial Java heap (the middleware heap within non-system heap) for the JVM used by the DSNWLM_JAVA WLM environment. This value is assigned to the -Xms option in the JVM startup options file specified in the JVM PROPERTIES FILE field.
JVMHEAP=256
## "JVMAPPH" on panel DSNTIPX1: MAX APPL HEAP SIZE
## The MAX APPL HEAP SIZE indicates the maximum size in megabytes of memory for application work (non-system heap) in the JVM used by the DSNWLM_JAVA WLM environment.  This value is assigned to the -Xmx option in the JVM startup options file specified in the JVM PROPERTIES FILE field.
JVMAPPH=256
## -------------------------------------------------------------------------------------------------------------------------
## -- Section 7: Host language data sets                                                                                  --
## -------------------------------------------------------------------------------------------------------------------------
## -- PANEL DSNTIPU (HOST LANGUAGE DATA SET NAMES PANEL 1) --
## "LERUN" on panel DSNTIPU: IBM LE RUNTIME LIBRARY
## The IBM LE RUNTIME LIBRARY field identifies the name of the IBM Language Environment dynamic run time library that is to be used by sample and installation jobs.
LERUN=ibm_le_sceerun_smpe_target_library
## "LERUN2" on panel DSNTIPU: IBM LE RUNTIME LIBRARY 2
## The IBM LE RUNTIME LIBRARY 2 field identifies the name of the IBM Language Environment dynamic run time library for programs that require the library to be in an extended partitioned data set (PDSE).
LERUN2=ibm_le_sceerun2_smpe_target_library
## "LELKED" on panel DSNTIPU: IBM LE LINK EDIT LIB
## The IBM LE LINK EDIT LIB field identifies the name of the IBM Language Environment linkage editor library that sample and installation jobs are to use.
LELKED=ibm_le_sceelked_smpe_target_library
## "LEPLMSGL" on panel DSNTIPU: IBM LE PRELINK MSG LIB
## The IBM LE PRELINK MSG LIB field identifies the data set name for messages that are to be issued by the IBM Language Environment pre-linkage editor (EDCPRLK).
LEPLMSGL=ibm_le_sceemsgp_smpe_target_library
## "ASMLIB" on panel DSNTIPU: HIGH LEVEL ASSEMBLER LIB
## The value of the HIGH LEVEL ASSEMBLER LIB field specifies the data set name of the assembler load module library. This value is to be used by sample and installation jobs.
ASMLIB=high_level_assembler_smpe_target_library
## "CPROG" on panel DSNTIPU: C/CPP COMPILER MODULE
## The C/CPP COMPILER MODULE field specifies the load module name of the C/370 or C/C++ compiler that is to be used on your system.
CPROG=CCNDRVR
## "CCOMP" on panel DSNTIPU: C/CPP COMPILER LIBRARY
## The C/CPP COMPILER LIBRARY FIELD specifies the name of the compiler library that is to be used for C/C++ or C/370.
CCOMP=ibm_c_c++_sccncmp_smpe_target_library
## "CHDRS" on panel DSNTIPU: C/CPP HEADER LIBRARY
## The C/CPP HEADER LIBRARY field specifies the name of the header include library that is to be used for C/C++ or C/370.
CHDRS=ibm_c_c++_sceeh_h_smpe_target_library
## "CMSGS" on panel DSNTIPU: C/370 COMPILER MESSAGES
## The value of the C/370 COMPILER MESSAGES field is the name of the message library that is to be used for the C/370 compiler.
CMSGS=
## "CPRLK" on panel DSNTIPU: C LE PRELINKER PHASE
## The value of the C LE PRELINKER PHASE field indicates whether to customize the DSNHC and DSNHSQL language procedures to include a procedure step that executes the IBM Language Environment prelinker.
CPRLK=NO
## "CPPPRLK" on panel DSNTIPU: CPP LE PRELINKER PHASE
## The value of the CPP LE PRELINKER PHASE field indicates whether to customize the DSNHCPP and DSNHCPP2 language procedures to include a procedure step that executes the IBM Language Environment prelinker.
CPPPRLK=NO
## "CPPHDRS" on panel DSNTIPU: CPP CLASS LIB HEADERS
## The value of the CPP CLASS LIB HEADERS field specifies the data set name for the C++ class header files.
CPPHDRS=ibm_c++_sclbh_h__smpe_target_library
## "CPPAUTCL" on panel DSNTIPU: CPP AUTO CALL LIBRARY
## The value of the CPP AUTO CALL LIBRARY field specifies the data set name of the C++ auto call library.
CPPAUTCL=ibm_c++_sceecpp_smpe_target_library
## "CPPCLASS" on panel DSNTIPU: CPP CLASS LIBRARY
## The value of the CPP CLASS LIBRARY field specifies the data set name of the C++ class library.
CPPCLASS=ibm_c++_sclbcpp_smpe_target_library
## "CPPPROC" on panel DSNTIPU: CPP PROCEDURE LIBRARY
## The value of the CPP PROCEDURE LIBRARY field specifies the data set name for the C++ procedure library.
CPPPROC=ibm_c++_sccnutl_smpe_target_library
## -- PANEL DSNTIPU1 (HOST LANGUAGE DATA SET NAMES PANEL 2) --
## "ICOBCOMP" on panel DSNTIPU1: COBOL COMPILER LIBRARY
## The value of the COBOL COMPILER LIBRARY field identifies the name of the compiler library that is to be used for COBOL.
ICOBCOMP=ibm_cobol_sigycomp_smpe_target_library
## "ICOBPRLK" on panel DSNTIPU1: COBOL LE PRELINKER PHASE
## The value of the COBOL LE PRELINKER PHASE field indicates whether to customize the DSNHICOB language procedure to include a procedure step that executes the IBM Language Environment prelinker.
ICOBPRLK=NO
## "FORTCOMP" on panel DSNTIPU1: FORTRAN COMPILER LIBRARY
## The FORTRAN COMPILER LIBRARY field identifies the data set name of the Fortran compiler library that is to be used by the DB2 installation process.
FORTCOMP=fortran_compiler_smpe_target_library
## "FORTLINK" on panel DSNTIPU1: FORTRAN LINK EDIT LIB
## The FORTRAN LINK EDIT LIB field identifies the data set name of the Fortran linkage editor library that is to be used by the DB2 installation process.
FORTLINK=fortran_vsf2fort_smpe_target_library
## "PLICOMP" on panel DSNTIPU1: PL/I COMPILER LIBRARY
## The value of the PL/I COMPILER LIBRARY field specifies the name of the PL/I compiler library that is to be used by installation and sample jobs.
PLICOMP=pl1_compiler_smpe_target_library
## "PLIPRLK" on panel DSNTIPU1: PL/I LE PRELINKER PHASE
## The value of the PL/I LE PRELINKER PHASE field indicates whether to customize the DSNHPLI language procedure to include a procedure step that executes the IBM Language Environment prelinker.
PLIPRLK=NO
## -------------------------------------------------------------------------------------------------------------------------
## -- Section 8: Other data sets                                                                                          --
## -------------------------------------------------------------------------------------------------------------------------
## -- PANEL DSNTIPW (OTHER DATA SET NAMES) --
## "MACLIB" on panel DSNTIPW: SYSTEM MACLIB
## The value of the SYSTEM MACLIB field specifies the data set name of the assembler macro library that is to be used by sample and installation jobs.
MACLIB=system_maclib_smpe_target_library
## "PROCLIB" on panel DSNTIPW: SYSTEM PROCEDURES
## The value of the SYSTEM PROCEDURES field specifies the data set name of the system procedures library that is to be used by sample and installation jobs.
PROCLIB=system_proclib_for_db2_addr_space_procs
## "SORTLIB" on panel DSNTIPW: SORT LIBRARY
## The value of the SORT LIBRARY field specifies the name of the data set where the DFSORT load module resides.
SORTLIB=system_sort_smpe_target_library
## "RESLIB" on panel DSNTIPW: IMS RESLIB
## The IMS RESLIB field identifies the data set name of the IMS linkage editor library that is to be used by sample and installation jobs.
RESLIB=ims_reslib_smpe_target_library
## "ISPLOAD" on panel DSNTIPW: ISPF ISPLINK MODULE
## The ISPF ISPLINK MODULE field identifies the data set name of the ISPF load module library that is to be used by sample and installation jobs.
ISPLOAD=ispf_sispload_smpe_target_library
## "GDDMMACS" on panel DSNTIPW: GDDM MACLIB
## The GDDM MACLIB field identifies the data set name of the GDDM macro library that is to be used by sample and installation jobs.
GDDMMACS=system_gddm_sadmsam_smpe_target_library
## "GDDMLOAD" on panel DSNTIPW: GDDM LOAD MODULES
## The GDDM LOAD MODULES field identifies the data set name of the GDDM load module library that is to be used by sample and installation jobs.
GDDMLOAD=system_gddm_sadmmod_smpe_target_library
## "CICSMOD" on panel DSNTIPW: CICS LOAD LIBRARY
## The CICS LOAD LIBRARY field identifies the data set name that is to be used for the CICS load module library.
CICSMOD=cics_load_sdfhload_smpe_target_library
## "CICSCOB" on panel DSNTIPW: CICS COBOL LIBRARY
## The CICS COBOL LIBRARY FIELD specifies the data set name for the CICS library that the COBOL programs are to use.
CICSCOB=cics_cobol_sdfhcob_smpe_target_library
## "CICSPLI" on panel DSNTIPW: CICS PL/I LIBRARY
## The CICS PL/I LIBRARY field identifies the data set name for the CICS library that PL/I programs are to use.
CICSPLI=cics_pl1_sdfhpl1_smpe_target_library
## "CICSEXCI" on panel DSNTIPW: CICS EXCI LIBRARY
## The CICS EXCI LIBRARY field identifies the data set name for the CICS library that contains the CICS EXCI load modules.
CICSEXCI=cics_exci_sdfhexci_smpe_target_library
## -- PANEL DSNTIPM1 (Z/OSMF ARTIFACTS CONFIGURATION PANEL) --
## "ZARTPATH" on panel DSNTIPM1: PATH FOR Z/OSMF ARTIFACTS
## The ZARTPATH variable is the HFS/ZFS path where the tailored JCL templates and variable file for this z/OSMF workflow are saved
ZARTPATH=directory_for_the_zosmf_artifacts
## -------------------------------------------------------------------------------------------------------------------------
## -- Section 9: Variables whose values are generated during provisioning, but user specified for install.                --
## --            For provisioning, do not modify values in this section.                                                  --
## -------------------------------------------------------------------------------------------------------------------------
## -- PANEL DSNTIPA2 (CATALOG AND DIRECTORY) --
## "VCATALOG" on panel DSNTIPA2: CATALOG ALIAS
## The value of the CATALOG ALIAS field specifies the high-level qualifier for VSAM data sets that are to be used by the DB2 catalog and directory.
VCATALOG=
## -- PANEL DSNTIPA4 (BSDS AND ACTIVE LOG) --
## "VBSDSLOG" on panel DSNTIPA4: BSDS AND ACTIVE LOG ICF CATALOG ALIAS
## The value of the BSDS AND ACTIVE LOG ICF CATALOG ALIAS field specifies a dedicated ICF catalog and alias for DB2 BSDS and active log data sets. The value can be the same as the value of VCATALOG, the ICF catalog and alias for DB2 catalog and directory data sets, but it's recommended to use a different value to facilitate DB2 backup and recovery. This field also specifies the high-level qualifier for BSDS and active log data sets.
VBSDSLOG=
## -- PANEL DSNTIPG1 (INSTALLATION PREFERENCES PANEL 2) --
## "ICDSTPLT" on panel DSNTIPG1: IC TEMPLATE EXPRESSION
## Specifies the DB2 TEMPLATE utility expression for allocating image copy data sets created by DB2 installation jobs.
ICDSTPLT=
## -- PANEL DSNTIPH (SYSTEM RESOURCE DATA SET NAMES) --
## "LOGSPRE1" on panel DSNTIPH: COPY 1 PREFIX
## The ARCPFX1 subsystem parameter specifies the prefix that is to be used for the first copy of the archive log data set.
LOGSPRE1=
## "LOGSPRE2" on panel DSNTIPH: COPY 2 PREFIX
## The ARCPFX2 subsystem parameter specifies the prefix that is to be used for the second copy of the archive log data set. If you use single logging, accept the default value.
LOGSPRE2=
## "BSDSNAM1" on panel DSNTIPH: COPY 1 NAME
## The value of the COPY 1 NAME field specifies the fully qualified name that is to be used for the first copy of the bootstrap data set.
BSDSNAM1=
## "BSDSNAM2" on panel DSNTIPH: COPY 2 NAME
## The value of the COPY 2 NAME field specifies the fully qualified name that is to be used for the second copy of the bootstrap data set.
BSDSNAM2=
## "ARCHPRE1" on panel DSNTIPH: COPY 1 PREFIX
## The ARCPFX1 subsystem parameter specifies the prefix that is to be used for the first copy of the archive log data set.
ARCHPRE1=
## "ARCHPRE2" on panel DSNTIPH: COPY 2 PREFIX
## The ARCPFX2 subsystem parameter specifies the prefix that is to be used for the second copy of the archive log data set. If you use single logging, accept the default value.
ARCHPRE2=
## -- PANEL DSNTIPI (IRLM PANEL 1) --
## "IRLMPROC" on panel DSNTIPI: PROC NAME
## The IRLMPRC subsystem parameter specifies the name of the IRLM procedure that z/OS is to invoke if the AUTO START field is set to YES.
IRLMPROC=
## "IRLMSSID" on panel DSNTIPI: SUBSYSTEM NAME
## The SUBSYSTEM NAME field specifies the z/OS subsystem name for IRLM.
IRLMSSID=
## -- PANEL DSNTIPJ (IRLM PANEL 2) --
## "IRLMGRPN" on panel DSNTIPJ: IRLM XCF GROUP NAME
## The value of the IRLM XCF GROUP NAME field is the name that is to be used for the IRLM group. This name must be different from the DB2 group name.
IRLMGRPN=
## -- PANEL DSNTIPK (DEFINE GROUP OR MEMBER) --
## "GRPNAME" on panel DSNTIPK: GROUP NAME
## The GRPNAME subsystem parameter identifies the name of a new or existing DB2 data sharing group that is to be used for this subsystem.
GRPNAME=
## "MEMBNAME" on panel DSNTIPK: MEMBER NAME
## The MEMBNAME subsystem parameter specifies the name of a new or existing DB2 data sharing member that is to be used for this subsystem.
MEMBNAME=
## "WKDBNAME" on panel DSNTIPK: WORK FILE DB
## The value of the WORK FILE DB field specifies the name of the work file database that is to be used for the DB2 member.
WKDBNAME=
## "GRPATTNM" on panel DSNTIPK: GROUP ATTACH
## The value of the GROUP ATTACH field specifies a generic group attachment name. This name is to be used for batch programs, the call attachment facility (CAF), the RRS attachment facility (RRSAF), IMS, CICS Transaction Server for z/OS, and utilities.
GRPATTNM=
## -- PANEL DSNTIPM (MVS PARMLIB UPDATES) --
## "MVSSNAME" on panel DSNTIPM: SUBSYSTEM NAME
## The SUBSYSTEM NAME field specifies the z/OS subsystem name for DB2.
MVSSNAME=
## "MVSSPREF" on panel DSNTIPM: COMMAND PREFIX
## The value of the COMMAND PREFIX field specifies the DB2 subsystem command prefix. When the prefix appears at the beginning of a command that is entered at a z/OS operator's console, z/OS passes the command to DB2 for processing. The command prefix is used in the DB2 entry of member IEFSSNxx of SYS1.PARMLIB.
MVSSPREF=
## -- PANEL DSNTIPM4 (Z/OSMF CUSTOMIZATION - OTHER SUBSYSTEM PARAMETERS) --
## "CDDSPFX" on panel DSNTIPM4: CDDSPFX
## Specifies a prefix of up to 39 characters for the name of the log Compression Dictionary Data Set (CDDS).
CDDSPFX=
## -- PANEL DSNTIPO3 (DEFAULT STARTUP MODULES) --
## "DSNZPARM" on panel DSNTIPO3: PARAMETER MODULE
## The value of the PARAMETER MODULE field specifies the member name of the load module that is to be used for DB2 subsystem parameters.
DSNZPARM=
## "DSNHDECP" on panel DSNTIPO3: APPL DEFAULTS
## The value of the APPL DEFAULTS field specifies the member name of the load module that is to be used for DB2 application default values.
DSNHDECP=
## -- PANEL DSNTIPR (DISTRIBUTED DATA FACILITY ) --
## "DDLOC" on panel DSNTIPR: DB2 LOCATION NAME
## The value of the DB2 LOCATION NAME field specifies the unique name that requesters are to use to connect to this DB2 subsystem. The value of the DB2 LOCATION NAME field must be the same on all members within a DB2 data sharing group.
DDLOC=
## "IPNAME" on panel DSNTIPR: DB2 TCP/IP IPNAME
## The value of the DB2 TCP/IP IPNAME field identifies and associates an IPNAME value with DDF. When you specify this option, DDF activates only its TCP/IP communications support, regardless of whether or not there is a value for DB2 VTAM LUNAME. Only inbound and outbound DRDA protocol communications over TCP/IP are allowed. Db2 makes no attempt to activate SNA/APPC communications support.
IPNAME=
## "TCPPORT" on panel DSNTIPR: TCP/IP PORT
## The value of the TCP/IP PORT field determines the TCP/IP port number that is to be used for accepting TCP/IP connection requests from remote DRDA clients and REST services.
TCPPORT=
## "RESYNPRT" on panel DSNTIPR: RESYNC PORT
## The value of the RESYNC PORT field specifies the TCP/IP port number that is to be used to process requests for two-phase commit resynchronization.
RESYNPRT=
## -- PANEL DSNTIPRB (Trace formatting routines) --
## "RTB01WLM"  on panel DSNTIPRB: DSNWSPM WLM ENV NAME
## Specify the WLM environment name for the routine of DSNWSPM
RTB01WLM=
## "RTB02WLM"  on panel DSNTIPRB: DSNWZP WLM ENV NAME
## Specify the WLM environment name for the routine of DSNWZP
RTB02WLM=
## -- PANEL DSNTIPRC (Utility invocation routines ) --
## "RTC01WLM"  on panel DSNTIPRC: DSNUTILS WLM ENV NAME
## Specify the WLM environment name for the routine of DSNUTILS
RTC01WLM=
## "RTC02WLM"  on panel DSNTIPRC: DSNUTILU WLM ENV NAME
## Specify the WLM environment name for the routine of DSNUTILU
RTC02WLM=
## "RTC03WLM"  on panel DSNTIPRC: DSNUTILV WLM ENV NAME
## Specify the WLM environment name for the routine of DSNUTILV
RTC03WLM=
## -- PANEL DSNTIPRE (DB2 security routines) --
## "RTE01WLM"  on panel DSNTIPRE: DSNLEUSR WLM ENV NAME
## Specify the WLM environment name for the routine of DSNLEUSR
RTE01WLM=
## -- PANEL DSNTIPRF (Java and SQL procedure processing routines) --
## "RTG01WLM"  on panel DSNTIPRF: ALTER_JAVA_PATH WLM ENV NAME
## Specify the WLM environment name for the routine of ALTER_JAVA_PATH
RTG01WLM=
## "RTG02WLM"  on panel DSNTIPRF: DB2_INSTALL_JAR WLM ENV NAME
## Specify the WLM environment name for the routine of DB2_INSTALL_JAR
RTG02WLM=
## "RTG03WLM"  on panel DSNTIPRF: DB2_REMOVE_JAR WLM ENV NAME
## Specify the WLM environment name for the routine of DB2_REMOVE_JAR
RTG03WLM=
## "RTG04WLM"  on panel DSNTIPRF: DB2_REPLACE_JAR WLM ENV NAME
## Specify the WLM environment name for the routine of DB2_REPLACE_JAR
RTG04WLM=
## "RTG05WLM"  on panel DSNTIPRF: DB2_UPDATEJARINFO WLM ENV NAME
## Specify the WLM environment name for the routine of DB2_UPDATEJARINFO
RTG05WLM=
## "RTG06WLM"  on panel DSNTIPRF: INSTALL_JAR WLM ENV NAME
## Specify the WLM environment name for the routine of INSTALL_JAR
RTG06WLM=
## "RTG07WLM"  on panel DSNTIPRF: REMOVE_JAR WLM ENV NAME
## Specify the WLM environment name for the routine of REMOVE_JAR
RTG07WLM=
## "RTG08WLM"  on panel DSNTIPRF: REPLACE_JAR WLM ENV NAME
## Specify the WLM environment name for the routine of REPLACE_JAR
RTG08WLM=
## "RTF01WLM"  on panel DSNTIPRF: DSNTBIND WLM ENV NAME
## Specify the WLM environment name for the routine of DSNTBIND
RTF01WLM=
## "RTF02WLM"  on panel DSNTIPRF: DSNTPSMP WLM ENV NAME
## Specify the WLM environment name for the routine of DSNTPSMP
RTF02WLM=
## "RTF03WLM"  on panel DSNTIPRF: WLM_REFRESH WLM ENV NAME
## Specify the WLM environment name for the routine of WLM_REFRESH
RTF03WLM=
## -- PANEL DSNTIPRH (Unified debugger for Java and SQL routines) --
## "RTH01WLM"  on panel DSNTIPRH: CREATE_SESSION WLM ENV NAME
## Specify the WLM environment name for the routine of CREATE_SESSION
RTH01WLM=
## "RTH02WLM"  on panel DSNTIPRH: DEBUGGERLEVEL WLM ENV NAME
## Specify the WLM environment name for the routine of DEBUGGERLEVEL
RTH02WLM=
## "RTH03WLM"  on panel DSNTIPRH: DESTROY_SESSION WLM ENV NAME
## Specify the WLM environment name for the routine of DESTROY_SESSION
RTH03WLM=
## "RTH04WLM"  on panel DSNTIPRH: GET_REPORT WLM ENV NAME
## Specify the WLM environment name for the routine of GET_REPORT
RTH04WLM=
## "RTH05WLM"  on panel DSNTIPRH: LIST_SESSION WLM ENV NAME
## Specify the WLM environment name for the routine of LIST_SESSION
RTH05WLM=
## "RTH06WLM"  on panel DSNTIPRH: PUT_COMMAND WLM ENV NAME
## Specify the WLM environment name for the routine of PUT_COMMAND
RTH06WLM=
## "RTH07WLM"  on panel DSNTIPRH: QUERY_SESSION WLM ENV NAME
## Specify the WLM environment name for the routine of QUERY_SESSION
RTH07WLM=
## "RTH08WLM"  on panel DSNTIPRH: DBG_ENDSESSIONMANAGER WLM ENV NAME
## Specify the WLM environment name for the routine of DBG_ENDSESSIONMANAGER
RTH08WLM=
## "RTH09WLM"  on panel DSNTIPRH: DBG_INITIALIZECLIENT WLM ENV NAME
## Specify the WLM environment name for the routine of DBG_INITIALIZECLIENT
RTH09WLM=
## "RTH10WLM"  on panel DSNTIPRH: DBG_LOOKUPSESSIONMANAGER WLM ENV NAME
## Specify the WLM environment name for the routine of DBG_LOOKUPSESSIONMANAGER
RTH10WLM=
## "RTH11WLM"  on panel DSNTIPRH: DBG_PINGSESSIONMANAGER WLM ENV NAME
## Specify the WLM environment name for the routine of DBG_PINGSESSIONMANAGER
RTH11WLM=
## "RTH12WLM"  on panel DSNTIPRH: DBG_RECVCLIENTREPORTS WLM ENV NAME
## Specify the WLM environment name for the routine of DBG_RECVCLIENTREPORTS
RTH12WLM=
## "RTH13WLM"  on panel DSNTIPRH: DBG_RUNSESSIONMANAGER WLM ENV NAME
## Specify the WLM environment name for the routine of DBG_RUNSESSIONMANAGER
RTH13WLM=
## "RTH14WLM"  on panel DSNTIPRH: DBG_SENDCLIENTCOMMANDS WLM ENV NAME
## Specify the WLM environment name for the routine of DBG_SENDCLIENTCOMMANDS
RTH14WLM=
## "RTH15WLM"  on panel DSNTIPRH: DBG_SENDCLIENTREQUESTS WLM ENV NAME
## Specify the WLM environment name for the routine of DBG_SENDCLIENTREQUESTS
RTH15WLM=
## "RTH16WLM"  on panel DSNTIPRH: DBG_TERMINATECLIENT WLM ENV NAME
## Specify the WLM environment name for the routine of DBG_TERMINATECLIENT
RTH16WLM=
## -- PANEL DSNTIPRI (XML processing routines) --
## "RTI03WLM"  on panel DSNTIPRI: XSLTRANSFORM WLM ENV NAME
## Specify the WLM environment name for the routine of XSLTRANSFORM
RTI03WLM=
## "RTI04WLM"  on panel DSNTIPRI: XSR_ADDSCHEMADOC WLM ENV NAME
## Specify the WLM environment name for the routine of XSR_ADDSCHEMADOC
RTI04WLM=
## "RTI05WLM"  on panel DSNTIPRI: XSR_COMPLETE WLM ENV NAME
## Specify the WLM environment name for the routine of XSR_COMPLETE
RTI05WLM=
## "RTI06WLM"  on panel DSNTIPRI: XSR_REGISTER WLM ENV NAME
## Specify the WLM environment name for the routine of XSR_REGISTER
RTI06WLM=
## "RTI07WLM"  on panel DSNTIPRI: XSR_REMOVE WLM ENV NAME
## Specify the WLM environment name for the routine of XSR_REMOVE
RTI07WLM=
## -- PANEL DSNTIPRJ (IBM Text Search routines) --
## "RTJ09WLM"  on panel DSNTIPRJ: SYSTS_ALTER WLM ENV NAME
## Specify the WLM environment name for the routine of SYSTS_ALTER
RTJ09WLM=
## "RTJ01WLM"  on panel DSNTIPRJ: SYSTS_CREATE WLM ENV NAME
## Specify the WLM environment name for the routine of SYSTS_CREATE
RTJ01WLM=
## "RTJ02WLM"  on panel DSNTIPRJ: SYSTS_DROP WLM ENV NAME
## Specify the WLM environment name for the routine of SYSTS_DROP
RTJ02WLM=
## "RTJ03WLM"  on panel DSNTIPRJ: SYSTS_ENCRYPT WLM ENV NAME
## Specify the WLM environment name for the routine of SYSTS_ENCRYPT
RTJ03WLM=
## "RTJ04WLM"  on panel DSNTIPRJ: SYSTS_RESTORE WLM ENV NAME
## Specify the WLM environment name for the routine of SYSTS_RESTORE
RTJ04WLM=
## "RTJ05WLM"  on panel DSNTIPRJ: SYSTS_START WLM ENV NAME
## Specify the WLM environment name for the routine of SYSTS_START
RTJ05WLM=
## "RTJ06WLM"  on panel DSNTIPRJ: SYSTS_STOP WLM ENV NAME
## Specify the WLM environment name for the routine of SYSTS_STOP
RTJ06WLM=
## "RTJ07WLM"  on panel DSNTIPRJ: SYSTS_TAKEOVER WLM ENV NAME
## Specify the WLM environment name for the routine of SYSTS_TAKEOVER
RTJ07WLM=
## "RTJ08WLM"  on panel DSNTIPRJ: SYSTS_UPDATE WLM ENV NAME
## Specify the WLM environment name for the routine of SYSTS_UPDATE
RTJ08WLM=
## -- PANEL DSNTIPRK (Database metadata routines) --
## "RTK01WLM"  on panel DSNTIPRK: SQLCAMESSAGE WLM ENV NAME
## Specify the WLM environment name for the routine of SQLCAMESSAGE
RTK01WLM=
## "RTK02WLM"  on panel DSNTIPRK: SQLCOLPRIVILEGES WLM ENV NAME
## Specify the WLM environment name for the routine of SQLCOLPRIVILEGES
RTK02WLM=
## "RTK03WLM"  on panel DSNTIPRK: SQLCOLUMNS WLM ENV NAME
## Specify the WLM environment name for the routine of SQLCOLUMNS
RTK03WLM=
## "RTK04WLM"  on panel DSNTIPRK: SQLFOREIGNKEYS WLM ENV NAME
## Specify the WLM environment name for the routine of SQLFOREIGNKEYS
RTK04WLM=
## "RTK05WLM"  on panel DSNTIPRK: SQLFUNCTIONCOLS WLM ENV NAME
## Specify the WLM environment name for the routine of SQLFUNCTIONCOLS
RTK05WLM=
## "RTK06WLM"  on panel DSNTIPRK: SQLFUNCTIONS WLM ENV NAME
## Specify the WLM environment name for the routine of SQLFUNCTIONS
RTK06WLM=
## "RTK07WLM"  on panel DSNTIPRK: SQLGETTYPEINFO WLM ENV NAME
## Specify the WLM environment name for the routine of SQLGETTYPEINFO
RTK07WLM=
## "RTK08WLM"  on panel DSNTIPRK: SQLPRIMARYKEYS WLM ENV NAME
## Specify the WLM environment name for the routine of SQLPRIMARYKEYS
RTK08WLM=
## "RTK09WLM"  on panel DSNTIPRK: SQLPROCEDURECOLS WLM ENV NAME
## Specify the WLM environment name for the routine of SQLPROCEDURECOLS
RTK09WLM=
## "RTK10WLM"  on panel DSNTIPRK: SQLPROCEDURES WLM ENV NAME
## Specify the WLM environment name for the routine of SQLPROCEDURES
RTK10WLM=
## "RTK16WLM"  on panel DSNTIPRK: SQLPSEUDOCOLUMNS WLM ENV NAME
## Specify the WLM environment name for the routine of SQLPSEUDOCOLUMNS
RTK16WLM=
## "RTK11WLM"  on panel DSNTIPRK: SQLSPECIALCOLUMNS WLM ENV NAME
## Specify the WLM environment name for the routine of SQLSPECIALCOLUMNS
RTK11WLM=
## "RTK12WLM"  on panel DSNTIPRK: SQLSTATISTICS WLM ENV NAME
## Specify the WLM environment name for the routine of SQLSTATISTICS
RTK12WLM=
## "RTK13WLM"  on panel DSNTIPRK: SQLTABLEPRIVILEGES WLM ENV NAME
## Specify the WLM environment name for the routine of SQLTABLEPRIVILEGES
RTK13WLM=
## "RTK14WLM"  on panel DSNTIPRK: SQLTABLES WLM ENV NAME
## Specify the WLM environment name for the routine of SQLTABLES
RTK14WLM=
## "RTK15WLM"  on panel DSNTIPRK: SQLUDTS WLM ENV NAME
## Specify the WLM environment name for the routine of SQLUDTS
RTK15WLM=
## -- PANEL DSNTIPRL (DB2 administration routines) --
## "RTL01WLM"  on panel DSNTIPRL: ADMIN_COMMAND_DB2 WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_COMMAND_DB2
RTL01WLM=
## "RTL02WLM"  on panel DSNTIPRL: ADMIN_COMMAND_DSN WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_COMMAND_DSN
RTL02WLM=
## "RTL41WLM"  on panel DSNTIPRL: ADMIN_COMMAND_MVS WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_COMMAND_MVS
RTL41WLM=
## "RTL03WLM"  on panel DSNTIPRL: ADMIN_COMMAND_UNIX WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_COMMAND_UNIX
RTL03WLM=
## "RTL04WLM"  on panel DSNTIPRL: ADMIN_DS_BROWSE WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_DS_BROWSE
RTL04WLM=
## "RTL05WLM"  on panel DSNTIPRL: ADMIN_DS_DELETE WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_DS_DELETE
RTL05WLM=
## "RTL06WLM"  on panel DSNTIPRL: ADMIN_DS_LIST WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_DS_LIST
RTL06WLM=
## "RTL07WLM"  on panel DSNTIPRL: ADMIN_DS_RENAME WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_DS_RENAME
RTL07WLM=
## "RTL08WLM"  on panel DSNTIPRL: ADMIN_DS_SEARCH WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_DS_SEARCH
RTL08WLM=
## "RTL09WLM"  on panel DSNTIPRL: ADMIN_DS_WRITE WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_DS_WRITE
RTL09WLM=
## "RTL42WLM"  on panel DSNTIPRL: ADMIN_EXPLAIN_MAINT WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_EXPLAIN_MAINT
RTL42WLM=
## "RTL10WLM"  on panel DSNTIPRL: ADMIN_INFO_HOST WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_INFO_HOST
RTL10WLM=
## "RTL44WLM"  on panel DSNTIPRL: ADMIN_INFO_IFCID WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_INFO_IFCID
RTL44WLM=
## "RTL35WLM"  on panel DSNTIPRL: ADMIN_INFO_SMS WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_INFO_SMS
RTL35WLM=
## "RTL36WLM"  on panel DSNTIPRL: ADMIN_INFO_SQL WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_INFO_SQL
RTL36WLM=
## "RTL11WLM"  on panel DSNTIPRL: ADMIN_INFO_SSID WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_INFO_SSID
RTL11WLM=
## "RTL37WLM"  on panel DSNTIPRL: ADMIN_INFO_SYSLOG WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_INFO_SYSLOG
RTL37WLM=
## "RTL28WLM"  on panel DSNTIPRL: ADMIN_INFO_SYSPARM WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_INFO_SYSPARM
RTL28WLM=
## "RTL12WLM"  on panel DSNTIPRL: ADMIN_JOB_CANCEL WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_JOB_CANCEL
RTL12WLM=
## "RTL13WLM"  on panel DSNTIPRL: ADMIN_JOB_FETCH WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_JOB_FETCH
RTL13WLM=
## "RTL14WLM"  on panel DSNTIPRL: ADMIN_JOB_QUERY WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_JOB_QUERY
RTL14WLM=
## "RTL15WLM"  on panel DSNTIPRL: ADMIN_JOB_SUBMIT WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_JOB_SUBMIT
RTL15WLM=
## "RTL17WLM"  on panel DSNTIPRL: ADMIN_TASK_ADD WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_TASK_ADD
RTL17WLM=
## "RTL23WLM"  on panel DSNTIPRL: ADMIN_TASK_CANCEL WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_TASK_CANCEL
RTL23WLM=
## "RTL18WLM"  on panel DSNTIPRL: ADMIN_TASK_LIST WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_TASK_LIST
RTL18WLM=
## "RTL24WLM"  on panel DSNTIPRL: ADMIN_TASK_OUTPUT WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_TASK_OUTPUT
RTL24WLM=
## "RTL19WLM"  on panel DSNTIPRL: ADMIN_TASK_REMOVE WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_TASK_REMOVE
RTL19WLM=
## "RTL20WLM"  on panel DSNTIPRL: ADMIN_TASK_STATUS WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_TASK_STATUS
RTL20WLM=
## "RTL34WLM"  on panel DSNTIPRL: ADMIN_TASK_UPDATE WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_TASK_UPDATE
RTL34WLM=
## "RTL38WLM"  on panel DSNTIPRL: ADMIN_UPDATE_SYSPARM WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_UPDATE_SYSPARM
RTL38WLM=
## "RTL30WLM"  on panel DSNTIPRL: ADMIN_UTL_EXECUTE WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_UTL_EXECUTE
RTL30WLM=
## "RTL31WLM"  on panel DSNTIPRL: ADMIN_UTL_MODIFY WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_UTL_MODIFY
RTL31WLM=
## "RTL32WLM"  on panel DSNTIPRL: ADMIN_UTL_MONITOR WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_UTL_MONITOR
RTL32WLM=
## "RTL21WLM"  on panel DSNTIPRL: ADMIN_UTL_SCHEDULE WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_UTL_SCHEDULE
RTL21WLM=
## "RTL22WLM"  on panel DSNTIPRL: ADMIN_UTL_SORT WLM ENV NAME
## Specify the WLM environment name for the routine of ADMIN_UTL_SORT
RTL22WLM=
## "RTL43WLM"  on panel DSNTIPRL: BLOCKING_THREADS WLM ENV NAME
## Specify the WLM environment name for the routine of BLOCKING_THREADS
RTL43WLM=
## "RTL33WLM"  on panel DSNTIPRL: DSN_WLM_APPLENV WLM ENV NAME
## Specify the WLM environment name for the routine of DSN_WLM_APPLENV
RTL33WLM=
## "RTD02WLM"  on panel DSNTIPRL: DSNACCOX WLM ENV NAME
## Specify the WLM environment name for the routine of DSNACCOX
RTD02WLM=
## "RTL25WLM"  on panel DSNTIPRL: GET_CONFIG WLM ENV NAME
## Specify the WLM environment name for the routine of GET_CONFIG
RTL25WLM=
## "RTL26WLM"  on panel DSNTIPRL: GET_MESSAGE WLM ENV NAME
## Specify the WLM environment name for the routine of GET_MESSAGE
RTL26WLM=
## "RTL27WLM"  on panel DSNTIPRL: GET_SYSTEM_INFO WLM ENV NAME
## Specify the WLM environment name for the routine of GET_SYSTEM_INFO
RTL27WLM=
## "RTL40WLM"  on panel DSNTIPRL: SET_PLAN_HINT WLM ENV NAME
## Specify the WLM environment name for the routine of SET_PLAN_HINT
RTL40WLM=
## "RTL29WLM"  on panel DSNTIPRL: WLM_SET_CLIENT_INFO WLM ENV NAME
## Specify the WLM environment name for the routine of WLM_SET_CLIENT_INFO
RTL29WLM=
## -- PANEL DSNTIPRM (DB2 optimization routines) --
## "RTM05WLM"  on panel DSNTIPRM: DSNAHVPM WLM ENV NAME
## Specify the WLM environment name for the routine of DSNAHVPM
RTM05WLM=
## -- PANEL DSNTIPRN (CICS and IMS transaction invocation routines) --
## "RTN01WLM"  on panel DSNTIPRN: DSNACICS WLM ENV NAME
## Specify the WLM environment name for the routine of DSNACICS
RTN01WLM=
## "RTN02WLM"  on panel DSNTIPRN: DSNAIMS WLM ENV NAME
## Specify the WLM environment name for the routine of DSNAIMS
RTN02WLM=
## "RTN03WLM"  on panel DSNTIPRN: DSNAIMS2 WLM ENV NAME
## Specify the WLM environment name for the routine of DSNAIMS2
RTN03WLM=
## -- PANEL DSNTIPRO (MQSeries routines) --
## "RTO02WLM"  on panel DSNTIPRO: MQREAD WLM ENV NAME
## Specify the WLM environment name for the routine of MQREAD
RTO02WLM=
## "RTO03WLM"  on panel DSNTIPRO: MQREADALL WLM ENV NAME
## Specify the WLM environment name for the routine of MQREADALL
RTO03WLM=
## "RTO04WLM"  on panel DSNTIPRO: MQREADALLCLOB WLM ENV NAME
## Specify the WLM environment name for the routine of MQREADALLCLOB
RTO04WLM=
## "RTO05WLM"  on panel DSNTIPRO: MQREADCLOB WLM ENV NAME
## Specify the WLM environment name for the routine of MQREADCLOB
RTO05WLM=
## "RTO06WLM"  on panel DSNTIPRO: MQRECEIVE WLM ENV NAME
## Specify the WLM environment name for the routine of MQRECEIVE
RTO06WLM=
## "RTO07WLM"  on panel DSNTIPRO: MQRECEIVEALL WLM ENV NAME
## Specify the WLM environment name for the routine of MQRECEIVEALL
RTO07WLM=
## "RTO08WLM"  on panel DSNTIPRO: MQRECEIVEALLCLOB WLM ENV NAME
## Specify the WLM environment name for the routine of MQRECEIVEALLCLOB
RTO08WLM=
## "RTO09WLM"  on panel DSNTIPRO: MQRECEIVECLOB WLM ENV NAME
## Specify the WLM environment name for the routine of MQRECEIVECLOB
RTO09WLM=
## "RTO10WLM"  on panel DSNTIPRO: MQSEND WLM ENV NAME
## Specify the WLM environment name for the routine of MQSEND
RTO10WLM=
## -- PANEL DSNTIPRP (Web services/SOAP routines) --
## "RTP01WLM"  on panel DSNTIPRP: SOAPHTTPC WLM ENV NAME
## Specify the WLM environment name for the routine of SOAPHTTPC
RTP01WLM=
## "RTP02WLM"  on panel DSNTIPRP: SOAPHTTPNC WLM ENV NAME
## Specify the WLM environment name for the routine of SOAPHTTPNC
RTP02WLM=
## "RTP03WLM"  on panel DSNTIPRP: SOAPHTTPNV WLM ENV NAME
## Specify the WLM environment name for the routine of SOAPHTTPNV
RTP03WLM=
## "RTP04WLM"  on panel DSNTIPRP: SOAPHTTPV WLM ENV NAME
## Specify the WLM environment name for the routine of SOAPHTTPV
RTP04WLM=
## -- PANEL DSNTIPRQ (JSON routines) --
## "RTQ11WLM"  on panel DSNTIPRQ: BSON2JSON WLM ENV NAME
## Specify the WLM environment name for the routine of BSON2JSON
RTQ11WLM=
## "RTQ01WLM"  on panel DSNTIPRQ: JSON_BINARY WLM ENV NAME
## Specify the WLM environment name for the routine of JSON_BINARY
RTQ01WLM=
## "RTQ02WLM"  on panel DSNTIPRQ: JSON_BINARY2 WLM ENV NAME
## Specify the WLM environment name for the routine of JSON_BINARY2
RTQ02WLM=
## "RTQ03WLM"  on panel DSNTIPRQ: JSON_GET_POS_ARR_INDEX WLM ENV NAME
## Specify the WLM environment name for the routine of JSON_GET_POS_ARR_INDEX
RTQ03WLM=
## "RTQ04WLM"  on panel DSNTIPRQ: JSON_LEN WLM ENV NAME
## Specify the WLM environment name for the routine of JSON_LEN
RTQ04WLM=
## "RTQ05WLM"  on panel DSNTIPRQ: JSON_TABLE WLM ENV NAME
## Specify the WLM environment name for the routine of JSON_TABLE
RTQ05WLM=
## "RTQ06WLM"  on panel DSNTIPRQ: JSON_TABLE_BINARY WLM ENV NAME
## Specify the WLM environment name for the routine of JSON_TABLE_BINARY
RTQ06WLM=
## "RTQ07WLM"  on panel DSNTIPRQ: JSON_TYPE WLM ENV NAME
## Specify the WLM environment name for the routine of JSON_TYPE
RTQ07WLM=
## "RTQ08WLM"  on panel DSNTIPRQ: JSON_UPDATE WLM ENV NAME
## Specify the WLM environment name for the routine of JSON_UPDATE
RTQ08WLM=
## "RTQ12WLM"  on panel DSNTIPRQ: JSON2BSON WLM ENV NAME
## Specify the WLM environment name for the routine of JSON2BSON
RTQ12WLM=
## -- PANEL DSNTIPR1 (PARAMETERS FOR DB2-SUPPLIED ROUTINES) --
## "WLMENVG" on panel DSNTIPR1: FOR MOST DB2 ROUTINES
## The value of the FOR MOST DB2 ROUTINES field identifies the WLM environment that is to be used for running most DB2-supplied routines.
WLMENVG=
## "WLMENVP" on panel DSNTIPR1: FOR ROUTINES IDENTIFIED TO PROGRAM CONTROL
## The FOR ROUTINES IDENTIFIED TO PROGRAM CONTROL field identifies the WLM environment that is to be used for running DB2-supplied routines that require program control. These routines can be registered to RACF or an equivalent product.
WLMENVP=
## "WLMENV1" on panel DSNTIPR1: FOR SERIALIZED ROUTINES
## The value of the FOR SERIALIZED ROUTINES field identifies the WLM environment that is to be used for DB2-supplied routines that need to run serially. A routine that must run serially cannot share a task control block with another routine.
WLMENV1=
## "WLMENVU" on panel DSNTIPR1: FOR DB2 UTILITIES ROUTINES
## The value of the FOR DB2 UTILITIES ROUTINES field identifies the name of the WLM environment that is to be used for running the DB2-supplied routines for utilities. This WLM environment should be used only by the SYSPROC.DSNUTILS and SYSPROC.DSNUTILU stored procedures.
WLMENVU=
## "WLMENVX" on panel DSNTIPR1: FOR DB2 XML PROCESSING ROUTINES
## The value of the FOR DB2 XML PROCESSING ROUTINES field identifies the WLM environment that is to be used for running most DB2-supplied XML processing routines. This applies to the XSR_ADDSCHEMADOC, XSR_REGISTER, and XSR_REMOVE routines.
WLMENVX=
## "WLMENVJ" on panel DSNTIPR1: FOR DB2 JAVA ROUTINES
## The value of the FOR DB2 JAVA ROUTINES field identifies the WLM environment that is to be used for running most DB2-supplied Java routines.
WLMENVJ=
## "WLMENVR" on panel DSNTIPR1: FOR DB2 REXX ROUTINES
## The value of the FOR DB2 REXX ROUTINES field identifies the name of the WLM environment that is to be used for DB2-supplied REXX routines.
WLMENVR=
## "WLMENVD" on panel DSNTIPR1: FOR UNIFIED DEBUGGER ROUTINES
## The FOR UNIFIED DEBUGGER ROUTINES field identifies the WLM environment that is to be used for DB2-supplied routines that are for the unified debugger tool.
WLMENVD=
## "WLMENVC" on panel DSNTIPR1: FOR THE DB2 CICS ROUTINE
## The value of the FOR THE DB2 CICS ROUTINE field identifies the WLM environment that is to be used for the DB2 CICS transaction processor routine SYSPROC.DSNACICS.
WLMENVC=
## "WLMENVM" on panel DSNTIPR1: FOR DB2 MQSERIES ROUTINES
## The value of the FOR DB2 MQSERIES ROUTINES field specifies the name of the WLM environment that is to be used for DB2 MQSeries functions.
WLMENVM=
## "WLMENVW" on panel DSNTIPR1: FOR DB2 WEB SERVICES ROUTINES
## The value of the FOR DB2 WEB SERVICES ROUTINES field identifies the WLM environment that is to be used for DB2 web services functions.
WLMENVW=
## -- PANEL DSNTIPT (DB2 DATA SET NAMES) --
## "OUTCL" on panel DSNTIPT: CLIST LIBRARY
## The CLIST LIBRARY field identifies the name of the data set into which job DSNTIJVC is to load all CLISTs.
OUTCL=
## "DBRMLIB" on panel DSNTIPT: APPLICATION DBRM
## The value of the APPLICATION DBRM field specifies the name of the library that is to be used for DB2 sample application DBRMs.
DBRMLIB=
## "RUNLIB" on panel DSNTIPT: APPLICATION LOAD
## The value of the APPLICATION LOAD field specifies the name of the DB2 sample application load module library.
RUNLIB=
## "SRCLIB" on panel DSNTIPT: DECLARATION LIBRARY
## The value of the DECLARATION LIBRARY field specifies the name of the DB2 declaration library that is to be used for sample application include files.
SRCLIB=
## -- PANEL DSNTIPX (ROUTINE PARAMETERS) --
## "STORWLM" on panel DSNTIPX: WLM PROC NAME
## The value of the WLM PROC NAME field specifies a name for the stored procedures JCL procedure that is to be generated during installation. This JCL procedure is generated for the default WLM environment that is specified in the WLM ENVIRONMENT field.
STORWLM=
## "WLMENV" on panel DSNTIPX: WLM ENVIRONMENT
## The WLMENV subsystem parameter specifies the name of the default WLM_ENVIRONMENT that is to be used for a user-defined function or stored procedure. This environment is used when a value is not specified for the WLM_ENVIRONMENT option on the CREATE FUNCTION or CREATE PROCEDURE statements.
WLMENV=
## -- PANEL DSNTIPX1 (DB2 JAVA PROPERTIES) --
## "JAVAENV" on panel DSNTIPX1: JAVA ENV DATA SET
## The JAVA ENV DATA SET field specifies the name of the environment (JAVAENV) data set for the DB2-supplied Java WLM Java Environment, DSNWLM_JAVA. This data set is created by job DSNTIJMJ and must not already exist. It is allocated by the JAVAENV DD of DSNWLMJ, the address space startup procedure for DSNWLM_JAVA. DSNWLMJ is created by job DSNTIJMW. It contains the _CEE_ENVFILE environment variable which provides the name and location of the Java environment variable file to be used when the DSNWLM_JAVA environment is started.
JAVAENV=
## "JAVAENVV" on panel DSNTIPX1: JAVA ENV VAR FILE
## The JAVA ENV VAR FILE field specifies the absolute path and name of the HFS/zFS environment variable file for the DB2-supplied Java WLM environment, DSNWLM_JAVA.  This file is created when you run installation job DSNTIJMJ and must not already exist.  It is referenced in the _CEE_ENVFILE environment variable of the JAVAENV data set specified in the JAVA ENV DATA SET field.
JAVAENVV=
## "JVMPROPS" on panel DSNTIPX1: JVM PROPERTIES FILE
## The JVM PROPERTIES FILE field specifies the absolute path and name of the HFS/zFS Java Virtual Machine (JVM) startup options file used by the DB2-supplied Java WLM environment, DSNWLM_JAVA. This file is created when you run installation job DSNTIJMJ and must not already exist. It is referenced by the JVMPROPS variable in the file specified in the JAVA ENV VAR FILE field.
JVMPROPS=
## -- PANEL DSNTIP61 (DB2 UTILITIES PARAMETERS PANEL 2) --
## "FCCD" on panel DSNTIP61: DEFAULT TEMPLATE
## The FCCOPYDDN subsystem parameter defines the default value that is to be used for the FCCOPYDDN parameter of the FLASHCOPY option of DB2 utilities control statements. This parameter applies to the COPY, LOAD, REBUILD INDEX, REORG INDEX, and REORG TABLESPACE utilities.
FCCD=
## -------------------------------------------------------------------------------------------------------------------------
## -- Section 10: Variables with recommended default values for provisioning, but user specified for install.             --
## -------------------------------------------------------------------------------------------------------------------------
## -- PANEL DSNTIPA (ARCHIVE LOG DATA SET PARAMETERS) --
## "ARCHPRI" on panel DSNTIPA: PRIMARY QUANTITY
## The PRIQTY subsystem parameter specifies the amount of primary space that is to be allocated for a disk data set. The units for this parameter are specified in the ALLOCATION UNITS field.
ARCHPRI=125
## "ARCHSEC" on panel DSNTIPA: SECONDARY QTY
## The SECQTY subsystem parameter specifies the amount of secondary space that is to be allocated for a disk data set. The units for this parameter are specified in the ALLOCATION UNITS field.
ARCHSEC=15
## "ARCHDEVT" on panel DSNTIPA: DEVICE TYPE 1
## The UNIT subsystem parameter specifies the device type or unit name that is to be used for storing archive log data sets.
ARCHDEVT=SYSDA
## "ARCHDEV2" on panel DSNTIPA: DEVICE TYPE 2
## The UNIT2 subsystem parameter specifies the device type or unit name that is to be used for storing the second copy of archive log data sets. These data sets are the COPY2 data sets.
ARCHDEV2=SYSDA
## "ARCHSIZE" on panel DSNTIPA: BLOCK SIZE
## The BLKSIZE subsystem parameter determines the block size that is to be used for the archive log data set.
ARCHSIZE=24576
## "ARCHMRTU" on panel DSNTIPA: READ TAPE UNITS
## The MAXRTU subsystem parameter specifies the maximum number of dedicated tape units that can be allocated to concurrently read archive log tape volumes.
ARCHMRTU=2
## "ARCHDEAP" on panel DSNTIPA: DEALLOC PERIOD
## The DEALLCT subsystem parameter determines the length of time that an archive read tape unit is to be allowed to remain unused before it is deallocated.
ARCHDEAP=0
## "ARCHMAXV" on panel DSNTIPA: RECORDING MAX
## The MAXARCH subsystem parameter controls the maximum number of archive log volumes that are to be recorded in the BSDS.
ARCHMAXV=10000
## "ARCHWTOR" on panel DSNTIPA: WRITE TO OPER
## The ARCWTOR subsystem parameter controls whether DB2 is to send a message to the operator and wait for an answer before attempting to mount an archive log data set.
ARCHWTOR=YES
## "ARCHWRTC" on panel DSNTIPA: WTOR ROUTE CODE
## The ARCWRTC subsystem parameter identifies the list of route codes to be used in messages from the archive log data sets to the operator.
ARCHWRTC=1,3,4
## "ARCRETN" on panel DSNTIPA: RETENTION PERIOD
## The ARCRETN subsystem parameter specifies the retention period, which is the number of days that DB2 is to retain archive log data sets. The retention period is added to the current date to calculate the expiration date of the archive log data sets.
ARCRETN=9999
## "ARCHMQP" on panel DSNTIPA: QUIESCE PERIOD
## The QUIESCE subsystem parameter determines the maximum amount of time, in seconds, that DB2 is to be allowed to attempt a full system quiesce.
ARCHMQP=5
## "ARCHCOMP" on panel DSNTIPA: COMPACT DATA
## The COMPACT subsystem parameter controls whether data that is written to archive logs is to be compacted.
ARCHCOMP=NO
## "SVOLARC" on panel DSNTIPA: SINGLE VOLUME
## When archiving to disk, DB2 uses the number of online storage volumes for the specified UNIT name to determine a count of candidate volumes, up to 15. The SVOLARC subsystem parameter specifies whether DB2 is to use a single volume for disk archives.
SVOLARC=NO
## -- PANEL DSNTIPA2 (CATALOG AND DIRECTORY) --
## "CATDDACL" on panel DSNTIPA2: DIRECTORY AND CATALOG DATA - STOR CLASS
## The DIRECTORY AND CATALOG DATA - DATA CLASS field  specifies the explicit Storage Management Subsystem (SMS) data class that is to be used for defining VSAM data sets for the DB2 catalog and directory. Your SMS storage administrator defines these SMS classes. To use ACS routines for defining these data sets, leave this field blank.
CATDDACL=
## "CATDMGCL" on panel DSNTIPA2: DIRECTORY AND CATALOG DATA - MGMT CLASS
## The DIRECTORY AND CATALOG DATA - MGMT CLASS field  specifies the explicit Storage Management Subsystem (SMS) management class that is to be used for defining VSAM data sets for the DB2 catalog and directory. Your SMS storage administrator defines these SMS classes. To use ACS routines for defining these data sets, leave this field blank.
CATDMGCL=
## "CATDSTCL" on panel DSNTIPA2: DIRECTORY AND CATALOG DATA - STOR CLASS
## The DIRECTORY AND CATALOG DATA - STOR CLASS field  specifies the explicit Storage Management Subsystem (SMS) storage class that is to be used for defining VSAM data sets for the DB2 catalog and directory. Your SMS storage administrator defines these SMS classes. To use ACS routines for defining these data sets, leave this field blank.
CATDSTCL=
## "CATXDACL" on panel DSNTIPA2: DIRECTORY AND CATALOG INDEXES - STOR CLASS
## The DIRECTORY AND CATALOG INDEXES - DATA CLASS field specifies the explicit Storage Management Subsystem (SMS) data class that is to be used for defining VSAM data sets for DB2 catalog and directory indexes. Your SMS storage administrator defines these SMS classes. To use ACS routines for defining these data sets, leave this field blank.
CATXDACL=
## "CATXMGCL" on panel DSNTIPA2: DIRECTORY AND CATALOG INDEXES - MGMT CLASS
## The DIRECTORY AND CATALOG INDEXES - MGMT CLASS field specifies the explicit Storage Management Subsystem (SMS) management class that is to be used for defining VSAM data sets for DB2 catalog and directory indexes. Your SMS storage administrator defines these SMS classes. To use ACS routines for defining these data sets, leave this field blank.
CATXMGCL=
## "CATXSTCL" on panel DSNTIPA2: DIRECTORY AND CATALOG INDEXES - STOR CLASS
## The DIRECTORY AND CATALOG INDEXES - STOR CLASS field specifies the explicit Storage Management Subsystem (SMS) storage class that is to be used for defining VSAM data sets for DB2 catalog and directory indexes. Your SMS storage administrator defines these SMS classes. To use ACS routines for defining these data sets, leave this field blank.
CATXSTCL=
## "CMPSPT01" on panel DSNTIPA2: COMPRESS SPT01
## The value of the COMPRESS_SPT01 subsystem parameter specifies whether the SPT01 directory table space is to be compressed.
CMPSPT01=YES
## "CDRL" on panel DSNTIPA2: COMPRESS DB2 DIR LOBS
## Corresponds to the COMPRESS_DIRLOB subsystem parameter.  Specifies whether LOB table spaces in the DB2 directory are to be compressed.
CDRL=NO
## "SPT01INL" on panel DSNTIPA2: SPT01 INLINE LENGTH
## The SPT01_INLINE_LENGTH subsystem parameter specifies the maximum length of LOB column data in the SPT01 directory table space that is to be maintained in the base table. The length is specified in single-byte characters.
SPT01INL=32138
## -- PANEL DSNTIPA3 (DATA PARAMETERS PANEL) --
## "VOLSDEVT" on panel DSNTIPA3: PERMANENT UNIT NAME
## The PERMANENT UNIT NAME field specifies the device type or unit name that is to be used for allocating data sets that are created during installation or migration.
VOLSDEVT=SYSDA
## "TVOLDEVT" on panel DSNTIPA3: TEMPORARY UNIT NAME
## The value of the TEMPORARY UNIT NAME field specifies the device type or unit name that is to be used for allocating temporary data sets.
TVOLDEVT=SYSDA
## "ZHYPL" on panel DSNTIPA3: ZHYPERLINK
## Corresponds to the ZHYPERLINK subsystem parameter. Specifies a new synchronous I/O connection, which allows to read or write I/O to media manager. Scope of zHyperLink I/O connections: ENABLE, DISABLE, DATABASE, ACTIVELOG.
ZHYPL=DISABLE
## "VOLSDAT2" on panel DSNTIPA3: NON-VSAM DATA
## The values of the NON-VSAM DATA field specify the storage management properties for non-VSAM data. Specifically, the NON-VSAM DATA field applies to the prefix.DBRMLIB.DATA, prefix.RUNLIB.LOAD, and prefix.SRCLIB.DATA data sets.
VOLSDAT2=
## "DATACLS2" on panel DSNTIPA3: NON-VSAM DATA
## The values of the NON-VSAM DATA field specify the storage management properties for non-VSAM data. Specifically, the NON-VSAM DATA field applies to the prefix.DBRMLIB.DATA, prefix.RUNLIB.LOAD, and prefix.SRCLIB.DATA data sets.
DATACLS2=
## "MGMTCLS2" on panel DSNTIPA3: NON-VSAM DATA
## The values of the NON-VSAM DATA field specify the storage management properties for non-VSAM data. Specifically, the NON-VSAM DATA field applies to the prefix.DBRMLIB.DATA, prefix.RUNLIB.LOAD, and prefix.SRCLIB.DATA data sets.
MGMTCLS2=
## "STORCLS2" on panel DSNTIPA3: NON-VSAM DATA
## The values of the NON-VSAM DATA field specify the storage management properties for non-VSAM data. Specifically, the NON-VSAM DATA field applies to the prefix.DBRMLIB.DATA, prefix.RUNLIB.LOAD, and prefix.SRCLIB.DATA data sets.
STORCLS2=
## "VOLSDAT3" on panel DSNTIPA3: VSAM CATALOG, DEFAULT AND WORK FILE DATABASE
## The values in the VSAM CATALOG, DEFAULT AND WORK FILE DATABASE field specify storage management properties. These properties apply to temporary data sets, the default storage group and sample storage group, and the VSAM catalog.
VOLSDAT3=
## "DATACLS3" on panel DSNTIPA3: VSAM CATALOG, DEFAULT AND WORK FILE DATABASE
## The values in the VSAM CATALOG, DEFAULT AND WORK FILE DATABASE field specify storage management properties. These properties apply to temporary data sets, the default storage group and sample storage group, and the VSAM catalog.
DATACLS3=
## "MGMTCLS3" on panel DSNTIPA3: VSAM CATALOG, DEFAULT AND WORK FILE DATABASE
## The values in the VSAM CATALOG, DEFAULT AND WORK FILE DATABASE field specify storage management properties. These properties apply to temporary data sets, the default storage group and sample storage group, and the VSAM catalog.
MGMTCLS3=
## "STORCLS3" on panel DSNTIPA3: VSAM CATALOG, DEFAULT AND WORK FILE DATABASE
## The values in the VSAM CATALOG, DEFAULT AND WORK FILE DATABASE field specify storage management properties. These properties apply to temporary data sets, the default storage group and sample storage group, and the VSAM catalog.
STORCLS3=
## -- PANEL DSNTIPA4 (BSDS AND ACTIVE LOG) --
## "VOLSDAT6" on panel DSNTIPA4: LOG COPY 1, BSDS 2
## When installing DB2, you can change the values of the LOG COPY 1, BSDS 2 field. Specify the storage management properties for the first copy of the active log data set and the second copy of the bootstrap data set (BSDS).
VOLSDAT6=
## "DATACLS6" on panel DSNTIPA4: LOG COPY 1, BSDS 2
## When installing DB2, you can change the values of the LOG COPY 1, BSDS 2 field. Specify the storage management properties for the first copy of the active log data set and the second copy of the bootstrap data set (BSDS).
DATACLS6=
## "MGMTCLS6" on panel DSNTIPA4: LOG COPY 1, BSDS 2
## When installing DB2, you can change the values of the LOG COPY 1, BSDS 2 field. Specify the storage management properties for the first copy of the active log data set and the second copy of the bootstrap data set (BSDS).
MGMTCLS6=
## "STORCLS6" on panel DSNTIPA4: LOG COPY 1, BSDS 2
## When installing DB2, you can change the values of the LOG COPY 1, BSDS 2 field. Specify the storage management properties for the first copy of the active log data set and the second copy of the bootstrap data set (BSDS).
STORCLS6=
## "VOLSDAT7" on panel DSNTIPA4: LOG COPY 2, BSDS 1
## When installing DB2, you can change the values of the LOG COPY 2, BSDS 1 field. Use this field to specify the storage management properties for the second copy of the active log and the first copy of the BSDS.
VOLSDAT7=
## "DATACLS7" on panel DSNTIPA4: LOG COPY 2, BSDS 1
## When installing DB2, you can change the values of the LOG COPY 2, BSDS 1 field. Use this field to specify the storage management properties for the second copy of the active log and the first copy of the BSDS.
DATACLS7=
## "MGMTCLS7" on panel DSNTIPA4: LOG COPY 2, BSDS 1
## When installing DB2, you can change the values of the LOG COPY 2, BSDS 1 field. Use this field to specify the storage management properties for the second copy of the active log and the first copy of the BSDS.
MGMTCLS7=
## "STORCLS7" on panel DSNTIPA4: LOG COPY 2, BSDS 1
## When installing DB2, you can change the values of the LOG COPY 2, BSDS 1 field. Use this field to specify the storage management properties for the second copy of the active log and the first copy of the BSDS.
STORCLS7=
## -- PANEL DSNTIPC (CLIST CALCULATIONS - PANEL 1) --
## "OPNDS" on panel DSNTIPC: DSMAX - MAXIMUM OPEN DATA SETS
## The DSMAX subsystem parameter specifies the maximum number data sets that can be open at one time.
OPNDS=20000
## "EDMSTMTC" on panel DSNTIPC: EDM STATEMENT CACHE
## The EDMSTMTC subsystem parameter determines the minimum amount of EDM storage, in kilobytes, that is to be used for cached dynamic statements. This storage pool is located above the 2 GB bar.
EDMSTMTC=122880
## "EDMDBDC" on panel DSNTIPC: EDM DBD CACHE
## The EDMDBDC subsystem parameter determines the minimum size (in KB) of the DBD cache that is to be used by the environmental descriptor manager (EDM).
EDMDBDC=40960
## "EDMSKP" on panel DSNTIPC: EDM SKELETON POOL SIZE
## The EDM_SKELETON_POOL subsystem parameter determines the minimum size of the EDM skeleton pool in KB.
EDMSKP=81920
## "SRTPOOL" on panel DSNTIPC: SORT POOL SIZE
## The SRTPOOL subsystem parameter specifies the amount of storage in kilobytes that is needed for the sort pool.
SRTPOOL=10000
## "MIMTS" on panel DSNTIPC: MAX IN-MEMORY SORT SIZE
## The MAXSORT_IN_MEMORY subsystem parameter specifies the maximum allocation of storage in kilobytes for a query that contains an ORDER BY clause, a GROUP BY clause, or both.
MIMTS=1000
## "RIDPOOL" on panel DSNTIPC: RID POOL SIZE
## The MAXRBLK subsystem parameter specifies the amount of storage in kilobytes that is needed for the RID pool.
RIDPOOL=1000000
## -- PANEL DSNTIPD (SIZES) --
## "LOBINLEN" on panel DSNTIPD: LOB INLINE LENGTH
## The LOB_INLINE_LENGTH subsystem parameter specifies the default length (in bytes) that is to be used for inline LOB columns.
LOBINLEN=0
## -- PANEL DSNTIPE (THREAD MANAGEMENT PANEL 1) --
## "NUMCONCR" on panel DSNTIPE: MAX USERS
## The CTHREAD subsystem parameter controls the maximum number of allied threads that are to be allocated concurrently. Allied threads are threads that are started at the local subsystem.
NUMCONCR=200
## "NUMCONRM" on panel DSNTIPE: MAX REMOTE ACTIVE
## The value of the MAXDBAT subsystem parameter specifies the maximum number of database access threads (DBATs) that are allowed to be concurrently active.
NUMCONRM=200
## "CONDBAT" on panel DSNTIPE: MAX REMOTE CONNECTED
## The CONDBAT subsystem parameter sets the maximum number of concurrent inbound DDF connections that are to be allowed.
CONDBAT=10000
## "NUMCONTS" on panel DSNTIPE: MAX TSO CONNECT
## The IDFORE subsystem parameter determines the maximum number of users that can be identified to DB2 from TSO foreground at the same time.
NUMCONTS=200
## "NUMCONBT" on panel DSNTIPE: MAX BATCH CONNECT
## The IDBACK subsystem parameter determines the maximum number of concurrent connections that can be identified to DB2 from batch.
NUMCONBT=200
## "MAXKEEPD" on panel DSNTIPE: MAX KEPT DYN STMTS
## The MAXKEEPD subsystem parameter specifies the maximum number of prepared, dynamic SQL statements that are to be saved past a commit point. This parameter applies to applications that run with the KEEPDYNAMIC(YES) bind option.
MAXKEEPD=5000
## "MAXOFILR" on panel DSNTIPE: MAX OPEN FILE REFS
## The MAXOFILR subsystem parameter specifies the maximum number of data sets that can be open concurrently for the processing of LOB file references.
MAXOFILR=100
## -- PANEL DSNTIPE1 (THREAD MANAGEMENT PANEL 2) --
## "RSMGMT" on panel DSNTIPE1: MANAGE REAL STORAGE
## The REALSTORAGE_MANAGEMENT subsystem parameter specifies whether DB2 should manage real storage consumption.
RSMGMT=AUTO
## "LRDRTHLD" on panel DSNTIPE1: LONG-RUNNING READER
## The LRDRTHLD subsystem parameter specifies the number of minutes that an agent is to be allowed to hold a read claim. If a read claim is held longer than allowed, DB2 issues a warning message and writes a trace record to report it as a long-running reader.
LRDRTHLD=10
## "DDLTOX" on panel DSNTIPE1: DATA DEF TIMEOUT
## The DDLTOX subsystem parameter specifies how long a request for SQL data definition is to wait for a resource before timing out. This parameter is used for the processing of DDL statements and GRANT, REVOKE, and LOCK statements.
DDLTOX=1
## "IXCU" on panel DSNTIPE1: INDEX CLEANUP THREADS
## Specifies the maximum number of threads that can be created to process the cleanup of pseudo-deleted index entries on this subsystem or data sharing member. Pseudo-deleted entries in an index are entries that are logically deleted but still physically present in the index.
IXCU=10
## -- PANEL DSNTIPF (APPLICATION PROGRAMMING DEFAULTS PANEL 1) --
## "DEFLANG" on panel DSNTIPF: LANGUAGE DEFAULT
## The DEFLANG DECP value identifies the default programming language that is to be used for your site.
DEFLANG=IBMCOB
## "DECPOINT" on panel DSNTIPF: DECIMAL POINT IS
## The DECIMAL DECP value determines whether the decimal point for numbers is to be a comma (,) or a period (.).
DECPOINT=PERIOD
## "DEFSTRNG" on panel DSNTIPF: STRING DELIMITER
## The DELIM DECP value determines the string delimiter that is to be used for COBOL.
DEFSTRNG=DEFAULT
## "DEFSQSTR" on panel DSNTIPF: SQL STRING DELIMITER
## The SQLDELI DECP value specifies the character that is to be used as the SQL string delimiter to delimit character strings in dynamic SQL.
DEFSQSTR=DEFAULT
## "DECPDSSD" on panel DSNTIPF: DIST SQL STR DELIMTR
## The DSQLDELI DECP value specifies whether an apostrophe or quotation mark is to be used as the SQL string delimiter for bind operations at this DB2 site. This delimiter is to be used when the requester does not give DB2 that information.
DECPDSSD=APOST
## "DEFMIXED" on panel DSNTIPF: MIXED DATA
## The value of the MIXED DECP field indicates how the EBCDIC CCSID and ASCII CCSID fields are to be interpreted by DB2.
DEFMIXED=NO
## "DEFCCSID" on panel DSNTIPF: EBCDIC CCSID
## The value of the EBCDIC CCSID field specifies the default CCSID for EBCDIC-encoded character data that is stored in your DB2 subsystem or data sharing system.
DEFCCSID=37
## "SCCSID" on panel DSNTIPF: EBCDIC CCSID - SINGLE BYTE
## The value of the EBCDIC CCSID field specifies the default CCSID for EBCDIC-encoded character data that is stored in your DB2 subsystem or data sharing system.
SCCSID=37
## "MCCSID" on panel DSNTIPF: EBCDIC CCSID - MIXED
## The value of the EBCDIC CCSID field specifies the default CCSID for EBCDIC-encoded character data that is stored in your DB2 subsystem or data sharing system.
MCCSID=65534
## "GCCSID" on panel DSNTIPF: EBCDIC CCSID - GRAPHIC
## The value of the EBCDIC CCSID field specifies the default CCSID for EBCDIC-encoded character data that is stored in your DB2 subsystem or data sharing system.
GCCSID=65534
## "ASCCSID" on panel DSNTIPF: ASCII CCSID - SINGLE BYTE
## The ASCII CCSID field identifies the default coded character set identifier (CCSID) for ASCII-encoded character data that is to be stored in your DB2 subsystem or data sharing system.
ASCCSID=819
## "AMCCSID" on panel DSNTIPF: ASCII CCSID - MIXED
## The ASCII CCSID field identifies the default coded character set identifier (CCSID) for ASCII-encoded character data that is to be stored in your DB2 subsystem or data sharing system.
AMCCSID=65534
## "AGCCSID" on panel DSNTIPF: ASCII CCSID - GRAPHIC
## The ASCII CCSID field identifies the default coded character set identifier (CCSID) for ASCII-encoded character data that is to be stored in your DB2 subsystem or data sharing system.
AGCCSID=65534
## "USCCSID" on panel DSNTIPF: UNICODE CCSID - SINGLE BYTE
## The value of the UNICODE CCSID field specifies the CCSID that is to be used for Unicode data.
USCCSID=367
## "UMCCSID" on panel DSNTIPF: UNICODE CCSID - MIXED
## The value of the UNICODE CCSID field specifies the CCSID that is to be used for Unicode data.
UMCCSID=1208
## "UGCCSID" on panel DSNTIPF: UNICODE CCSID - GRAPHIC
## The value of the UNICODE CCSID field specifies the CCSID that is to be used for Unicode data.
UGCCSID=1200
## "ENSCHEME" on panel DSNTIPF: DEF ENCODING SCHEME
## The ENSCHEME DECP value specifies the default format in which data is to be stored in DB2.
ENSCHEME=EBCDIC
## "APPENSCH" on panel DSNTIPF: APPLICATION ENCODING
## The APPENSCH DECP value determines the system's default application encoding scheme, which affects how DB2 interprets data coming into DB2.
APPENSCH=EBCDIC
## "LCCTYPE" on panel DSNTIPF: LOCALE LC_CTYPE
## The LC_TYPE DECP value specifies the system LOCALE LC_CTYPE. A locale is the part of your system environment that depends on language and cultural conventions. An LC_CTYPE is a subset of a locale that applies to character functions.
LCCTYPE=
## "DEFDFPRM" on panel DSNTIPF: DECFLOAT ROUNDING MODE
## The DEF_DECFLOAT_ROUND_MODE DECP value specifies the system default action that is to be used for rounding decimal floating point values.
DEFDFPRM=ROUND_HALF_EVEN
## -- PANEL DSNTIPG1 (INSTALLATION PREFERENCES PANEL 2) --
## "ICDSDEV" on panel DSNTIPG1: IMAGE COPY - DEVICE
## The ICDSDEV variable specifies the device for defining ENFM image copy data sets.
ICDSDEV=SYSDA
## "ICDSDC" on panel DSNTIPG1: IMAGE COPY - DATA CLASS
## The ICDSDC variable specifies storage management data class properties for defining ENFM image copy data sets.
ICDSDC=
## "ICDSMC" on panel DSNTIPG1: IMAGE COPY - MGMT CLASS
## The ICDSMC variable specifies storage management management class properties for defining ENFM image copy data sets.
ICDSMC=
## "ICDSSC" on panel DSNTIPG1: IMAGE COPY - STOR CLASS
## The ICDSSC variable specifies storage management storage class properties for defining ENFM image copy data sets.
ICDSSC=
## -- PANEL DSNTIPH (SYSTEM RESOURCE DATA SET NAMES) --
## "LOGSTWO" on panel DSNTIPH: NUMBER OF COPIES (Active Logs)
## The TWOACTV subsystem parameter specifies the number of copies of the active log that DB2 is to maintain: 1 (single logging) or 2 (dual logging).
LOGSTWO=YES
## "ARCHTWO" on panel DSNTIPH: NUMBER OF COPIES (Archive Logs)
## The TWOARCH subsystem parameter specifies the number of copies of the archive log that DB2 is to produce during offloading.
ARCHTWO=YES
## "ARCHTS" on panel DSNTIPH: TIMESTAMP ARCHIVES
## The TSTAMP subsystem parameter specifies whether the DB2 archive log data set name is to contain the date and time that the archive log data set was created.
ARCHTS=YES
## -- PANEL DSNTIPI (IRLM PANEL 1) --
## "IRLMINST" on panel DSNTIPI: INSTALL IRLM
## The INSTALL IRLM field determines whether IRLM subsystem definition entries are to be provided in job DSNTIJMV and whether an IRLM procedure is to be built by job DSNTIJMA.
IRLMINST=YES
## "IRLMWAIT" on panel DSNTIPI: RESOURCE TIMEOUT
## The IRLMRWT subsystem parameter controls the number of seconds that are to elapse before a resource timeout is detected.
IRLMWAIT=30
## "IRLMAUTO" on panel DSNTIPI: AUTO START
## The IRLMAUT subsystem parameter defines whether DB2 is to automatically start and stop the IRLM.
IRLMAUTO=YES
## "IRLMSTTO" on panel DSNTIPI: TIME TO AUTOSTART
## The IRLMSWT subsystem parameter specifies the IRLM wait time in seconds. This is the amount of time that DB2 is to wait for the IRLM to start during autostart. If the time expires, DB2 abends.
IRLMSTTO=120
## "RRULOCK" on panel DSNTIPI: U LOCK FOR RR/RS
## When operations use repeatable read (RR) or read stability (RS) isolation levels to access a table, a specified locking method is used. The RRULOCK subsystem parameter specifies whether DB2 is to use U (UPDATE) locks or S (SHARE) locks.
RRULOCK=YES
## "XLKUPDLT" on panel DSNTIPI: X LOCK FOR SEARCHED U/D
## The XLKUPDLT subsystem parameter specifies the locking method that is to be used when DB2 executes a searched update or delete.
XLKUPDLT=NO
## "IRLMTRAC" on panel DSNTIPI: START IRLM CTRACE
## The value of the START IRLM CTRACE field specifies whether the IRLM component traces are to be activated when IRLM is started. The DB2-provided IRLM procedure in DSNTIJMA is tailored according to this value.
IRLMTRAC=NO
## "BMPTOUT" on panel DSNTIPI: IMS BMP TIMEOUT
## The BMPTOUT subsystem parameter is used to determine the amount of time that an IMS BMP connection is to wait for a lock to be released. The value of this field is multiplied by the value specified in the RESOURCE TIMEOUT field to determine the wait time.
BMPTOUT=4
## "DLITOUT" on panel DSNTIPI: DL/I BATCH TIMEOUT
## The DLITOUT subsystem parameter controls the number of resource timeout values that a DL/I batch connection is to wait for a lock to be released. The resource timeout value is specified in the RESOURCE TIMEOUT field.
DLITOUT=6
## "RETLWAIT" on panel DSNTIPI: RETAINED LOCK TIMEOUT
## When another DB2 subsystem in a data sharing group has failed, it can hold an incompatible lock on a resource. Locks that are held by failed DB2 members are called retained locks. The RETLWAIT subsystem parameter is used to calculate how long a transaction is to wait for a retained lock.
RETLWAIT=0
## -- PANEL DSNTIPJ (IRLM PANEL 2) --
## "IRLMPGPR" on panel DSNTIPJ: PAGE PROTECT
## The value of the PAGE PROTECT field specifies whether IRLM is to load its common storage modules into page-protected storage.
IRLMPGPR=YES
## "IRLMMLMT" on panel DSNTIPJ: MAX STORAGE FOR LOCKS
## The MAX STORAGE FOR LOCKS field specifies, in MB, the maximum amount of private storage above the 2 GB bar for the IRLM lock control block structure.
IRLMMLMT=2160
## "IRLMLKTS" on panel DSNTIPJ: LOCKS PER TABLE(SPACE)
## The NUMLKTS subsystem parameter specifies the default maximum number of page, row, or LOB locks that an application can hold simultaneously in a table or table space. If a single application exceeds the maximum number of locks in a single table or table space, lock escalation occurs.
IRLMLKTS=2000
## "IRLMLKUS" on panel DSNTIPJ: LOCKS PER USER
## The NUMLKUS subsystem parameter specifies the maximum number of page, row, or LOB locks that a single application can hold concurrently for all table spaces.
IRLMLKUS=10000
## "IRLMDEDT" on panel DSNTIPJ: DEADLOCK TIME
## The DEADLOCK TIME field controls the amount of time for which local deadlock detection cycles are to run. A deadlock is a situation in which two or more requesters are waiting for resources that are held by another requester. Deadlock detection is the procedure that identifies deadlocks and its participants.
IRLMDEDT=1
## "IRLMDEDC" on panel DSNTIPJ: DEADLOCK CYCLE
## The value of the DEADLOCK CYCLE field specifies the number of local deadlock cycles that must expire before the IRLM does global deadlock detection processing.
IRLMDEDC=1
## "IRLMIDEN" on panel DSNTIPJ: MEMBER IDENTIFIER
## The value of the MEMBER IDENTIFIER field specifies an ID number that uniquely names this IRLM member within an IRLM data sharing group.
IRLMIDEN=1
## "MAXUSRS" on panel DSNTIPJ: LOCK ENTRY SIZE
## The MAXUSRS variable is derived from the input field LOCK ENTRY SIZE. DB2 converts the value for LOCK ENTRY SIZE to a corresponding value for the IRLM parameter MAXUSRS. The accepted value for this variables are 7,23,32.
MAXUSRS=7
## "IRLMLTE" on panel DSNTIPJ: NUMBER OF LOCK ENTRIES
## The value of the NUMBER OF LOCK ENTRIES field specifies the number of lock table entries that are to be in the coupling facility lock structure.
IRLMLTE=0
## "IRLMDISC" on panel DSNTIPJ: DISCONNECT IRLM
## The value of the DISCONNECT IRLM field determines whether IRLM is to automatically disconnect from the data sharing group when DB2 is not identified to it.
IRLMDISC=YES
## -- PANEL DSNTIPK (DEFINE GROUP OR MEMBER) --
## "SGRPATNM" on panel DSNTIPK: SUBGRP ATTACH
## The SUBGRP ATTACH field identifies the name of a new or existing subgroup attachment that is to be associated with this subsystem. A subgroup attachment name can be specified with a group attachment name to organize how TSO, CAF, RRSAF, JDBC, ODBC, and DB2 utilities connections find an active DB2 subsystem.
SGRPATNM=
## "RANDMATT" on panel DSNTIPK: RANDOM ATTACH
## The RANDOMATT subsystem parameter specifies whether this DB2 member can be used for randomized group attachment or subgroup attachment processing. This setting is ignored when the GROUP ATTACH field is blank.
RANDMATT=YES
## "DCFS" on panel DSNTIPK: DEL CF STRUCTS
## The DEL_CFSTRUCTS_ON_RESTART parameter specifies whether, during restart, DB2 is to attempt to delete the SCA, IRLM lock structure, and any allocated group buffer pools from the coupling facility.
DCFS=NO
## "PEERRECO" on panel DSNTIPK: PEER RECOVERY
## Corresponds to the PEER_RECOVERY subsystem parameter.  Specifies whether the data sharing member participates in data sharing peer recovery.
PEERRECO=NONE
## -- PANEL DSNTIPL (ACTIVE LOG DATA SET PARAMETERS) --
## "LOGSNUM" on panel DSNTIPL: NUMBER OF LOGS
## The NUMBER OF LOGS field specifies the number of data sets that are to be established for each copy of the active log during installation.
LOGSNUM=3
## "LOGOUTPT" on panel DSNTIPL: OUTPUT BUFFER
## The OUTPUT BUFFER field sets the OUTBUFF subsystem parameter, which specifies the size of the output buffer that is to be used for writing active log data sets.
LOGOUTPT=4000
## "RCSA" on panel DSNTIPL: REMOTE COPY SW ACCEL
## The RCSA variable specifies whether DB2 uses software to control the remote copy process for active log output in peer-to-peer remote copy (PPRC) environments.
RCSA=DISABLE
## -- PANEL DSNTIPL1 (CHECKPOINT PARAMETERS) --
## "CHKTYPE" on panel DSNTIPL1: CHECKPOINT TYPE
## The CHKTYPE subsystem parameter indicates whether the interval between log checkpoints is to be based on the number of written log records, the time between checkpoints, or both.
CHKTYPE=SINGLE
## "CHKLOGR" on panel DSNTIPL1: RECORDS/CHECKPOINT
## The RECORDS/CHECKPOINT field determines the number of log records that are to be created between log checkpoints.
CHKLOGR=NOTUSED
## "CHKMINS" on panel DSNTIPL1: MINUTES/CHECKPOINT
## The MINUTES/CHECKPOINT field determines the number of minutes that are to pass between log checkpoints.
CHKMINS=NOTUSED
## "URCHKTH" on panel DSNTIPL1: UR CHECK FREQ
## Unless the option is disabled, DB2 issues a warning message to the console for an uncommitted unit of recovery (UR) after a certain number of checkpoint cycles. The URCHKTH subsystem parameter specifies the number of checkpoint cycles that are to complete before DB2 issues the warning message.
URCHKTH=5
## "URLGWTH" on panel DSNTIPL1: UR LOG WRITE CHECK
## Unless this option is disabled, DB2 issues a warning message to the console after log records are written by an uncommitted unit of recovery (UR). The URLGWTH subsystem parameter specifies the number of log records that are to be written before DB2 issues a warning message.
URLGWTH=10
## "LBACKOUT" on panel DSNTIPL1: LIMIT BACKOUT
## The LBACKOUT subsystem parameter specifies whether DB2 is to postpone backward-log processing for some units of work.
LBACKOUT=LIGHTAUTO
## "BACKODUR" on panel DSNTIPL1: BACKOUT DURATION
## The BACKODUR subsystem parameter is used to calculate the number of log records that are to be backed out during a restart. This value is applied when the LIMIT BACKOUT field is set to AUTO, YES, LIGHT, or LIGHTAUTO.
BACKODUR=5
## "PCLOSEN" on panel DSNTIPL1: RO SWITCH CHKPTS
## The PCLOSEN subsystem parameter specifies the number of consecutive DB2 checkpoints that are to be allowed after a page set or partition is updated. After the specified number of checkpoints occur, DB2 converts the page set or partition from read-write to read-only.
PCLOSEN=15
## "PCLOSET" on panel DSNTIPL1: RO SWITCH TIME
## The PCLOSET subsystem parameter specifies the number of minutes that can elapse after a page set or partition is updated. After the specified number of minutes, DB2 converts the set or partition from read-write to read-only.
PCLOSET=45
## "DLDFREQ" on panel DSNTIPL1: LEVELID UPDATE FREQ
## The DLDFREQ subsystem parameter specifies whether the level ID of a page set or partition is to be updated at DB2-determined checkpoint intervals.
DLDFREQ=ON
## "CHKFREQ" on panel DSNTIPL1: MINUTES/CHECKPOINT, RECORDS/CHECKPOINT
## The MINUTES/CHECKPOINT field determines the number of minutes that are to pass between log checkpoints.
CHKFREQ=3
## -- PANEL DSNTIPM (MVS PARMLIB UPDATES) --
## "MVSSMEMB" on panel DSNTIPM: SUBSYSTEM MEMBER
## The value of the SUBSYSTEM MEMBER field specifies the last two characters (xx) of the name of member IEFSSNxx of SYS1.PARMLIB.
MVSSMEMB=00
## "MVSSSEQN" on panel DSNTIPM: SUBSYSTEM SEQUENCE
## The SUBSYSTEM SEQUENCE field specifies a sequence number that is to be used for insertion. Use any number that is greater than the highest sequence number that is already used in the IEFSSNxx PARMLIB member.
MVSSSEQN=88888888
## "MVSAMEMB" on panel DSNTIPM: AUTH MEMBER
## The value of the AUTH MEMBER field specifies the last two characters (xx) of the name of member IEAAPFxx of SYS1.PARMLIB. This member is to be used for authorized program facility (APF) authorization of the prefix.SDSNLOAD, prefix.SDSNLINK, and prefix.SDSNEXIT libraries.
MVSAMEMB=00
## "MVSASEQN" on panel DSNTIPM: AUTH SEQUENCE
## The value of the AUTH SEQUENCE field is to be used as the sequence number for insertion in the IEAAPFxx PARMLIB member. Specify any number that is greater than the highest sequence number that is already used in the IEAAPFxx PARMLIB member.
MVSASEQN=88888888
## "MVSLMEMB" on panel DSNTIPM: LINK LIST ENTRY
## The value of the LINK LIST ENTRY field specifies the last two characters of LNKLSTxx as needed to include the prefix.SDSNLINK library.
MVSLMEMB=00
## "MVSLSEQN" on panel DSNTIPM: LINK LIST SEQUENCE
## The LINK LIST SEQUENCE field specifies the sequence number that is to be used for insertion. Use any number that is greater than the highest sequence number that is already used in the LNKLSTxx PARMLIB member.
MVSLSEQN=88888888
## "CMDSCOPE" on panel DSNTIPM: COMMAND SCOPE
## The value of the COMMAND SCOPE field controls whether the scope of the command prefix is to be one z/OS system or the entire Sysplex.
CMDSCOPE=S
## "SUPERRS" on panel DSNTIPM: SUPPRESS SOFT ERRORS
## The SUPERRS subsystem parameter specifies whether DB2 is to record errors such as invalid decimal data and arithmetic exceptions and issue SQLCODEs for them. This option enables or disables the recording of these errors in the operating system data set, SYS1.LOGREC.
SUPERRS=YES
## -- PANEL DSNTIPM3 (Z/OSMF WORKFLOW ARTIFACTS GENERATION) --
## "ACCLMDL" on panel DSNTIPM3: ACCELMODEL
## Specifies whether accelerator servers can be used with a DB2 subsystem, and how the accelerator servers are to be enabled and started. An accelerator server cannot be started unless it is enabled.
ACCLMDL=YES
## "AUTCMPAT" on panel DSNTIPM3: AUTCMPAT
## Corresponds to the AUTH_COMPATIBILITY subsystem parameter.  Specifies whether current-release or previous-release authorization rules are used for specific DB2 operations.
AUTCMPAT=
## "CHKFASRP" on panel DSNTIPM3: CHECK_FASTREPLICATION
## The CHECK_FASTREPLICATION parameter specifies the type of replication that DSS COPY uses to copy objects to shadow data sets when it is invoked by the DB2 CHECK utilities. The CHECK utilities can stipulate fast replication as PREFERRED or REQUIRED.
CHKFASRP=REQUIRED
## "COMCRIT" on panel DSNTIPM3: COMCRIT
## Specifies whether DB2 runs in a Common Criteria environment.
COMCRIT=NO
## "DSINUN" on panel DSNTIPM3: DISALLOW_SEL_INTO_UNION
## Specifies whether DB2 will prevent use of a UNION or UNION ALL in the outermost FROM clause of a SELECT INTO statement.  Valid settings are NO (the default) and YES.
DSINUN=YES
## "ENPJSJ" on panel DSNTIPM3: EN_PJSJ
## Specifies whether to enable dynamic index ANDing, which is also called pair-wise join processing, when star join processing is enabled on DB2. Valid values are ON and OFF. The default value is OFF, which means that dynamic index ANDing is disabled.
ENPJSJ=OFF
## "HNRKPDIC" on panel DSNTIPM3: HONOR_KEEPDICTIONARY
## Specifies whether DB2 honors the LOAD and REORG parameter KEEPDICTIONARY when tables are converted from basic row format to reordered row format. If HONOR_KEEPDICTIONARY is set to a value of YES, DB2 honors the LOAD and REORG parameter KEEPDICTIONARY.
HNRKPDIC=NO
## "INLISTP" on panel DSNTIPM3: INLISTP
## Allows you to specify the maximum number of elements in an IN-list for certain IN predicate optimizations to occur.
INLISTP=1000
## "LBIN" on panel DSNTIPM3: LIKE BLANK INSIGNIFICANT
## The LIKE BLANK INSIGNIFICANT field specifies whether blanks are significant when applying the LIKE predicate to a string. If set, the blank insignificant behavior applies.
LBIN=NO
## "MNSU" on panel DSNTIPM3: MATERIALIZE_NODET_SQLTUDF
## Specifies whether DB2 will materialize the result of a user-defined SQL table function that is defined as NOT DETERMINISTIC.  Valid settings are NO (the default) and YES.
MNSU=NO
## "MXCONPKG" on panel DSNTIPM3: MAX_CONCURRENT_PKG_OPS
## Specifies the maximum number of automatic bind requests, remote bind requests, remote rebind requests, CREATE TRIGGER statements, and CREATE PROCEDURE statements for packages that can be processed simultaneously. If the value of the AUTO BIND field of panel DSNTIPO is set to NO, the value of MAX_CONCURRENT_PKG_OPS has no effect.
MXCONPKG=10
## "MXOPTSTO" on panel DSNTIPM3: MAX_OPT_STOR
## IBM Serviceability.  Do not change without IBM guidance.
MXOPTSTO=40
## "MINDVSCL" on panel DSNTIPM3: MINDVSCL
## Specifies the minimum scale for the result of a decimal division.
MINDVSCL=
## "MINRBLK" on panel DSNTIPM3: MINRBLK
## Specifies the least number of RID lists that DB2 allows for each RID map.
MINRBLK=
## "MTAD" on panel DSNTIPM3: MOVE_TO_ARCHIVE_DEFAULT
## Specifies the default for the SYSIBMADM.MOVE_TO_ARCHIVE built-in global variable. Valid settings are: E, N (the default), and Y.
MTAD=N
## "MXTBJOIN" on panel DSNTIPM3: MXTBJOIN
## IBM Serviceability.  Do not change without IBM guidance.
MXTBJOIN=225
## "NPGTHRSH" on panel DSNTIPM3: NPGTHRSH
## Specifies whether DB2 is to use special access path selection for tables under a given size.
NPGTHRSH=1
## "OPTXQB" on panel DSNTIPM3: OPTXQB
## IBM Serviceability.  Do not change without IBM guidance.
OPTXQB=ON
## "OP1RBSRT" on panel DSNTIPM3: OPT1ROWBLOCKSORT
## Specifies whether DB2 explicitly blocks sort operations when the OPTIMIZE FOR 1 ROW clause is specified on a query. Valid values are ENABLE or DISABLE.
OP1RBSRT=DISABLE
## "PCIP" on panel DSNTIPM3: PREVENT_NEW_IXCTRL_PART
## The PREVENT_NEW_IXCTRL_PART subsystem parameter determines whether DB2 disallows the creation of new index-controlled partitioned tables. This subsystem parameter ensures that new partitioned tables use table-controlled partitioning, which is the preferred partitioning method for non-universal table spaces.
PCIP=YES
## "RSMAX" on panel DSNTIPM3: REALSTORAGE_MAX
## Specifies the maximum GB of real and auxiliary storage that DB2 can consume. Valid values are NOLIMIT and 1 to 65535.
RSMAX=NOLIMIT
## "RACFD" on panel DSNTIPM3: RESTRICT_ALT_COL_FOR_DCC
## Specifies whether restrictions apply to ALTER TABLE ALTER COLUMN statements for target tables that are defined with the DATA CAPTURE CHANGES attribute. Valid values are NO and YES.
RACFD=NO
## "SECA1IS" on panel DSNTIPM3: SECADM1_INPUT_STYLE
## Specifies whether the SECADM1 setting is passed as a hexadecimal string or as a standard character string. Valid values are HEX or CHAR.
SECA1IS=CHAR
## "SECA2IS" on panel DSNTIPM3: SECADM2_INPUT_STYLE
## Specifies whether the SECADM2 setting is passed as a hexadecimal string or as a standard character string. Valid values are HEX or CHAR.
SECA2IS=CHAR
## "SIMCCNT" on panel DSNTIPM3: SIMULATED_CPU_COUNT
## Specifies the number of CPUs that are being simulated. This parameter is to be used for DB2 optimization modeling only.
SIMCCNT=OFF
## "SIMCSPD" on panel DSNTIPM3: SIMULATED_CPU_SPEED
## Specifies the microseconds of execution time for tasks or service request blocks (SRBs) per service unit for the CPU that is being simulated. This parameter is to be used for DB2 optimization modeling only.
SIMCSPD=OFF
## "SJTABLES" on panel DSNTIPM3: SJTABLES
## Specifies when DB2 is to enable star join processing.
SJTABLES=10
## "SUBQMIDX" on panel DSNTIPM3: SUBQ_MIDX
## Specifies whether to enable or disable multiple index access on some non-Boolean uncorrelated subquery predicates.
SUBQMIDX=ENABLE
## -- PANEL DSNTIPM4 (Z/OSMF CUSTOMIZATION - OTHER SUBSYSTEM PARAMETERS) --
## "SHSD" on panel DSNTIPM4: SUPPRESS_HINT_SQLCODE_DYN
## Specifies whether DB2 suppresses SQLCODE +394 and SQLCODE +395 when specified access paths are applied for dynamic SQL statements. Valid values of SUPPRESS_HINT_SQLCODE_DYN are NO, STMT, and ALL.
SHSD=NO
## "UNCOLN7" on panel DSNTIPM4: UNION_COLNAME_7
## The UNCOLN7 variable specifies what behavior DB2 uses for result column names in UNION queries.  Valid values are NO and YES.  The default is NO.
UNCOLN7=NO
## "NOET" on panel DSNTIPM4: XML_RESTRICT_EMPTY_TAG
## The NOET variable specifies whether DB2 always serializes an empty XML element using a start-element tag followed by an end-element tag. Valid values are NO and YES. NO is the default.
NOET=NO
## "ZOSMETRI" on panel DSNTIPM4: ZOSMETRICS
## Enables DB2 to gather z/OS metrics, including CPU usage and storage metrics, by using the z/OS Resource Measurement Facility (RMF) interface. Valid values are YES and NO.
ZOSMETRI=NO
## "ENKL" on panel DSNTIPM4: ENCRYPTION_KEYLABEL
## Specifies the name of a ICSF key label to pass when using DFSMS access method encryption support to define encrypted data sets for the DB2 catalog, directory, and archive logs.
ENKL=
## "DSSAR" on panel DSNTIPM4: DISALLOW_SSARAUTH
## Determines whether user address spaces are blocked from setting a Db2 address space as a secondary address space.  Valid settings are NO (the default) and YES.
DSSAR=NO
## "OFFLOAD" on panel DSNTIPM4: OFFLOAD
## Specifies whether the offload process is initiated online.
OFFLOAD=
## "TWOBSDS" on panel DSNTIPM4: TWOBSDS
## Specifies whether two BSDS data sets are used.
TWOBSDS=
## "CDDSMOD" on panel DSNTIPM4: CDDSMOD
## Specifies how this DB2 supports replication of logs.
CDDSMOD=NONE
## "IMPDSSIZ" on panel DSNTIPM4: IMPDSSIZE
## Specifies the maximum data set size (DSSIZE) in gigabytes that DB2 should use for creating an implicit base table space. This parameter is not used for the creation of implicit LOB or XML table spaces. Valid settings are 1, 2, 4, 8, 16, 32, 64, 128, and 256.
IMPDSSIZ=4
## "IMPTKMOD" on panel DSNTIPM4: IMPTKMOD
## Specifies whether DB2 is to track modifications to the pages of base table spaces. The setting is not used for LOB or XML table spaces. Valid values are YES and NO.
IMPTKMOD=YES
## "PTASKROL" on panel DSNTIPM4: PTASKROL
## Indicates whether to roll up accounting trace records from a parallel query task into the originating task's accounting trace. A value of YES means the originating task is to generate an additional accounting trace record with all the roll-up values from parallel tasks.
PTASKROL=YES
## "SMF89" on panel DSNTIPM4: SMF89
## Specifies whether DB2 is to do detailed tracking for measured usage pricing. If you select YES, DB2 does detailed measured usage tracking if SMF type 89 records are activated. When SMF89 is set to YES, DB2 invokes a z/OS service on every entry into or exit out of DB2 to ensure accurate tracking.
SMF89=
## "DDFCMPAT" on panel DSNTIPM4: DDF_COMPATIBILITY
## Controls the DDF compatibility characteristics of a connection between a client application and a DB2 for z/OS data server.
DDFCMPAT=
## "PRIVPRTL" on panel DSNTIPM4: PRIVATE_PROTOCOL
## Private protocol is no longer supported; however, this subsystem parameter controls package EXECUTE authorization behavior related to remote DB2 requester applications.
PRIVPRTL=NO
## "SQLINTRP" on panel DSNTIPM4: SQLINTRP
## IBM Serviceability.  Do not change without IBM guidance.
SQLINTRP=ENABLE
## -- PANEL DSNTIPM5 (Z/OSMF JCL TEMPLATE CUSTOMIZATION) --
## "STOGJRT" on panel DSNTIPM5: STORAGE GROUP FOR DATABASE AND TABLESPACE
## The STOGJRT field specifies the name of the STOGROUP for databases and table spaces created by DSNTRIN in DSNTIJRT job.
STOGJRT=SYSDEFLT
## "STGIJRT" on panel DSNTIPM5: STORAGE GROUP FOR INDEX
## The STGIJRT field specifies the name of the STOGROUP for indexes created by DSNTRIN in DSNTIJRT job.
STGIJRT=SYSDEFLT
## -- PANEL DSNTIPN (TRACING PARAMETERS) --
## "AUDIT" on panel DSNTIPN: AUDIT TRACE
## The AUDITST parameter controls whether the audit trace is to start automatically when DB2 is started. You can specify the classes for which the audit trace is to start.
AUDIT=NO
## "OPTRCAUT" on panel DSNTIPN: TRACE AUTO START
## The TRACSTR subsystem parameter specifies whether the global trace is to start automatically when DB2 is started. This parameter also specifies the classes for which the global trace is to automatically start.
OPTRCAUT=NO
## "OPTRCSIZ" on panel DSNTIPN: TRACE SIZE
## The TRACTBL subsystem parameter specifies the size, in bytes, of the RES trace table. This table is the default destination for the global trace records in DB2. Most trace records require 32 byte entries. Events with more than three data items require 64 byte entries.
OPTRCSIZ=25
## "OPSMFACT" on panel DSNTIPN: SMF ACCOUNTING
## The SMFACCT subsystem parameter specifies whether DB2 is to send accounting data to SMF automatically when DB2 is started. This parameter also specifies which classes are to be sent.
OPSMFACT=1,2,3,7,8
## "OPSMFSTA" on panel DSNTIPN: SMF STATISTICS
## The SMFSTAT subsystem parameter specifies whether DB2 is to send statistical data to SMF automatically when DB2 is started. This parameter also specifies which classes are sent.
OPSMFSTA=*
## "OPSTATMM" on panel DSNTIPN: MAIN STATS TIME
## The STATIME_MAIN subsystem parameter specifies the time interval, in seconds, between gathering of statistics not subject to timing specified by the STATIME parameter.  Statistics records are to be written at approximately the end of this interval.
OPSTATMM=60
## "OPSTATIM" on panel DSNTIPN: STATISTICS TIME
## The STATIME subsystem parameter specifies the time interval, in minutes, between gathering of statistics for IFCIDs 0105, 0106, 0199, 0365, and 0402.  Statistics records are to be written at approximately the end of this interval.
OPSTATIM=1
## "SYNCVAL" on panel DSNTIPN: STATISTICS SYNC
## The SYNCVAL subsystem parameter specifies whether DB2 statistics recording is to be synchronized with some part of the hour, such as 15 minutes past the hour.
SYNCVAL=0
## "DSSTIME" on panel DSNTIPN: DATASET STATS TIME
## The DSSTIME subsystem parameter specifies the time interval, in minutes, that is to occur between the resetting of data set statistics for online performance monitors.
DSSTIME=5
## "MON" on panel DSNTIPN: MONITOR TRACE
## The MON subsystem parameter specifies whether the monitor trace is to start automatically when DB2 is started. The trace can be started for all classes, a default class, or a specified list of classes.
MON=YES
## "MONSIZE" on panel DSNTIPN: MONITOR SIZE
## The MONSIZE subsystem parameter determines the default buffer size that is to be used for monitor traces when data is sent to monitor destinations.
MONSIZE=1048576
## "UIFCIDS" on panel DSNTIPN: UNICODE IFCIDS
## The UIFCIDS subsystem parameter specifies whether output from IFC records is to include Unicode information.
UIFCIDS=NO
## "ACCUMACC" on panel DSNTIPN: DDF/RRSAF ACCUM
## The ACCUMACC parameter determines whether DB2 accounting data is to be accumulated by the user for DDF and RRSAF threads.
ACCUMACC=NO
## "ACCUMUID" on panel DSNTIPN: AGGREGATION FIELDS
## The ACCUMUID subsystem parameter determines the aggregation fields that are to be used for DDF and RRSAF accounting rollup.
ACCUMUID=0
## "SMFCOMP" on panel DSNTIPN: COMPRESS SMF RECS
## The SMFCOMP subsystem parameter specifies whether DB2 is to compress trace records that are to be written to SMF.
SMFCOMP=ON
## -- PANEL DSNTIPO (OPERATOR FUNCTIONS) --
## "OPROUTCD" on panel DSNTIPO: WTO ROUTE CODES
## The ROUTCDE subsystem parameter specifies the z/OS console routing codes that are to be assigned to messages that are not solicited from a specific console.
OPROUTCD=1
## "RECALL" on panel DSNTIPO: RECALL DATABASE
## The RECALL subsystem parameter controls whether DFSMShsm automatic recall is to be performed for DB2 databases.
RECALL=YES
## "RECALLD" on panel DSNTIPO: RECALL DELAY
## The RECALLD subsystem parameter specifies the maximum length of time, in seconds, that a program can be delayed for a DFSMShsm recall.
RECALLD=120
## "ABIND" on panel DSNTIPO: AUTO BIND
## The ABIND subsystem parameter determines whether plans or packages are to be automatically rebound (or autobound) at run time in certain situations.
ABIND=COEXIST
## "ABEXP" on panel DSNTIPO: EXPLAIN PROCESSING
## The ABEXP subsystem parameter controls whether EXPLAIN processing is to occur during an automatic rebind.
ABEXP=YES
## "CHGDC" on panel DSNTIPO: DPROP SUPPORT
## The value of the DPROP SUPPORT field determines whether IMS DataPropagator is to be used to propagate SQL changes to tables defined with DATA CAPTURE CHANGES.
CHGDC=NO
## "EDPROP" on panel DSNTIPO: DPROP SUPPORT
## The value of the DPROP SUPPORT field determines whether IMS DataPropagator is to be used to propagate SQL changes to tables defined with DATA CAPTURE CHANGES.
EDPROP=NO
## "SITETYP" on panel DSNTIPO: SITE TYPE
## The SITETYP subsystem parameter specifies whether the current system is at a local site or a recovery site.
SITETYP=LOCALSITE
## "TRKRSITE" on panel DSNTIPO: TRACKER SITE
## The value of the TRKRSITE subsystem parameter indicates whether the subsystem that is being installed is to be used as a remote tracker site. A remote tracker site is used by another DB2 subsystem in case of a disaster.
TRKRSITE=NO
## "ARC2FRST" on panel DSNTIPO: READ COPY2 ARCHIVE
## The ARC2FRST subsystem parameter determines whether COPY2 archives are to be read first when the DB2 subsystem is started.
ARC2FRST=NO
## "PFAS" on panel DSNTIPO: PROFILE AUTOSTART
## Corresponds to the PROFILE_AUTOSTART subsystem parameter.  Specifies whether START PROFILE command processing is automatically initiated as part of DB2 start processing.
PFAS=NO
## -- PANEL DSNTIPO3 (DEFAULT STARTUP MODULES) --
## "ACCTLMOD" on panel DSNTIPO3: ACCESS CONTROL
## The value of this field specifies the member name of the load module that is to be used for the DB2 access control exit routine.
ACCTLMOD=DSNX@XAC
## "IDAUTMOD" on panel DSNTIPO3: IDENTIFY/AUTH
## The value of this field specifies the member name of the load module that is to be used for the DB2 connection authorization exit routine.
IDAUTMOD=DSN3@ATH
## "SIGNOMOD" on panel DSNTIPO3: SIGNON
## The value of this field specifies the member name of the load module that is to be used for the DB2 sign-on exit routine.
SIGNOMOD=DSN3@SGN
## -- PANEL DSNTIPO4 (RESOURCE LIMIT FACILITY) --
## "RLFSTART" on panel DSNTIPO4: RLF AUTO START
## The RLF subsystem parameter specifies whether the resource limit facility (governor) is to automatically start each time DB2 is started.
RLFSTART=NO
## "RLFSCOPE" on panel DSNTIPO4: RLF SCOPE
## Corresponds to the RLFENABLE subsystem parameter.  Specifies whether the resource limit facility limits resources that are used by dynamic SQL statements only, static SQL statement only, or all SQL statements.
RLFSCOPE=DYNAMIC
## "RLFSUFF" on panel DSNTIPO4: RLST NAME SUFFIX
## The RLFTBL subsystem parameter specifies the suffix that is to be used for the default resource limit specification table (RLST). The default RLST is used when the resource limit facility (governor) is automatically started or when the governor is started without a specified suffix.
RLFSUFF=01
## "RLFERROR" on panel DSNTIPO4: DYNAMIC SQL
## The RLFERRD subsystem parameter specifies the action that DB2 takes for dynamic SQL statements from remote locations if the resource limit facility encounters a condition that prevents it from accessing the resource limit specification table. This setting also applies if DB2 cannot find an applicable row in the resource limit specification table. This parameter applies to the distributed data facility.
RLFERROR=NOLIMIT
## "RLFERRST" on panel DSNTIPO4: STATIC SQL
## Corresponds to the RLFERRSTC subsystem parameter.  Specifies the action that DB2 takes when a problem occurs with the resource limit specification table during execution of a local, static SQL statement.
RLFERRST=NOLIMIT
## "RLFERRD" on panel DSNTIPO4: REMOTE DYNAMIC SQL
## The RLFERRD subsystem parameter specifies the action that DB2 takes for dynamic SQL statements from remote locations if the resource limit facility encounters a condition that prevents it from accessing the resource limit specification table. This setting also applies if DB2 cannot find an applicable row in the resource limit specification table. This parameter applies to the distributed data facility.
RLFERRD=NOLIMIT
## "RLFERRDS" on panel DSNTIPO4: REMOTE STATIC SQL
## Corresponds to the RLFERRDSTC subsystem parameter.  Specifies the action that DB2 takes for static SQL statements from remote locations when a problem occurs with the resource limit specification table.
RLFERRDS=NOLIMIT
## -- PANEL DSNTIPP (PROTECTION) --
## "PROTARAC" on panel DSNTIPP: ARCHIVE LOG RACF
## The PROTECT subsystem parameter specifies whether archive log data sets are to be protected with individual profiles with RACF when they are created.
PROTARAC=NO
## "AUTHCACH" on panel DSNTIPP: PLAN AUTH CACHE
## The AUTHCACH subsystem parameter specifies the size (in bytes per plan) of the authorization cache that is to be used if no CACHESIZE is specified on the BIND PLAN subcommand.
AUTHCACH=3072
## "CACHEPAC" on panel DSNTIPP: PACKAGE AUTH CACHE
## The CACHEPAC subsystem parameter determines the amount of storage in bytes to allocate for caching package authorization information for all packages on this DB2 member. The cache is stored in the DSN1DBM1 address space.
CACHEPAC=5242880
## "CACHERAC" on panel DSNTIPP: ROUTINE AUTH CACHE
## The CACHERAC subsystem parameter determines the amount of storage in bytes to allocate for caching routine authorization information for all routines on this DB2 member. Routines include stored procedures and user-defined functions.
CACHERAC=5242880
## "AEXITLIM" on panel DSNTIPP: AUTH EXIT LIMIT
## The AEXITLIM subsystem parameter controls the number of abends of the DB2 access control authorization exit routine that are to be tolerated before it is shut down.
AEXITLIM=10
## "RACK" on panel DSNTIPP: AUTH EXIT CHECK
## The AUTHEXIT_CHECK subsystem parameter specifies whether the owner or the primary authorization ID is used for authorization checks when the access control authorization exit (DSNX@XAC) is active.
RACK=PRIMARY
## "AECR" on panel DSNTIPP: AUTH EXIT CACHE REFR
## The AUTHEXIT_CACHEREFRESH subsystem parameter specifies whether the cache entries of the package authorization, the routine authorization, the DDF user authentication, and the dynamic statement are refreshed and whether the dependent packages are invalidated when a user profile or resource access is changed in RACF. The cache entries are refreshed only when the access control authorization exit (DSNX@XAC) is active.
AECR=NONE
## -- PANEL DSNTIPP1 (PROTECTION) --
## "SECADM1T" on panel DSNTIPP1: SEC ADMIN 1 TYPE
## The SECADM1_TYPE subsystem parameter specifies whether the entry in the SECURITY ADMIN 1 field is an authorization ID or a role.
SECADM1T=AUTHID
## "SECADM2T" on panel DSNTIPP1: SEC ADMIN 2 TYPE
## The SECADM2_TYPE subsystem parameter specifies whether the entry in the SECURITY ADMIN 2 field is an authorization ID or a role.
SECADM2T=AUTHID
## "SEPSECUR" on panel DSNTIPP1: SEPARATE SECURITY
## The SEPARATE_SECURITY subsystem parameter specifies whether DB2 security administrator duties are to be separated from system administrator duties for this subsystem.
SEPSECUR=NO
## "PROTUNKN" on panel DSNTIPP1: UNKNOWN AUTHID
## The DEFLTID subsystem parameter specifies the authorization ID that is to be used if RACF is not available for batch access and USER is not specified in the JOB statement.
PROTUNKN=IBMUSER
## "PROTRLF" on panel DSNTIPP1: RESOURCE AUTHID
## The RLFAUTH subsystem parameter specifies the authorization ID that is to be used if you plan to use the resource limit facility (governor).
PROTRLF=SYSIBM
## "BINDNV" on panel DSNTIPP1: BIND NEW PACKAGE
## The BINDNV subsystem parameter controls whether BIND or BINDADD authority is to be required for a user to bind a new version of an existing package.
BINDNV=BINDADD
## "DBACRVW" on panel DSNTIPP1: DBADM CREATE AUTH
## The DBACRVW subsystem parameter controls whether an authorization ID with DBADM authority on a database is to be allowed to complete certain tasks.
DBACRVW=NO
## "REVDPRIV" on panel DSNTIPP1: REVOKE DEP PRIV
## The REVOKE_DEP_PRIVILEGES subsystem parameter controls whether revoking a privilege from a user is to cause dependent privileges to be revoked. If dependent privileges are to be revoked, revoking a privilege from a user also revokes the privilege from anyone that the user has granted that privilege to.
REVDPRIV=SQLSTMT
## -- PANEL DSNTIPR (DISTRIBUTED DATA FACILITY) --
## "DDSTART" on panel DSNTIPR: DDF STARTUP OPTION
## The DDF subsystem parameter controls whether DDF is to be loaded at startup and, if DDF is to be loaded, how it is to be started.
DDSTART=AUTO
## "DDLUNAM" on panel DSNTIPR: DB2 VTAM LUNAME
## The value of the DB2 VTAM LUNAME field specifies the LU name that is to uniquely identify this DB2 subsystem to VTAM. The name is also to be used to uniquely identify logical units of work within DB2 trace records.
DDLUNAM=
## "DDPASS" on panel DSNTIPR: DB2 VTAM PASSWORD
## The optional DB2 VTAM PASSWORD field specifies the password that VTAM is to use to recognize this DB2 subsystem.
DDPASS=
## "GENLUNM" on panel DSNTIPR: DB2 GENERIC LUNAME
## The value of the DB2 GENERIC LUNAME field specifies a generic LU name that is used to identify this member of a data sharing group in a network.
GENLUNM=
## "SECPORT" on panel DSNTIPR: SECURE PORT
## The value of the SECURE PORT field specifies the TCP/IP port number that is to be used for accepting secure TCP/IP connection requests from remote DRDA clients and REST services.
SECPORT=
## "RESYNC" on panel DSNTIPR: RESYNC INTERVAL
## A resynchronization period is the time during which indoubt logical units of work that involve this DB2 subsystem and partner logical units are processed. The RESYNC subsystem parameter specifies the time interval, in minutes, that is to occur between resynchronization periods.
RESYNC=2
## -- PANEL DSNTIPRB (Trace formatting routines) --
## "RTB01ACL"  on panel DSNTIPRB: DSNWSPM GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DSNWSPM
RTB01ACL=PUBLIC
## "RTB01PKO"  on panel DSNTIPRB: DSNWSPM PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTB01PKO=
## "RTB02ACL"  on panel DSNTIPRB: DSNWZP GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DSNWZP
RTB02ACL=PUBLIC
## "RTB02PKO"  on panel DSNTIPRB: DSNWZP PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTB02PKO=
## -- PANEL DSNTIPRC (Utility invocation routines) --
## "RTC01ACL"  on panel DSNTIPRC: DSNUTILS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DSNUTILS
RTC01ACL=PUBLIC
## "RTC01PKO"  on panel DSNTIPRC: DSNUTILS PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTC01PKO=
## "RTC02ACL"  on panel DSNTIPRC: DSNUTILU GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DSNUTILU
RTC02ACL=PUBLIC
## "RTC02PKO"  on panel DSNTIPRC: DSNUTILU PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTC02PKO=
## "RTC03ACL"  on panel DSNTIPRC: DSNUTILV GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DSNUTILV
RTC03ACL=PUBLIC
## "RTC03PKO"  on panel DSNTIPRC: DSNUTILV PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTC03PKO=
## -- PANEL DSNTIPRE (DB2 security routines) --
## "RTE01ACL"  on panel DSNTIPRE: DSNLEUSR GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DSNLEUSR
RTE01ACL=PUBLIC
## "RTE01PKO"  on panel DSNTIPRE: DSNLEUSR PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTE01PKO=
## -- PANEL DSNTIPRF ( Java and SQL procedure processing routines) --
## "RTG01ACL"  on panel DSNTIPRF: ALTER_JAVA_PATH GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ALTER_JAVA_PATH
RTG01ACL=PUBLIC
## "RTG01PKO"  on panel DSNTIPRF: ALTER_JAVA_PATH PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTG01PKO=
## "RTF04ACL"  on panel DSNTIPRF: CREATE_WRAPPED GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of CREATE_WRAPPED
RTF04ACL=PUBLIC
## "RTG02ACL"  on panel DSNTIPRF: DB2_INSTALL_JAR GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DB2_INSTALL_JAR
RTG02ACL=PUBLIC
## "RTG02PKO"  on panel DSNTIPRF: DB2_INSTALL_JAR PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTG02PKO=
## "RTG03ACL"  on panel DSNTIPRF: DB2_REMOVE_JAR GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DB2_REMOVE_JAR
RTG03ACL=PUBLIC
## "RTG03PKO"  on panel DSNTIPRF: DB2_REMOVE_JAR PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTG03PKO=
## "RTG04ACL"  on panel DSNTIPRF: DB2_REPLACE_JAR GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DB2_REPLACE_JAR
RTG04ACL=PUBLIC
## "RTG04PKO"  on panel DSNTIPRF: DB2_REPLACE_JAR PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTG04PKO=
## "RTG05ACL"  on panel DSNTIPRF: DB2_UPDATEJARINFO GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DB2_UPDATEJARINFO
RTG05ACL=PUBLIC
## "RTG05PKO"  on panel DSNTIPRF: DB2_UPDATEJARINFO PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTG05PKO=
## "RTG06ACL"  on panel DSNTIPRF: INSTALL_JAR GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of INSTALL_JAR
RTG06ACL=PUBLIC
## "RTG06PKO"  on panel DSNTIPRF: INSTALL_JAR PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTG06PKO=
## "RTG07ACL"  on panel DSNTIPRF: REMOVE_JAR GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of REMOVE_JAR
RTG07ACL=PUBLIC
## "RTG07PKO"  on panel DSNTIPRF: REMOVE_JAR PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTG07PKO=
## "RTG08ACL"  on panel DSNTIPRF: REPLACE_JAR GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of REPLACE_JAR
RTG08ACL=PUBLIC
## "RTG08PKO"  on panel DSNTIPRF: REPLACE_JAR PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTG08PKO=
## "RTF01ACL"  on panel DSNTIPRF: DSNTBIND GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DSNTBIND
RTF01ACL=PUBLIC
## "RTF02ACL"  on panel DSNTIPRF: DSNTPSMP GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DSNTPSMP
RTF02ACL=PUBLIC
## "RTF03ACL"  on panel DSNTIPRF: WLM_REFRESH GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of WLM_REFRESH
RTF03ACL=PUBLIC
## "RTF03PKO"  on panel DSNTIPRF: WLM_REFRESH PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTF03PKO=
## -- PANEL DSNTIPRH (Unified debugger for Java and SQL routines) --
## "RTH01ACL"  on panel DSNTIPRH: CREATE_SESSION GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of CREATE_SESSION
RTH01ACL=PUBLIC
## "RTH02ACL"  on panel DSNTIPRH: DEBUGGERLEVEL GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DEBUGGERLEVEL
RTH02ACL=PUBLIC
## "RTH03ACL"  on panel DSNTIPRH: DESTROY_SESSION GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DESTROY_SESSION
RTH03ACL=PUBLIC
## "RTH04ACL"  on panel DSNTIPRH: GET_REPORT GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of GET_REPORT
RTH04ACL=PUBLIC
## "RTH05ACL"  on panel DSNTIPRH: LIST_SESSION GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of LIST_SESSION
RTH05ACL=PUBLIC
## "RTH06ACL"  on panel DSNTIPRH: PUT_COMMAND GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of PUT_COMMAND
RTH06ACL=PUBLIC
## "RTH07ACL"  on panel DSNTIPRH: QUERY_SESSION GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of QUERY_SESSION
RTH07ACL=PUBLIC
## "RTH08ACL"  on panel DSNTIPRH: DBG_ENDSESSIONMANAGER GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DBG_ENDSESSIONMANAGER
RTH08ACL=PUBLIC
## "RTH09ACL"  on panel DSNTIPRH: DBG_INITIALIZECLIENT GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DBG_INITIALIZECLIENT
RTH09ACL=PUBLIC
## "RTH10ACL"  on panel DSNTIPRH: DBG_LOOKUPSESSIONMANAGER GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DBG_LOOKUPSESSIONMANAGER
RTH10ACL=PUBLIC
## "RTH11ACL"  on panel DSNTIPRH: DBG_PINGSESSIONMANAGER GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DBG_PINGSESSIONMANAGER
RTH11ACL=PUBLIC
## "RTH12ACL"  on panel DSNTIPRH: DBG_RECVCLIENTREPORTS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DBG_RECVCLIENTREPORTS
RTH12ACL=PUBLIC
## "RTH13ACL"  on panel DSNTIPRH: DBG_RUNSESSIONMANAGER GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DBG_RUNSESSIONMANAGER
RTH13ACL=PUBLIC
## "RTH14ACL"  on panel DSNTIPRH: DBG_SENDCLIENTCOMMANDS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DBG_SENDCLIENTCOMMANDS
RTH14ACL=PUBLIC
## "RTH15ACL"  on panel DSNTIPRH: DBG_SENDCLIENTREQUESTS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DBG_SENDCLIENTREQUESTS
RTH15ACL=PUBLIC
## "RTH16ACL"  on panel DSNTIPRH: DBG_TERMINATECLIENT GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DBG_TERMINATECLIENT
RTH16ACL=PUBLIC
## -- PANEL DSNTIPRI (XML processing routine) --
## "RTI03ACL"  on panel DSNTIPRI: XSLTRANSFORM GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of XSLTRANSFORM
RTI03ACL=PUBLIC
## "RTI04ACL"  on panel DSNTIPRI: XSR_ADDSCHEMADOC GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of XSR_ADDSCHEMADOC
RTI04ACL=PUBLIC
## "RTI04PKO"  on panel DSNTIPRI: XSR_ADDSCHEMADOC PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTI04PKO=
## "RTI05ACL"  on panel DSNTIPRI: XSR_COMPLETE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of XSR_COMPLETE
RTI05ACL=PUBLIC
## "RTI05PKO"  on panel DSNTIPRI: XSR_COMPLETE PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTI05PKO=
## "RTI06ACL"  on panel DSNTIPRI: XSR_REGISTER GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of XSR_REGISTER
RTI06ACL=PUBLIC
## "RTI06PKO"  on panel DSNTIPRI: XSR_REGISTER PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTI06PKO=
## "RTI07ACL"  on panel DSNTIPRI: XSR_REMOVE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of XSR_REMOVE
RTI07ACL=PUBLIC
## "RTI07PKO"  on panel DSNTIPRI: XSR_REMOVE PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTI07PKO=
## -- PANEL DSNTIPRJ (IBM Text Search routines) --
## "RTJ09ACL"  on panel DSNTIPRJ: SYSTS_ALTER GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SYSTS_ALTER
RTJ09ACL=PUBLIC
## "RTJ09PKO"  on panel DSNTIPRJ: SYSTS_ALTER PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTJ09PKO=
## "RTJ01ACL"  on panel DSNTIPRJ: SYSTS_CREATE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SYSTS_CREATE
RTJ01ACL=PUBLIC
## "RTJ01PKO"  on panel DSNTIPRJ: SYSTS_CREATE PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTJ01PKO=
## "RTJ02ACL"  on panel DSNTIPRJ: SYSTS_DROP GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SYSTS_DROP
RTJ02ACL=PUBLIC
## "RTJ02PKO"  on panel DSNTIPRJ: SYSTS_DROP PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTJ02PKO=
## "RTJ03ACL"  on panel DSNTIPRJ: SYSTS_ENCRYPT GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SYSTS_ENCRYPT
RTJ03ACL=PUBLIC
## "RTJ03PKO"  on panel DSNTIPRJ: SYSTS_ENCRYPT PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTJ03PKO=
## "RTJ04ACL"  on panel DSNTIPRJ: SYSTS_RESTORE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SYSTS_RESTORE
RTJ04ACL=PUBLIC
## "RTJ04PKO"  on panel DSNTIPRJ: SYSTS_RESTORE PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTJ04PKO=
## "RTJ05ACL"  on panel DSNTIPRJ: SYSTS_START GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SYSTS_START
RTJ05ACL=PUBLIC
## "RTJ05PKO"  on panel DSNTIPRJ: SYSTS_START PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTJ05PKO=
## "RTJ06ACL"  on panel DSNTIPRJ: SYSTS_STOP GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SYSTS_STOP
RTJ06ACL=PUBLIC
## "RTJ06PKO"  on panel DSNTIPRJ: SYSTS_STOP PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTJ06PKO=
## "RTJ07ACL"  on panel DSNTIPRJ: SYSTS_TAKEOVER GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SYSTS_TAKEOVER
RTJ07ACL=PUBLIC
## "RTJ07PKO"  on panel DSNTIPRJ: SYSTS_TAKEOVER PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTJ07PKO=
## "RTJ08ACL"  on panel DSNTIPRJ: SYSTS_UPDATE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SYSTS_UPDATE
RTJ08ACL=PUBLIC
## "RTJ08PKO"  on panel DSNTIPRJ: SYSTS_UPDATE PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTJ08PKO=
## -- PANEL DSNTIPRK (Database metadata routines) --
## "RTK01ACL"  on panel DSNTIPRK: SQLCAMESSAGE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SQLCAMESSAGE
RTK01ACL=PUBLIC
## "RTK02ACL"  on panel DSNTIPRK: SQLCOLPRIVILEGES GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SQLCOLPRIVILEGES
RTK02ACL=PUBLIC
## "RTK02PKO"  on panel DSNTIPRK: SQLCOLPRIVILEGES PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTK02PKO=
## "RTK03ACL"  on panel DSNTIPRK: SQLCOLUMNS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SQLCOLUMNS
RTK03ACL=PUBLIC
## "RTK03PKO"  on panel DSNTIPRK: SQLCOLUMNS PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTK03PKO=
## "RTK04ACL"  on panel DSNTIPRK: SQLFOREIGNKEYS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SQLFOREIGNKEYS
RTK04ACL=PUBLIC
## "RTK04PKO"  on panel DSNTIPRK: SQLFOREIGNKEYS PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTK04PKO=
## "RTK05ACL"  on panel DSNTIPRK: SQLFUNCTIONCOLS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SQLFUNCTIONCOLS
RTK05ACL=PUBLIC
## "RTK05PKO"  on panel DSNTIPRK: SQLFUNCTIONCOLS PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTK05PKO=
## "RTK06ACL"  on panel DSNTIPRK: SQLFUNCTIONS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SQLFUNCTIONS
RTK06ACL=PUBLIC
## "RTK06PKO"  on panel DSNTIPRK: SQLFUNCTIONS PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTK06PKO=
## "RTK07ACL"  on panel DSNTIPRK: SQLGETTYPEINFO GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SQLGETTYPEINFO
RTK07ACL=PUBLIC
## "RTK07PKO"  on panel DSNTIPRK: SQLGETTYPEINFO PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTK07PKO=
## "RTK08ACL"  on panel DSNTIPRK: SQLPRIMARYKEYS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SQLPRIMARYKEYS
RTK08ACL=PUBLIC
## "RTK08PKO"  on panel DSNTIPRK: SQLPRIMARYKEYS PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTK08PKO=
## "RTK09ACL"  on panel DSNTIPRK: SQLPROCEDURECOLS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SQLPROCEDURECOLS
RTK09ACL=PUBLIC
## "RTK09PKO"  on panel DSNTIPRK: SQLPROCEDURECOLS PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTK09PKO=
## "RTK10ACL"  on panel DSNTIPRK: SQLPROCEDURES GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SQLPROCEDURES
RTK10ACL=PUBLIC
## "RTK10PKO"  on panel DSNTIPRK: SQLPROCEDURES PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTK10PKO=
## "RTK16ACL"  on panel DSNTIPRK: SQLPSEUDOCOLUMNS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SQLPSEUDOCOLUMNS
RTK16ACL=PUBLIC
## "RTK16PKO"  on panel DSNTIPRK: SQLPSEUDOCOLUMNS PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTK16PKO=
## "RTK11ACL"  on panel DSNTIPRK: SQLSPECIALCOLUMNS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SQLSPECIALCOLUMNS
RTK11ACL=PUBLIC
## "RTK11PKO"  on panel DSNTIPRK: SQLSPECIALCOLUMNS PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTK11PKO=
## "RTK12ACL"  on panel DSNTIPRK: SQLSTATISTICS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SQLSTATISTICS
RTK12ACL=PUBLIC
## "RTK12PKO"  on panel DSNTIPRK: SQLSTATISTICS PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTK12PKO=
## "RTK13ACL"  on panel DSNTIPRK: SQLTABLEPRIVILEGES GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SQLTABLEPRIVILEGES
RTK13ACL=PUBLIC
## "RTK13PKO"  on panel DSNTIPRK: SQLTABLEPRIVILEGES PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTK13PKO=
## "RTK14ACL"  on panel DSNTIPRK: SQLTABLES GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SQLTABLES
RTK14ACL=PUBLIC
## "RTK14PKO"  on panel DSNTIPRK: SQLTABLES PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTK14PKO=
## "RTK15ACL"  on panel DSNTIPRK: SQLUDTS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SQLUDTS
RTK15ACL=PUBLIC
## "RTK15PKO"  on panel DSNTIPRK: SQLUDTS PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTK15PKO=
## -- PANEL DSNTIPRL (DB2 administration routines) --
## "RTL01ACL"  on panel DSNTIPRL: ADMIN_COMMAND_DB2 GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_COMMAND_DB2
RTL01ACL=PUBLIC
## "RTL01PKO"  on panel DSNTIPRL: ADMIN_COMMAND_DB2 PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL01PKO=
## "RTL02ACL"  on panel DSNTIPRL: ADMIN_COMMAND_DSN GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_COMMAND_DSN
RTL02ACL=PUBLIC
## "RTL02PKO"  on panel DSNTIPRL: ADMIN_COMMAND_DSN PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL02PKO=
## "RTL41ACL"  on panel DSNTIPRL: ADMIN_COMMAND_MVS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_COMMAND_MVS
RTL41ACL=PUBLIC
## "RTL41PKO"  on panel DSNTIPRL: ADMIN_COMMAND_MVS PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL41PKO=
## "RTL03ACL"  on panel DSNTIPRL: ADMIN_COMMAND_UNIX GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_COMMAND_UNIX
RTL03ACL=PUBLIC
## "RTL03PKO"  on panel DSNTIPRL: ADMIN_COMMAND_UNIX PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL03PKO=
## "RTL04ACL"  on panel DSNTIPRL: ADMIN_DS_BROWSE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_DS_BROWSE
RTL04ACL=PUBLIC
## "RTL04PKO"  on panel DSNTIPRL: ADMIN_DS_BROWSE PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL04PKO=
## "RTL05ACL"  on panel DSNTIPRL: ADMIN_DS_DELETE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_DS_DELETE
RTL05ACL=PUBLIC
## "RTL05PKO"  on panel DSNTIPRL: ADMIN_DS_DELETE PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL05PKO=
## "RTL06ACL"  on panel DSNTIPRL: ADMIN_DS_LIST GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_DS_LIST
RTL06ACL=PUBLIC
## "RTL06PKO"  on panel DSNTIPRL: ADMIN_DS_LIST PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL06PKO=
## "RTL07ACL"  on panel DSNTIPRL: ADMIN_DS_RENAME GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_DS_RENAME
RTL07ACL=PUBLIC
## "RTL07PKO"  on panel DSNTIPRL: ADMIN_DS_RENAME PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL07PKO=
## "RTL08ACL"  on panel DSNTIPRL: ADMIN_DS_SEARCH GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_DS_SEARCH
RTL08ACL=PUBLIC
## "RTL08PKO"  on panel DSNTIPRL: ADMIN_DS_SEARCH PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL08PKO=
## "RTL09ACL"  on panel DSNTIPRL: ADMIN_DS_WRITE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_DS_WRITE
RTL09ACL=PUBLIC
## "RTL09PKO"  on panel DSNTIPRL: ADMIN_DS_WRITE PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL09PKO=
## "RTL42ACL"  on panel DSNTIPRL: ADMIN_EXPLAIN_MAINT GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_EXPLAIN_MAINT
RTL42ACL=PUBLIC
## "RTL42PKO"  on panel DSNTIPRL: ADMIN_EXPLAIN_MAINT PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL42PKO=
## "RTL10ACL"  on panel DSNTIPRL: ADMIN_INFO_HOST GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_INFO_HOST
RTL10ACL=PUBLIC
## "RTL10PKO"  on panel DSNTIPRL: ADMIN_INFO_HOST PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL10PKO=
## "RTL44ACL"  on panel DSNTIPRL: ADMIN_INFO_IFCID GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_INFO_IFCID
RTL44ACL=PUBLIC
## "RTL44PKO"  on panel DSNTIPRL: ADMIN_INFO_IFCID PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL44PKO=
## "RTL35ACL"  on panel DSNTIPRL: ADMIN_INFO_SMS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_INFO_SMS
RTL35ACL=PUBLIC
## "RTL35PKO"  on panel DSNTIPRL: ADMIN_INFO_SMS PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL35PKO=
## "RTL36ACL"  on panel DSNTIPRL: ADMIN_INFO_SQL GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_INFO_SQL
RTL36ACL=PUBLIC
## "RTL36PKO"  on panel DSNTIPRL: ADMIN_INFO_SQL PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL36PKO=
## "RTL11ACL"  on panel DSNTIPRL: ADMIN_INFO_SSID GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_INFO_SSID
RTL11ACL=PUBLIC
## "RTL11PKO"  on panel DSNTIPRL: ADMIN_INFO_SSID PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL11PKO=
## "RTL37ACL"  on panel DSNTIPRL: ADMIN_INFO_SYSLOG GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_INFO_SYSLOG
RTL37ACL=PUBLIC
## "RTL28ACL"  on panel DSNTIPRL: ADMIN_INFO_SYSPARM GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_INFO_SYSPARM
RTL28ACL=PUBLIC
## "RTL28PKO"  on panel DSNTIPRL: ADMIN_INFO_SYSPARM PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL28PKO=
## "RTL12ACL"  on panel DSNTIPRL: ADMIN_JOB_CANCEL GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_JOB_CANCEL
RTL12ACL=PUBLIC
## "RTL12PKO"  on panel DSNTIPRL: ADMIN_JOB_CANCEL PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL12PKO=
## "RTL13ACL"  on panel DSNTIPRL: ADMIN_JOB_FETCH GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_JOB_FETCH
RTL13ACL=PUBLIC
## "RTL13PKO"  on panel DSNTIPRL: ADMIN_JOB_FETCH PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL13PKO=
## "RTL14ACL"  on panel DSNTIPRL: ADMIN_JOB_QUERY GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_JOB_QUERY
RTL14ACL=PUBLIC
## "RTL14PKO"  on panel DSNTIPRL: ADMIN_JOB_QUERY PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL14PKO=
## "RTL15ACL"  on panel DSNTIPRL: ADMIN_JOB_SUBMIT GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_JOB_SUBMIT
RTL15ACL=PUBLIC
## "RTL15PKO"  on panel DSNTIPRL: ADMIN_JOB_SUBMIT PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL15PKO=
## "RTL17ACL"  on panel DSNTIPRL: ADMIN_TASK_ADD GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_TASK_ADD
RTL17ACL=PUBLIC
## "RTL17PKO"  on panel DSNTIPRL: ADMIN_TASK_ADD PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL17PKO=
## "RTL23ACL"  on panel DSNTIPRL: ADMIN_TASK_CANCEL GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_TASK_CANCEL
RTL23ACL=PUBLIC
## "RTL23PKO"  on panel DSNTIPRL: ADMIN_TASK_CANCEL PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL23PKO=
## "RTL18ACL"  on panel DSNTIPRL: ADMIN_TASK_LIST GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_TASK_LIST
RTL18ACL=PUBLIC
## "RTL18PKO"  on panel DSNTIPRL: ADMIN_TASK_LIST PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL18PKO=
## "RTL24ACL"  on panel DSNTIPRL: ADMIN_TASK_OUTPUT GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_TASK_OUTPUT
RTL24ACL=PUBLIC
## "RTL24PKO"  on panel DSNTIPRL: ADMIN_TASK_OUTPUT PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL24PKO=
## "RTL19ACL"  on panel DSNTIPRL: ADMIN_TASK_REMOVE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_TASK_REMOVE
RTL19ACL=PUBLIC
## "RTL19PKO"  on panel DSNTIPRL: ADMIN_TASK_REMOVE PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL19PKO=
## "RTL20ACL"  on panel DSNTIPRL: ADMIN_TASK_STATUS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_TASK_STATUS
RTL20ACL=PUBLIC
## "RTL20PKO"  on panel DSNTIPRL: ADMIN_TASK_STATUS PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL20PKO=
## "RTL34ACL"  on panel DSNTIPRL: ADMIN_TASK_UPDATE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_TASK_UPDATE
RTL34ACL=PUBLIC
## "RTL34PKO"  on panel DSNTIPRL: ADMIN_TASK_UPDATE PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL34PKO=
## "RTL38ACL"  on panel DSNTIPRL: ADMIN_UPDATE_SYSPARM GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_UPDATE_SYSPARM
RTL38ACL=PUBLIC
## "RTL30ACL"  on panel DSNTIPRL: ADMIN_UTL_EXECUTE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_UTL_EXECUTE
RTL30ACL=PUBLIC
## "RTL30PKO"  on panel DSNTIPRL: ADMIN_UTL_EXECUTE PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL30PKO=
## "RTL31ACL"  on panel DSNTIPRL: ADMIN_UTL_MODIFY GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_UTL_MODIFY
RTL31ACL=PUBLIC
## "RTL31PKO"  on panel DSNTIPRL: ADMIN_UTL_MODIFY PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL31PKO=
## "RTL32ACL"  on panel DSNTIPRL: ADMIN_UTL_MONITOR GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_UTL_MONITOR
RTL32ACL=PUBLIC
## "RTL32PKO"  on panel DSNTIPRL: ADMIN_UTL_MONITOR PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL32PKO=
## "RTL21ACL"  on panel DSNTIPRL: ADMIN_UTL_SCHEDULE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_UTL_SCHEDULE
RTL21ACL=PUBLIC
## "RTL21PKO"  on panel DSNTIPRL: ADMIN_UTL_SCHEDULE PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL21PKO=
## "RTL22ACL"  on panel DSNTIPRL: ADMIN_UTL_SORT GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of ADMIN_UTL_SORT
RTL22ACL=PUBLIC
## "RTL22PKO"  on panel DSNTIPRL: ADMIN_UTL_SORT PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL22PKO=
## "RTL43ACL"  on panel DSNTIPRL: BLOCKING_THREADS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of BLOCKING_THREADS
RTL43ACL=PUBLIC
## "RTL33ACL"  on panel DSNTIPRL: DSN_WLM_APPLENV GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DSN_WLM_APPLENV
RTL33ACL=PUBLIC
## "RTD02ACL"  on panel DSNTIPRL: DSNACCOX GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DSNACCOX
RTD02ACL=PUBLIC
## "RTD02PKO"  on panel DSNTIPRL: DSNACCOX PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTD02PKO=
## "RTL25ACL"  on panel DSNTIPRL: GET_CONFIG GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of GET_CONFIG
RTL25ACL=PUBLIC
## "RTL25PKO"  on panel DSNTIPRL: GET_CONFIG PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL25PKO=
## "RTL26ACL"  on panel DSNTIPRL: GET_MESSAGE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of GET_MESSAGE
RTL26ACL=PUBLIC
## "RTL26PKO"  on panel DSNTIPRL: GET_MESSAGE PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL26PKO=
## "RTL27ACL"  on panel DSNTIPRL: GET_SYSTEM_INFO GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of GET_SYSTEM_INFO
RTL27ACL=PUBLIC
## "RTL27PKO"  on panel DSNTIPRL: GET_SYSTEM_INFO PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL27PKO=
## "RTL39ACL"  on panel DSNTIPRL: SET_MAINT_MODE_RECORD_NO_TEMPORALHISTORY GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SET_MAINT_MODE_RECORD_NO_TEMPORALHISTORY
RTL39ACL=PUBLIC
## "RTL40ACL"  on panel DSNTIPRL: SET_PLAN_HINT GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SET_PLAN_HINT
RTL40ACL=PUBLIC
## "RTL40PKO"  on panel DSNTIPRL: SET_PLAN_HINT PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL40PKO=
## "RTL29ACL"  on panel DSNTIPRL: WLM_SET_CLIENT_INFO GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of WLM_SET_CLIENT_INFO
RTL29ACL=PUBLIC
## "RTL29PKO"  on panel DSNTIPRL: WLM_SET_CLIENT_INFO PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTL29PKO=
## -- PANEL DSNTIPRM (DB2 optimization routines) --
## "RTM05ACL"  on panel DSNTIPRM: DSNAHVPM GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DSNAHVPM
RTM05ACL=PUBLIC
## -- PANEL DSNTIPRN (CICS and IMS transaction invocation routines) --
## "RTN01ACL"  on panel DSNTIPRN: DSNACICS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DSNACICS
RTN01ACL=PUBLIC
## "RTN01PKO"  on panel DSNTIPRN: DSNACICS PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTN01PKO=
## "RTN02ACL"  on panel DSNTIPRN: DSNAIMS GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DSNAIMS
RTN02ACL=PUBLIC
## "RTN02PKO"  on panel DSNTIPRN: DSNAIMS PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTN02PKO=
## "RTN03ACL"  on panel DSNTIPRN: DSNAIMS2 GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of DSNAIMS2
RTN03ACL=PUBLIC
## "RTN03PKO"  on panel DSNTIPRN: DSNAIMS2 PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTN03PKO=
## -- PANEL DSNTIPRO (MQSeries routines) --
## "RTO02ACL"  on panel DSNTIPRO: MQREAD GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of MQREAD
RTO02ACL=PUBLIC
## "RTO02PKO"  on panel DSNTIPRO: MQREAD PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTO02PKO=
## "RTO03ACL"  on panel DSNTIPRO: MQREADALL GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of MQREADALL
RTO03ACL=PUBLIC
## "RTO03PKO"  on panel DSNTIPRO: MQREADALL PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTO03PKO=
## "RTO04ACL"  on panel DSNTIPRO: MQREADALLCLOB GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of MQREADALLCLOB
RTO04ACL=PUBLIC
## "RTO04PKO"  on panel DSNTIPRO: MQREADALLCLOB PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTO04PKO=
## "RTO05ACL"  on panel DSNTIPRO: MQREADCLOB GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of MQREADCLOB
RTO05ACL=PUBLIC
## "RTO05PKO"  on panel DSNTIPRO: MQREADCLOB PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTO05PKO=
## "RTO06ACL"  on panel DSNTIPRO: MQRECEIVE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of MQRECEIVE
RTO06ACL=PUBLIC
## "RTO06PKO"  on panel DSNTIPRO: MQRECEIVE PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTO06PKO=
## "RTO07ACL"  on panel DSNTIPRO: MQRECEIVEALL GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of MQRECEIVEALL
RTO07ACL=PUBLIC
## "RTO07PKO"  on panel DSNTIPRO: MQRECEIVEALL PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTO07PKO=
## "RTO08ACL"  on panel DSNTIPRO: MQRECEIVEALLCLOB GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of MQRECEIVEALLCLOB
RTO08ACL=PUBLIC
## "RTO08PKO"  on panel DSNTIPRO: MQRECEIVEALLCLOB PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTO08PKO=
## "RTO09ACL"  on panel DSNTIPRO: MQRECEIVECLOB GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of MQRECEIVECLOB
RTO09ACL=PUBLIC
## "RTO09PKO"  on panel DSNTIPRO: MQRECEIVECLOB PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTO09PKO=
## "RTO10ACL"  on panel DSNTIPRO: MQSEND GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of MQSEND
RTO10ACL=PUBLIC
## "RTO10PKO"  on panel DSNTIPRO: MQSEND PACKAGE OWNER
## Specify the ID that should own the package when it is bound (the value for the OWNER parameter of the BIND PACKAGE command).
RTO10PKO=
## -- PANEL DSNTIPRP (Web services/SOAP routines) --
## "RTP01ACL"  on panel DSNTIPRP: SOAPHTTPC GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SOAPHTTPC
RTP01ACL=PUBLIC
## "RTP02ACL"  on panel DSNTIPRP: SOAPHTTPNC GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SOAPHTTPNC
RTP02ACL=PUBLIC
## "RTP03ACL"  on panel DSNTIPRP: SOAPHTTPNV GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SOAPHTTPNV
RTP03ACL=PUBLIC
## "RTP04ACL"  on panel DSNTIPRP: SOAPHTTPV GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of SOAPHTTPV
RTP04ACL=PUBLIC
## -- PANEL DSNTIPRQ (JSON routines) --
## "RTQ11ACL"  on panel DSNTIPRQ: BSON2JSON GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of BSON2JSON
RTQ11ACL=PUBLIC
## "RTQ01ACL"  on panel DSNTIPRQ: JSON_BINARY GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of JSON_BINARY
RTQ01ACL=PUBLIC
## "RTQ02ACL"  on panel DSNTIPRQ: JSON_BINARY2 GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of JSON_BINARY2
RTQ02ACL=PUBLIC
## "RTQ03ACL"  on panel DSNTIPRQ: JSON_GET_POS_ARR_INDEX GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of JSON_GET_POS_ARR_INDEX
RTQ03ACL=PUBLIC
## "RTQ04ACL"  on panel DSNTIPRQ: JSON_LEN GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of JSON_LEN
RTQ04ACL=PUBLIC
## "RTQ05ACL"  on panel DSNTIPRQ: JSON_TABLE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of JSON_TABLE
RTQ05ACL=PUBLIC
## "RTQ06ACL"  on panel DSNTIPRQ: JSON_TABLE_BINARY GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of JSON_TABLE_BINARY
RTQ06ACL=PUBLIC
## "RTQ07ACL"  on panel DSNTIPRQ: JSON_TYPE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of JSON_TYPE
RTQ07ACL=PUBLIC
## "RTQ08ACL"  on panel DSNTIPRQ: JSON_UPDATE GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of JSON_UPDATE
RTQ08ACL=PUBLIC
## "RTQ12ACL"  on panel DSNTIPRQ: JSON2BSON GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of JSON2BSON
RTQ12ACL=PUBLIC
## "RTQ09ACL"  on panel DSNTIPRQ: REGSP GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of REGSP
RTQ09ACL=PUBLIC
## "RTQ10ACL"  on panel DSNTIPRQ: REG_MATCHES GRANT EXECUTE
## Specify one or more authorization IDs that are to be granted EXECUTE access on the routine of REG_MATCHES
RTQ10ACL=PUBLIC
## -- PANEL DSNTIPX (ROUTINE PARAMETERS) --
## "STORTCBS" on panel DSNTIPX: NUMBER OF TCBS
## The NUMBER OF TCBS field determines the number of SQL CALL statements and invocations of user-defined functions that can be processed concurrently in the address space of the default WLM environment. The default WLM environment is specified in the WLM ENVIRONMENT field.
STORTCBS=8
## "STORMXAB" on panel DSNTIPX: MAX ABEND COUNT
## The STORMXAB subsystem parameter specifies the number of times a stored procedure or an invocation of a user-defined function is to be allowed to terminate abnormally. If this threshold is reached, SQL CALL statements for the stored procedure or user-defined function are rejected.
STORMXAB=0
## "STORTIME" on panel DSNTIPX: TIMEOUT VALUE
## The STORTIME subsystem parameter specifies the number of seconds before DB2 is to stop waiting for an SQL CALL statement or invocation of a user-defined function. This parameter applies to user-defined functions that are to be assigned to one of the task control blocks (TCBs) in a DB2 stored procedures address space.
STORTIME=180
## "MXNUMCUR" on panel DSNTIPX: MAX OPEN CURSORS
## The MAX_NUM_CUR subsystem parameter specifies the maximum number of cursors, including allocated cursors, that can be open at a given DB2 site for each thread.
MXNUMCUR=500
## "MXSTPROC" on panel DSNTIPX: MAX STORED PROCS
## The MAX_ST_PROC subsystem parameter determines the maximum number of stored procedures that are to be allowed for each thread.
MXSTPROC=2000
## "BIFCP" on panel DSNTIPX: BIF COMPATIBILITY
## DB2 Version 10 introduces a change in the formatting of decimal data by built-in functions CHAR and VARCHAR and CAST(decimal-expression AS CHAR) and CAST(decimal-expression AS VARCHAR) specifications. The BIF_COMPATIBILITY subsystem parameter specifies whether these built-in functions and specifications are to return results in the newer format or revert to the pre-Version 10 format.
BIFCP=CURRENT
## "ADMTPROC" on panel DSNTIPX: ADMIN SCHEDULER
## The ADMIN SCHEDULER field identifies a name for the JCL procedure that is used to start the DB2 administrative task scheduler that is associated with this DB2 subsystem.
ADMTPROC=
## -- PANEL DSNTIPZ (DATA DEFINITION CONTROL SUPPORT) --
## "RGFINSTL" on panel DSNTIPZ: INSTALL DD CONTROL SUPT
## The RGFINSTL subsystem parameter determines whether data definition control support is to be installed.
RGFINSTL=NO
## "RGFDEDPL" on panel DSNTIPZ: CONTROL ALL APPLICATIONS
## The RGFDEDPL subsystem parameter specifies whether the DB2 subsystem is to be completely controlled by a set of closed applications that are identified in the application registration table.
RGFDEDPL=NO
## "RGFFULLQ" on panel DSNTIPZ: REQUIRE FULL NAMES
## The RGFFULLQ subsystem parameter specifies whether registered objects are to require fully qualified names.
RGFFULLQ=YES
## "RGFDEFLT" on panel DSNTIPZ: UNREGISTERED DDL DEFAULT
## The RGFDEFLT subsystem parameter specifies the action that is to be taken for DDL statements that name unregistered objects.
RGFDEFLT=ACCEPT
## "RGFESCP" on panel DSNTIPZ: ART/ORT ESCAPE CHARACTER
## The RGFESCP subsystem parameter specifies the escape character that is to be used in the application registration table (ART) or object registration table (ORT).
RGFESCP=
## "RGFCOLID" on panel DSNTIPZ: REGISTRATION OWNER
## The RGFCOLID subsystem parameter specifies the ID that is to own both the application registration table and the object registration table.
RGFCOLID=DSNRGCOL
## "RGFDBNAM" on panel DSNTIPZ: REGISTRATION DATABASE
## The RGFDBNAM subsystem parameter specifies the name of the database that is to contain the registration tables that are used for data definition control support.
RGFDBNAM=DSNRGFDB
## "RGFNMPRT" on panel DSNTIPZ: APPL REGISTRATION TABLE
## The RGFNMPRT subsystem parameter specifies the name that is to be used for the application registration table.
RGFNMPRT=DSN_REGISTER_APPL
## "RGFNMORT" on panel DSNTIPZ: OBJT REGISTRATION TABLE
## The RGFNMORT subsystem parameter specifies the name that is to be used for the object registration table (ORT).
RGFNMORT=DSN_REGISTER_OBJT
## -- PANEL DSNTIP1 (BUFFER POOL SIZES - PANEL 1) --
## "BP0" on panel DSNTIP1: BUFFERPOOL fields BP0
## The values of field BP0 specify the number of 4 KB buffers in BP0.
BP0=20000
## "BP0SEQT": BUFFERPOOL fields BP0 - SEQT
## The values of field BP0SEQT specify the sequential steal threshold of BP0.
BP0SEQT=
## "BP0DWQT": BUFFERPOOL fields BP0 - DWQT
## The values of field BP0DWQT specify deferred write threshold of BP0.
BP0DWQT=
## "BP0VDWQT": BUFFERPOOL fields BP0 - VDWQT
## The values of field BP0VDWQT specify vertical deferred write threshold of BP0.
BP0VDWQT=
## "BP1" on panel DSNTIP1: BUFFERPOOL fields BP1
## The values of field BP1 specify the number of 4 KB buffers in BP1.
BP1=5000
## "BP1SEQT": BUFFERPOOL fields BP1 - SEQT
## The values of field BP1SEQT specify the sequential steal threshold of BP1.
BP1SEQT=
## "BP1DWQT": BUFFERPOOL fields BP1 - DWQT
## The values of field BP1DWQT specify deferred write threshold of BP1.
BP1DWQT=
## "BP1VDWQT": BUFFERPOOL fields BP1 - VDWQT
## The values of field BP1VDWQT specify vertical deferred write threshold of BP1.
BP1VDWQT=
## "BP2" on panel DSNTIP1: BUFFERPOOL fields BP2
## The values of field BP2 specify the number of 4 KB buffers in BP2.
BP2=5000
## "BP2SEQT": BUFFERPOOL fields BP2 - SEQT
## The values of field BP2SEQT specify the sequential steal threshold of BP2.
BP2SEQT=
## "BP2DWQT": BUFFERPOOL fields BP2 - DWQT
## The values of field BP2DWQT specify deferred write threshold of BP2.
BP2DWQT=
## "BP2VDWQT": BUFFERPOOL fields BP2 - VDWQT
## The values of field BP2VDWQT specify vertical deferred write threshold of BP2.
BP2VDWQT=
## "BP3" on panel DSNTIP1: BUFFERPOOL fields BP3
## The values of field BP3 specify the number of 4 KB buffers in BP3.
BP3=0
## "BP3SEQT": BUFFERPOOL fields BP3 - SEQT
## The values of field BP3SEQT specify the sequential steal threshold of BP3.
BP3SEQT=
## "BP3DWQT": BUFFERPOOL fields BP3 - DWQT
## The values of field BP3DWQT specify deferred write threshold of BP3.
BP3DWQT=
## "BP3VDWQT": BUFFERPOOL fields BP3 - VDWQT
## The values of field BP3VDWQT specify vertical deferred write threshold of BP3.
BP3VDWQT=
## "BP4" on panel DSNTIP1: BUFFERPOOL fields BP4
## The values of field BP4 specify the number of 4 KB buffers in BP4.
BP4=0
## "BP4SEQT": BUFFERPOOL fields BP4 - SEQT
## The values of field BP4SEQT specify the sequential steal threshold of BP4.
BP4SEQT=
## "BP4DWQT": BUFFERPOOL fields BP4 - DWQT
## The values of field BP4DWQT specify deferred write threshold of BP4.
BP4DWQT=
## "BP4VDWQT": BUFFERPOOL fields BP4 - VDWQT
## The values of field BP4VDWQT specify vertical deferred write threshold of BP4.
BP4VDWQT=
## "BP5" on panel DSNTIP1: BUFFERPOOL fields BP5
## The values of field BP5 specify the number of 4 KB buffers in BP5.
BP5=0
## "BP5SEQT": BUFFERPOOL fields BP5 - SEQT
## The values of field BP5SEQT specify the sequential steal threshold of BP5.
BP5SEQT=
## "BP5DWQT": BUFFERPOOL fields BP5 - DWQT
## The values of field BP5DWQT specify deferred write threshold of BP5.
BP5DWQT=
## "BP5VDWQT": BUFFERPOOL fields BP5 - VDWQT
## The values of field BP5VDWQT specify vertical deferred write threshold of BP5.
BP5VDWQT=
## "BP6" on panel DSNTIP1: BUFFERPOOL fields BP6
## The values of field BP6 specify the number of 4 KB buffers in BP6.
BP6=0
## "BP6SEQT": BUFFERPOOL fields BP6 - SEQT
## The values of field BP6SEQT specify the sequential steal threshold of BP6.
BP6SEQT=
## "BP6DWQT": BUFFERPOOL fields BP6 - DWQT
## The values of field BP6DWQT specify deferred write threshold of BP6.
BP6DWQT=
## "BP6VDWQT": BUFFERPOOL fields BP6 - VDWQT
## The values of field BP6VDWQT specify vertical deferred write threshold of BP6.
BP6VDWQT=
## "BP7" on panel DSNTIP1: BUFFERPOOL fields BP7
## The values of field BP7 specify the number of 4 KB buffers in BP7.
BP7=0
## "BP7SEQT": BUFFERPOOL fields BP7 - SEQT
## The values of field BP7SEQT specify the sequential steal threshold of BP7.
BP7SEQT=
## "BP7DWQT": BUFFERPOOL fields BP7 - DWQT
## The values of field BP7DWQT specify deferred write threshold of BP7.
BP7DWQT=
## "BP7VDWQT": BUFFERPOOL fields BP7 - VDWQT
## The values of field BP7VDWQT specify vertical deferred write threshold of BP7.
BP7VDWQT=
## "BP8" on panel DSNTIP1: BUFFERPOOL fields BP8
## The values of field BP8 specify the number of 4 KB buffers in BP8.
BP8=0
## "BP8SEQT": BUFFERPOOL fields BP8 - SEQT
## The values of field BP8SEQT specify the sequential steal threshold of BP8.
BP8SEQT=
## "BP8DWQT": BUFFERPOOL fields BP8 - DWQT
## The values of field BP8DWQT specify deferred write threshold of BP8.
BP8DWQT=
## "BP8VDWQT": BUFFERPOOL fields BP8 - VDWQT
## The values of field BP8VDWQT specify vertical deferred write threshold of BP8.
BP8VDWQT=
## "BP9" on panel DSNTIP1: BUFFERPOOL fields BP9
## The values of field BP9 specify the number of 4 KB buffers in BP9.
BP9=0
## "BP9SEQT": BUFFERPOOL fields BP9 - SEQT
## The values of field BP9SEQT specify the sequential steal threshold of BP9.
BP9SEQT=
## "BP9DWQT": BUFFERPOOL fields BP9 - DWQT
## The values of field BP9DWQT specify deferred write threshold of BP9.
BP9DWQT=
## "BP9VDWQT": BUFFERPOOL fields BP9 - VDWQT
## The values of field BP9VDWQT specify vertical deferred write threshold of BP9.
BP9VDWQT=
## "BP10" on panel DSNTIP1: BUFFERPOOL fields BP10
## The values of field BP10 specify the number of 4 KB buffers in BP10.
BP10=0
## "BP10SEQT": BUFFERPOOL fields BP10 - SEQT
## The values of field BP10SEQT specify the sequential steal threshold of BP10.
BP10SEQT=
## "BP10DWQT": BUFFERPOOL fields BP10 - DWQT
## The values of field BP10DWQT specify deferred write threshold of BP10.
BP10DWQT=
## "BP10VDWQT": BUFFERPOOL fields BP10 - VDWQT
## The values of field BP10VDWQT specify vertical deferred write threshold of BP10.
BP10VDWQT=
## "BP11" on panel DSNTIP1: BUFFERPOOL fields BP11
## The values of field BP11 specify the number of 4 KB buffers in BP11.
BP11=0
## "BP11SEQT": BUFFERPOOL fields BP11 - SEQT
## The values of field BP11SEQT specify the sequential steal threshold of BP11.
BP11SEQT=
## "BP11DWQT": BUFFERPOOL fields BP11 - DWQT
## The values of field BP11DWQT specify deferred write threshold of BP11.
BP11DWQT=
## "BP11VDWQT": BUFFERPOOL fields BP11 - VDWQT
## The values of field BP11VDWQT specify vertical deferred write threshold of BP11.
BP11VDWQT=
## "BP12" on panel DSNTIP1: BUFFERPOOL fields BP12
## The values of field BP12 specify the number of 4 KB buffers in BP12.
BP12=0
## "BP12SEQT": BUFFERPOOL fields BP12 - SEQT
## The values of field BP12SEQT specify the sequential steal threshold of BP12.
BP12SEQT=
## "BP12DWQT": BUFFERPOOL fields BP12 - DWQT
## The values of field BP12DWQT specify deferred write threshold of BP12.
BP12DWQT=
## "BP12VDWQT": BUFFERPOOL fields BP12 - VDWQT
## The values of field BP12VDWQT specify vertical deferred write threshold of BP12.
BP12VDWQT=
## "BP13" on panel DSNTIP1: BUFFERPOOL fields BP13
## The values of field BP13 specify the number of 4 KB buffers in BP13.
BP13=0
## "BP13SEQT": BUFFERPOOL fields BP13 - SEQT
## The values of field BP13SEQT specify the sequential steal threshold of BP13.
BP13SEQT=
## "BP13DWQT": BUFFERPOOL fields BP13 - DWQT
## The values of field BP13DWQT specify deferred write threshold of BP13.
BP13DWQT=
## "BP13VDWQT": BUFFERPOOL fields BP13 - VDWQT
## The values of field BP13VDWQT specify vertical deferred write threshold of BP13.
BP13VDWQT=
## "BP14" on panel DSNTIP1: BUFFERPOOL fields BP14
## The values of field BP14 specify the number of 4 KB buffers in BP14.
BP14=0
## "BP14SEQT": BUFFERPOOL fields BP14 - SEQT
## The values of field BP14SEQT specify the sequential steal threshold of BP14.
BP14SEQT=
## "BP14DWQT": BUFFERPOOL fields BP14 - DWQT
## The values of field BP14DWQT specify deferred write threshold of BP14.
BP14DWQT=
## "BP14VDWQT": BUFFERPOOL fields BP14 - VDWQT
## The values of field BP14VDWQT specify vertical deferred write threshold of BP14.
BP14VDWQT=
## "BP15" on panel DSNTIP1: BUFFERPOOL fields BP15
## The values of field BP15 specify the number of 4 KB buffers in BP15.
BP15=0
## "BP15SEQT": BUFFERPOOL fields BP15 - SEQT
## The values of field BP15SEQT specify the sequential steal threshold of BP15.
BP15SEQT=
## "BP15DWQT": BUFFERPOOL fields BP15 - DWQT
## The values of field BP15DWQT specify deferred write threshold of BP15.
BP15DWQT=
## "BP15VDWQT": BUFFERPOOL fields BP15 - VDWQT
## The values of field BP15VDWQT specify vertical deferred write threshold of BP15.
BP15VDWQT=
## "BP16" on panel DSNTIP1: BUFFERPOOL fields BP16
## The values of field BP16 specify the number of 4 KB buffers in BP16.
BP16=0
## "BP16SEQT": BUFFERPOOL fields BP16 - SEQT
## The values of field BP16SEQT specify the sequential steal threshold of BP16.
BP16SEQT=
## "BP16DWQT": BUFFERPOOL fields BP16 - DWQT
## The values of field BP16DWQT specify deferred write threshold of BP16.
BP16DWQT=
## "BP16VDWQT": BUFFERPOOL fields BP16 - VDWQT
## The values of field BP16VDWQT specify vertical deferred write threshold of BP16.
BP16VDWQT=
## "BP17" on panel DSNTIP1: BUFFERPOOL fields BP17
## The values of field BP17 specify the number of 4 KB buffers in BP17.
BP17=0
## "BP17SEQT": BUFFERPOOL fields BP17 - SEQT
## The values of field BP17SEQT specify the sequential steal threshold of BP17.
BP17SEQT=
## "BP17DWQT": BUFFERPOOL fields BP17 - DWQT
## The values of field BP17DWQT specify deferred write threshold of BP17.
BP17DWQT=
## "BP17VDWQT": BUFFERPOOL fields BP17 - VDWQT
## The values of field BP17VDWQT specify vertical deferred write threshold of BP17.
BP17VDWQT=
## "BP18" on panel DSNTIP1: BUFFERPOOL fields BP18
## The values of field BP18 specify the number of 4 KB buffers in BP18.
BP18=0
## "BP18SEQT": BUFFERPOOL fields BP18 - SEQT
## The values of field BP18SEQT specify the sequential steal threshold of BP18.
BP18SEQT=
## "BP18DWQT": BUFFERPOOL fields BP18 - DWQT
## The values of field BP18DWQT specify deferred write threshold of BP18.
BP18DWQT=
## "BP18VDWQT": BUFFERPOOL fields BP18 - VDWQT
## The values of field BP18VDWQT specify vertical deferred write threshold of BP18.
BP18VDWQT=
## "BP19" on panel DSNTIP1: BUFFERPOOL fields BP19
## The values of field BP19 specify the number of 4 KB buffers in BP19.
BP19=0
## "BP19SEQT": BUFFERPOOL fields BP19 - SEQT
## The values of field BP19SEQT specify the sequential steal threshold of BP19.
BP19SEQT=
## "BP19DWQT": BUFFERPOOL fields BP19 - DWQT
## The values of field BP19DWQT specify deferred write threshold of BP19.
BP19DWQT=
## "BP19VDWQT": BUFFERPOOL fields BP19 - VDWQT
## The values of field BP19VDWQT specify vertical deferred write threshold of BP19.
BP19VDWQT=
## "BP20" on panel DSNTIP1: BUFFERPOOL fields BP20
## The values of field BP20 specify the number of 4 KB buffers in BP20.
BP20=0
## "BP20SEQT": BUFFERPOOL fields BP20 - SEQT
## The values of field BP20SEQT specify the sequential steal threshold of BP20.
BP20SEQT=
## "BP20DWQT": BUFFERPOOL fields BP20 - DWQT
## The values of field BP20DWQT specify deferred write threshold of BP20.
BP20DWQT=
## "BP20VDWQT": BUFFERPOOL fields BP20 - VDWQT
## The values of field BP20VDWQT specify vertical deferred write threshold of BP20.
BP20VDWQT=
## "BP21" on panel DSNTIP1: BUFFERPOOL fields BP21
## The values of field BP21 specify the number of 4 KB buffers in BP21.
BP21=0
## "BP21SEQT": BUFFERPOOL fields BP21 - SEQT
## The values of field BP21SEQT specify the sequential steal threshold of BP21.
BP21SEQT=
## "BP21DWQT": BUFFERPOOL fields BP21 - DWQT
## The values of field BP21DWQT specify deferred write threshold of BP21.
BP21DWQT=
## "BP21VDWQT": BUFFERPOOL fields BP21 - VDWQT
## The values of field BP21VDWQT specify vertical deferred write threshold of BP21.
BP21VDWQT=
## "BP22" on panel DSNTIP1: BUFFERPOOL fields BP22
## The values of field BP22 specify the number of 4 KB buffers in BP22.
BP22=0
## "BP22SEQT": BUFFERPOOL fields BP22 - SEQT
## The values of field BP22SEQT specify the sequential steal threshold of BP22.
BP22SEQT=
## "BP22DWQT": BUFFERPOOL fields BP22 - DWQT
## The values of field BP22DWQT specify deferred write threshold of BP22.
BP22DWQT=
## "BP22VDWQT": BUFFERPOOL fields BP22 - VDWQT
## The values of field BP22VDWQT specify vertical deferred write threshold of BP22.
BP22VDWQT=
## "BP23" on panel DSNTIP1: BUFFERPOOL fields BP23
## The values of field BP23 specify the number of 4 KB buffers in BP23.
BP23=0
## "BP23SEQT": BUFFERPOOL fields BP23 - SEQT
## The values of field BP23SEQT specify the sequential steal threshold of BP23.
BP23SEQT=
## "BP23DWQT": BUFFERPOOL fields BP23 - DWQT
## The values of field BP23DWQT specify deferred write threshold of BP23.
BP23DWQT=
## "BP23VDWQT": BUFFERPOOL fields BP23 - VDWQT
## The values of field BP23VDWQT specify vertical deferred write threshold of BP23.
BP23VDWQT=
## "BP24" on panel DSNTIP1: BUFFERPOOL fields BP24
## The values of field BP24 specify the number of 4 KB buffers in BP24.
BP24=0
## "BP24SEQT": BUFFERPOOL fields BP24 - SEQT
## The values of field BP24SEQT specify the sequential steal threshold of BP24.
BP24SEQT=
## "BP24DWQT": BUFFERPOOL fields BP24 - DWQT
## The values of field BP24DWQT specify deferred write threshold of BP24.
BP24DWQT=
## "BP24VDWQT": BUFFERPOOL fields BP24 - VDWQT
## The values of field BP24VDWQT specify vertical deferred write threshold of BP24.
BP24VDWQT=
## "BP25" on panel DSNTIP1: BUFFERPOOL fields BP25
## The values of field BP25 specify the number of 4 KB buffers in BP25.
BP25=0
## "BP25SEQT": BUFFERPOOL fields BP25 - SEQT
## The values of field BP25SEQT specify the sequential steal threshold of BP25.
BP25SEQT=
## "BP25DWQT": BUFFERPOOL fields BP25 - DWQT
## The values of field BP25DWQT specify deferred write threshold of BP25.
BP25DWQT=
## "BP25VDWQT": BUFFERPOOL fields BP25 - VDWQT
## The values of field BP25VDWQT specify vertical deferred write threshold of BP25.
BP25VDWQT=
## "BP26" on panel DSNTIP1: BUFFERPOOL fields BP26
## The values of field BP26 specify the number of 4 KB buffers in BP26.
BP26=0
## "BP26SEQT": BUFFERPOOL fields BP26 - SEQT
## The values of field BP26SEQT specify the sequential steal threshold of BP26.
BP26SEQT=
## "BP26DWQT": BUFFERPOOL fields BP26 - DWQT
## The values of field BP26DWQT specify deferred write threshold of BP26.
BP26DWQT=
## "BP26VDWQT": BUFFERPOOL fields BP26 - VDWQT
## The values of field BP26VDWQT specify vertical deferred write threshold of BP26.
BP26VDWQT=
## "BP27" on panel DSNTIP1: BUFFERPOOL fields BP27
## The values of field BP27 specify the number of 4 KB buffers in BP27.
BP27=0
## "BP27SEQT": BUFFERPOOL fields BP27 - SEQT
## The values of field BP27SEQT specify the sequential steal threshold of BP27.
BP27SEQT=
## "BP27DWQT": BUFFERPOOL fields BP27 - DWQT
## The values of field BP27DWQT specify deferred write threshold of BP27.
BP27DWQT=
## "BP27VDWQT": BUFFERPOOL fields BP27 - VDWQT
## The values of field BP27VDWQT specify vertical deferred write threshold of BP27.
BP27VDWQT=
## "BP28" on panel DSNTIP1: BUFFERPOOL fields BP28
## The values of field BP28 specify the number of 4 KB buffers in BP28.
BP28=0
## "BP28SEQT": BUFFERPOOL fields BP28 - SEQT
## The values of field BP28SEQT specify the sequential steal threshold of BP28.
BP28SEQT=
## "BP28DWQT": BUFFERPOOL fields BP28 - DWQT
## The values of field BP28DWQT specify deferred write threshold of BP28.
BP28DWQT=
## "BP28VDWQT": BUFFERPOOL fields BP28 - VDWQT
## The values of field BP28VDWQT specify vertical deferred write threshold of BP28.
BP28VDWQT=
## "BP29" on panel DSNTIP1: BUFFERPOOL fields BP29
## The values of field BP29 specify the number of 4 KB buffers in BP29.
BP29=0
## "BP29SEQT": BUFFERPOOL fields BP29 - SEQT
## The values of field BP29SEQT specify the sequential steal threshold of BP29.
BP29SEQT=
## "BP29DWQT": BUFFERPOOL fields BP29 - DWQT
## The values of field BP29DWQT specify deferred write threshold of BP29.
BP29DWQT=
## "BP29VDWQT": BUFFERPOOL fields BP29 - VDWQT
## The values of field BP29VDWQT specify vertical deferred write threshold of BP29.
BP29VDWQT=
## "BP30" on panel DSNTIP1: BUFFERPOOL fields BP30
## The values of field BP30 specify the number of 4 KB buffers in BP30.
BP30=0
## "BP30SEQT": BUFFERPOOL fields BP30 - SEQT
## The values of field BP30SEQT specify the sequential steal threshold of BP30.
BP30SEQT=
## "BP30DWQT": BUFFERPOOL fields BP30 - DWQT
## The values of field BP30DWQT specify deferred write threshold of BP30.
BP30DWQT=
## "BP30VDWQT": BUFFERPOOL fields BP30 - VDWQT
## The values of field BP30VDWQT specify vertical deferred write threshold of BP30.
BP30VDWQT=
## "BP31" on panel DSNTIP1: BUFFERPOOL fields BP31
## The values of field BP31 specify the number of 4 KB buffers in BP31.
BP31=0
## "BP31SEQT": BUFFERPOOL fields BP31 - SEQT
## The values of field BP31SEQT specify the sequential steal threshold of BP31.
BP31SEQT=
## "BP31DWQT": BUFFERPOOL fields BP31 - DWQT
## The values of field BP31DWQT specify deferred write threshold of BP31.
BP31DWQT=
## "BP31VDWQT": BUFFERPOOL fields BP31 - VDWQT
## The values of field BP31VDWQT specify vertical deferred write threshold of BP31.
BP31VDWQT=
## "BP32" on panel DSNTIP1: BUFFERPOOL fields BP32
## The values of field BP32 specify the number of 4 KB buffers in BP32.
BP32=0
## "BP32SEQT": BUFFERPOOL fields BP32 - SEQT
## The values of field BP32SEQT specify the sequential steal threshold of BP32.
BP32SEQT=
## "BP32DWQT": BUFFERPOOL fields BP32 - DWQT
## The values of field BP32DWQT specify deferred write threshold of BP32.
BP32DWQT=
## "BP32VDWQT": BUFFERPOOL fields BP32 - VDWQT
## The values of field BP32VDWQT specify vertical deferred write threshold of BP32.
BP32VDWQT=
## "BP33" on panel DSNTIP1: BUFFERPOOL fields BP33
## The values of field BP33 specify the number of 4 KB buffers in BP33.
BP33=0
## "BP33SEQT": BUFFERPOOL fields BP33 - SEQT
## The values of field BP33SEQT specify the sequential steal threshold of BP33.
BP33SEQT=
## "BP33DWQT": BUFFERPOOL fields BP33 - DWQT
## The values of field BP33DWQT specify deferred write threshold of BP33.
BP33DWQT=
## "BP33VDWQT": BUFFERPOOL fields BP33 - VDWQT
## The values of field BP33VDWQT specify vertical deferred write threshold of BP33.
BP33VDWQT=
## "BP34" on panel DSNTIP1: BUFFERPOOL fields BP34
## The values of field BP34 specify the number of 4 KB buffers in BP34.
BP34=0
## "BP34SEQT": BUFFERPOOL fields BP34 - SEQT
## The values of field BP34SEQT specify the sequential steal threshold of BP34.
BP34SEQT=
## "BP34DWQT": BUFFERPOOL fields BP34 - DWQT
## The values of field BP34DWQT specify deferred write threshold of BP34.
BP34DWQT=
## "BP34VDWQT": BUFFERPOOL fields BP34 - VDWQT
## The values of field BP34VDWQT specify vertical deferred write threshold of BP34.
BP34VDWQT=
## "BP35" on panel DSNTIP1: BUFFERPOOL fields BP35
## The values of field BP35 specify the number of 4 KB buffers in BP35.
BP35=0
## "BP35SEQT": BUFFERPOOL fields BP35 - SEQT
## The values of field BP35SEQT specify the sequential steal threshold of BP35.
BP35SEQT=
## "BP35DWQT": BUFFERPOOL fields BP35 - DWQT
## The values of field BP35DWQT specify deferred write threshold of BP35.
BP35DWQT=
## "BP35VDWQT": BUFFERPOOL fields BP35 - VDWQT
## The values of field BP35VDWQT specify vertical deferred write threshold of BP35.
BP35VDWQT=
## "BP36" on panel DSNTIP1: BUFFERPOOL fields BP36
## The values of field BP36 specify the number of 4 KB buffers in BP36.
BP36=0
## "BP36SEQT": BUFFERPOOL fields BP36 - SEQT
## The values of field BP36SEQT specify the sequential steal threshold of BP36.
BP36SEQT=
## "BP36DWQT": BUFFERPOOL fields BP36 - DWQT
## The values of field BP36DWQT specify deferred write threshold of BP36.
BP36DWQT=
## "BP36VDWQT": BUFFERPOOL fields BP36 - VDWQT
## The values of field BP36VDWQT specify vertical deferred write threshold of BP36.
BP36VDWQT=
## "BP37" on panel DSNTIP1: BUFFERPOOL fields BP37
## The values of field BP37 specify the number of 4 KB buffers in BP37.
BP37=0
## "BP37SEQT": BUFFERPOOL fields BP37 - SEQT
## The values of field BP37SEQT specify the sequential steal threshold of BP37.
BP37SEQT=
## "BP37DWQT": BUFFERPOOL fields BP37 - DWQT
## The values of field BP37DWQT specify deferred write threshold of BP37.
BP37DWQT=
## "BP37VDWQT": BUFFERPOOL fields BP37 - VDWQT
## The values of field BP37VDWQT specify vertical deferred write threshold of BP37.
BP37VDWQT=
## "BP38" on panel DSNTIP1: BUFFERPOOL fields BP38
## The values of field BP38 specify the number of 4 KB buffers in BP38.
BP38=0
## "BP38SEQT": BUFFERPOOL fields BP38 - SEQT
## The values of field BP38SEQT specify the sequential steal threshold of BP38.
BP38SEQT=
## "BP38DWQT": BUFFERPOOL fields BP38 - DWQT
## The values of field BP38DWQT specify deferred write threshold of BP38.
BP38DWQT=
## "BP38VDWQT": BUFFERPOOL fields BP38 - VDWQT
## The values of field BP38VDWQT specify vertical deferred write threshold of BP38.
BP38VDWQT=
## "BP39" on panel DSNTIP1: BUFFERPOOL fields BP39
## The values of field BP39 specify the number of 4 KB buffers in BP39.
BP39=0
## "BP39SEQT": BUFFERPOOL fields BP39 - SEQT
## The values of field BP39SEQT specify the sequential steal threshold of BP39.
BP39SEQT=
## "BP39DWQT": BUFFERPOOL fields BP39 - DWQT
## The values of field BP39DWQT specify deferred write threshold of BP39.
BP39DWQT=
## "BP39VDWQT": BUFFERPOOL fields BP39 - VDWQT
## The values of field BP39VDWQT specify vertical deferred write threshold of BP39.
BP39VDWQT=
## "BP40" on panel DSNTIP1: BUFFERPOOL fields BP40
## The values of field BP40 specify the number of 4 KB buffers in BP40.
BP40=0
## "BP40SEQT": BUFFERPOOL fields BP40 - SEQT
## The values of field BP40SEQT specify the sequential steal threshold of BP40.
BP40SEQT=
## "BP40DWQT": BUFFERPOOL fields BP40 - DWQT
## The values of field BP40DWQT specify deferred write threshold of BP40.
BP40DWQT=
## "BP40VDWQT": BUFFERPOOL fields BP40 - VDWQT
## The values of field BP40VDWQT specify vertical deferred write threshold of BP40.
BP40VDWQT=
## "BP41" on panel DSNTIP1: BUFFERPOOL fields BP41
## The values of field BP41 specify the number of 4 KB buffers in BP41.
BP41=0
## "BP41SEQT": BUFFERPOOL fields BP41 - SEQT
## The values of field BP41SEQT specify the sequential steal threshold of BP41.
BP41SEQT=
## "BP41DWQT": BUFFERPOOL fields BP41 - DWQT
## The values of field BP41DWQT specify deferred write threshold of BP41.
BP41DWQT=
## "BP41VDWQT": BUFFERPOOL fields BP41 - VDWQT
## The values of field BP41VDWQT specify vertical deferred write threshold of BP41.
BP41VDWQT=
## "BP42" on panel DSNTIP1: BUFFERPOOL fields BP42
## The values of field BP42 specify the number of 4 KB buffers in BP42.
BP42=0
## "BP42SEQT": BUFFERPOOL fields BP42 - SEQT
## The values of field BP42SEQT specify the sequential steal threshold of BP42.
BP42SEQT=
## "BP42DWQT": BUFFERPOOL fields BP42 - DWQT
## The values of field BP42DWQT specify deferred write threshold of BP42.
BP42DWQT=
## "BP42VDWQT": BUFFERPOOL fields BP42 - VDWQT
## The values of field BP42VDWQT specify vertical deferred write threshold of BP42.
BP42VDWQT=
## "BP43" on panel DSNTIP1: BUFFERPOOL fields BP43
## The values of field BP43 specify the number of 4 KB buffers in BP43.
BP43=0
## "BP43SEQT": BUFFERPOOL fields BP43 - SEQT
## The values of field BP43SEQT specify the sequential steal threshold of BP43.
BP43SEQT=
## "BP43DWQT": BUFFERPOOL fields BP43 - DWQT
## The values of field BP43DWQT specify deferred write threshold of BP43.
BP43DWQT=
## "BP43VDWQT": BUFFERPOOL fields BP43 - VDWQT
## The values of field BP43VDWQT specify vertical deferred write threshold of BP43.
BP43VDWQT=
## "BP44" on panel DSNTIP1: BUFFERPOOL fields BP44
## The values of field BP44 specify the number of 4 KB buffers in BP44.
BP44=0
## "BP44SEQT": BUFFERPOOL fields BP44 - SEQT
## The values of field BP44SEQT specify the sequential steal threshold of BP44.
BP44SEQT=
## "BP44DWQT": BUFFERPOOL fields BP44 - DWQT
## The values of field BP44DWQT specify deferred write threshold of BP44.
BP44DWQT=
## "BP44VDWQT": BUFFERPOOL fields BP44 - VDWQT
## The values of field BP44VDWQT specify vertical deferred write threshold of BP44.
BP44VDWQT=
## "BP45" on panel DSNTIP1: BUFFERPOOL fields BP45
## The values of field BP45 specify the number of 4 KB buffers in BP45.
BP45=0
## "BP45SEQT": BUFFERPOOL fields BP45 - SEQT
## The values of field BP45SEQT specify the sequential steal threshold of BP45.
BP45SEQT=
## "BP45DWQT": BUFFERPOOL fields BP45 - DWQT
## The values of field BP45DWQT specify deferred write threshold of BP45.
BP45DWQT=
## "BP45VDWQT": BUFFERPOOL fields BP45 - VDWQT
## The values of field BP45VDWQT specify vertical deferred write threshold of BP45.
BP45VDWQT=
## "BP46" on panel DSNTIP1: BUFFERPOOL fields BP46
## The values of field BP46 specify the number of 4 KB buffers in BP46.
BP46=0
## "BP46SEQT": BUFFERPOOL fields BP46 - SEQT
## The values of field BP46SEQT specify the sequential steal threshold of BP46.
BP46SEQT=
## "BP46DWQT": BUFFERPOOL fields BP46 - DWQT
## The values of field BP46DWQT specify deferred write threshold of BP46.
BP46DWQT=
## "BP46VDWQT": BUFFERPOOL fields BP46 - VDWQT
## The values of field BP46VDWQT specify vertical deferred write threshold of BP46.
BP46VDWQT=
## "BP47" on panel DSNTIP1: BUFFERPOOL fields BP47
## The values of field BP47 specify the number of 4 KB buffers in BP47.
BP47=0
## "BP47SEQT": BUFFERPOOL fields BP47 - SEQT
## The values of field BP47SEQT specify the sequential steal threshold of BP47.
BP47SEQT=
## "BP47DWQT": BUFFERPOOL fields BP47 - DWQT
## The values of field BP47DWQT specify deferred write threshold of BP47.
BP47DWQT=
## "BP47VDWQT": BUFFERPOOL fields BP47 - VDWQT
## The values of field BP47VDWQT specify vertical deferred write threshold of BP47.
BP47VDWQT=
## "BP48" on panel DSNTIP1: BUFFERPOOL fields BP48
## The values of field BP48 specify the number of 4 KB buffers in BP48.
BP48=0
## "BP48SEQT": BUFFERPOOL fields BP48 - SEQT
## The values of field BP48SEQT specify the sequential steal threshold of BP48.
BP48SEQT=
## "BP48DWQT": BUFFERPOOL fields BP48 - DWQT
## The values of field BP48DWQT specify deferred write threshold of BP48.
BP48DWQT=
## "BP48VDWQT": BUFFERPOOL fields BP48 - VDWQT
## The values of field BP48VDWQT specify vertical deferred write threshold of BP48.
BP48VDWQT=
## "BP49" on panel DSNTIP1: BUFFERPOOL fields BP49
## The values of field BP49 specify the number of 4 KB buffers in BP49.
BP49=0
## "BP49SEQT": BUFFERPOOL fields BP49 - SEQT
## The values of field BP49SEQT specify the sequential steal threshold of BP49.
BP49SEQT=
## "BP49DWQT": BUFFERPOOL fields BP49 - DWQT
## The values of field BP49DWQT specify deferred write threshold of BP49.
BP49DWQT=
## "BP49VDWQT": BUFFERPOOL fields BP49 - VDWQT
## The values of field BP49VDWQT specify vertical deferred write threshold of BP49.
BP49VDWQT=
## -- PANEL DSNTIP2 (BUFFER POOL SIZES - PANEL 2) --
## "BP8K0" on panel DSNTIP2: BUFFERPOOL fields BP8K0
## The values of field BP8K0 specify the number of 8 KB buffers in BP8K0.
BP8K0=5000
## "BP8K0SEQT": BUFFERPOOL fields BP8K0 - SEQT
## The values of field BP8K0SEQT specify the sequential steal threshold of BP8K0.
BP8K0SEQT=
## "BP8K0DWQT": BUFFERPOOL fields BP8K0 - DWQT
## The values of field BP8K0DWQT specify deferred write threshold of BP8K0.
BP8K0DWQT=
## "BP8K0VDWQT": BUFFERPOOL fields BP8K0 - VDWQT
## The values of field BP8K0VDWQT specify vertical deferred write threshold of BP8K0.
BP8K0VDWQT=
## "BP8K1" on panel DSNTIP2: BUFFERPOOL fields BP8K1
## The values of field BP8K1 specify the number of 8 KB buffers in BP8K1.
BP8K1=5000
## "BP8K1SEQT": BUFFERPOOL fields BP8K1 - SEQT
## The values of field BP8K1SEQT specify the sequential steal threshold of BP8K1.
BP8K1SEQT=
## "BP8K1DWQT": BUFFERPOOL fields BP8K1 - DWQT
## The values of field BP8K1DWQT specify deferred write threshold of BP8K1.
BP8K1DWQT=
## "BP8K1VDWQT": BUFFERPOOL fields BP8K1 - VDWQT
## The values of field BP8K1VDWQT specify vertical deferred write threshold of BP8K1.
BP8K1VDWQT=
## "BP8K2" on panel DSNTIP2: BUFFERPOOL fields BP8K2
## The values of field BP8K2 specify the number of 8 KB buffers in BP8K2.
BP8K2=0
## "BP8K2SEQT": BUFFERPOOL fields BP8K2 - SEQT
## The values of field BP8K2SEQT specify the sequential steal threshold of BP8K2.
BP8K2SEQT=
## "BP8K2DWQT": BUFFERPOOL fields BP8K2 - DWQT
## The values of field BP8K2DWQT specify deferred write threshold of BP8K2.
BP8K2DWQT=
## "BP8K2VDWQT": BUFFERPOOL fields BP8K2 - VDWQT
## The values of field BP8K2VDWQT specify vertical deferred write threshold of BP8K2.
BP8K2VDWQT=
## "BP8K3" on panel DSNTIP2: BUFFERPOOL fields BP8K3
## The values of field BP8K3 specify the number of 8 KB buffers in BP8K3.
BP8K3=0
## "BP8K3SEQT": BUFFERPOOL fields BP8K3 - SEQT
## The values of field BP8K3SEQT specify the sequential steal threshold of BP8K3.
BP8K3SEQT=
## "BP8K3DWQT": BUFFERPOOL fields BP8K3 - DWQT
## The values of field BP8K3DWQT specify deferred write threshold of BP8K3.
BP8K3DWQT=
## "BP8K3VDWQT": BUFFERPOOL fields BP8K3 - VDWQT
## The values of field BP8K3VDWQT specify vertical deferred write threshold of BP8K3.
BP8K3VDWQT=
## "BP8K4" on panel DSNTIP2: BUFFERPOOL fields BP8K4
## The values of field BP8K4 specify the number of 8 KB buffers in BP8K4.
BP8K4=0
## "BP8K4SEQT": BUFFERPOOL fields BP8K4 - SEQT
## The values of field BP8K4SEQT specify the sequential steal threshold of BP8K4.
BP8K4SEQT=
## "BP8K4DWQT": BUFFERPOOL fields BP8K4 - DWQT
## The values of field BP8K4DWQT specify deferred write threshold of BP8K4.
BP8K4DWQT=
## "BP8K4VDWQT": BUFFERPOOL fields BP8K4 - VDWQT
## The values of field BP8K4VDWQT specify vertical deferred write threshold of BP8K4.
BP8K4VDWQT=
## "BP8K5" on panel DSNTIP2: BUFFERPOOL fields BP8K5
## The values of field BP8K5 specify the number of 8 KB buffers in BP8K5.
BP8K5=0
## "BP8K5SEQT": BUFFERPOOL fields BP8K5 - SEQT
## The values of field BP8K5SEQT specify the sequential steal threshold of BP8K5.
BP8K5SEQT=
## "BP8K5DWQT": BUFFERPOOL fields BP8K5 - DWQT
## The values of field BP8K5DWQT specify deferred write threshold of BP8K5.
BP8K5DWQT=
## "BP8K5VDWQT": BUFFERPOOL fields BP8K5 - VDWQT
## The values of field BP8K5VDWQT specify vertical deferred write threshold of BP8K5.
BP8K5VDWQT=
## "BP8K6" on panel DSNTIP2: BUFFERPOOL fields BP8K6
## The values of field BP8K6 specify the number of 8 KB buffers in BP8K6.
BP8K6=0
## "BP8K6SEQT": BUFFERPOOL fields BP8K6 - SEQT
## The values of field BP8K6SEQT specify the sequential steal threshold of BP8K6.
BP8K6SEQT=
## "BP8K6DWQT": BUFFERPOOL fields BP8K6 - DWQT
## The values of field BP8K6DWQT specify deferred write threshold of BP8K6.
BP8K6DWQT=
## "BP8K6VDWQT": BUFFERPOOL fields BP8K6 - VDWQT
## The values of field BP8K6VDWQT specify vertical deferred write threshold of BP8K6.
BP8K6VDWQT=
## "BP8K7" on panel DSNTIP2: BUFFERPOOL fields BP8K7
## The values of field BP8K7 specify the number of 8 KB buffers in BP8K7.
BP8K7=0
## "BP8K7SEQT": BUFFERPOOL fields BP8K7 - SEQT
## The values of field BP8K7SEQT specify the sequential steal threshold of BP8K7.
BP8K7SEQT=
## "BP8K7DWQT": BUFFERPOOL fields BP8K7 - DWQT
## The values of field BP8K7DWQT specify deferred write threshold of BP8K7.
BP8K7DWQT=
## "BP8K7VDWQT": BUFFERPOOL fields BP8K7 - VDWQT
## The values of field BP8K7VDWQT specify vertical deferred write threshold of BP8K7.
BP8K7VDWQT=
## "BP8K8" on panel DSNTIP2: BUFFERPOOL fields BP8K8
## The values of field BP8K8 specify the number of 8 KB buffers in BP8K8.
BP8K8=0
## "BP8K8SEQT": BUFFERPOOL fields BP8K8 - SEQT
## The values of field BP8K8SEQT specify the sequential steal threshold of BP8K8.
BP8K8SEQT=
## "BP8K8DWQT": BUFFERPOOL fields BP8K8 - DWQT
## The values of field BP8K8DWQT specify deferred write threshold of BP8K8.
BP8K8DWQT=
## "BP8K8VDWQT": BUFFERPOOL fields BP8K8 - VDWQT
## The values of field BP8K8VDWQT specify vertical deferred write threshold of BP8K8.
BP8K8VDWQT=
## "BP8K9" on panel DSNTIP2: BUFFERPOOL fields BP8K9
## The values of field BP8K9 specify the number of 8 KB buffers in BP8K9.
BP8K9=0
## "BP8K9SEQT": BUFFERPOOL fields BP8K9 - SEQT
## The values of field BP8K9SEQT specify the sequential steal threshold of BP8K9.
BP8K9SEQT=
## "BP8K9DWQT": BUFFERPOOL fields BP8K9 - DWQT
## The values of field BP8K9DWQT specify deferred write threshold of BP8K9.
BP8K9DWQT=
## "BP8K9VDWQT": BUFFERPOOL fields BP8K9 - VDWQT
## The values of field BP8K9VDWQT specify vertical deferred write threshold of BP8K9.
BP8K9VDWQT=
## "BP16K0" on panel DSNTIP2: BUFFERPOOL fields BP16K0
## The values of field BP16K0 specify the number of 16 KB buffers in BP16K0.
BP16K0=5000
## "BP16K0SEQT": BUFFERPOOL fields BP16K0 - SEQT
## The values of field BP16K0SEQT specify the sequential steal threshold of BP16K0.
BP16K0SEQT=
## "BP16K0DWQT": BUFFERPOOL fields BP16K0 - DWQT
## The values of field BP16K0DWQT specify deferred write threshold of BP16K0.
BP16K0DWQT=
## "BP16K0VDWQT": BUFFERPOOL fields BP16K0 - VDWQT
## The values of field BP16K0VDWQT specify vertical deferred write threshold of BP16K0.
BP16K0VDWQT=
## "BP16K1" on panel DSNTIP2: BUFFERPOOL fields BP16K1
## The values of field BP16K1 specify the number of 16 KB buffers in BP16K1.
BP16K1=5000
## "BP16K1SEQT": BUFFERPOOL fields BP16K1 - SEQT
## The values of field BP16K1SEQT specify the sequential steal threshold of BP16K1.
BP16K1SEQT=
## "BP16K1DWQT": BUFFERPOOL fields BP16K1 - DWQT
## The values of field BP16K1DWQT specify deferred write threshold of BP16K1.
BP16K1DWQT=
## "BP16K1VDWQT": BUFFERPOOL fields BP16K1 - VDWQT
## The values of field BP16K1VDWQT specify vertical deferred write threshold of BP16K1.
BP16K1VDWQT=
## "BP16K2" on panel DSNTIP2: BUFFERPOOL fields BP16K2
## The values of field BP16K2 specify the number of 16 KB buffers in BP16K2.
BP16K2=5000
## "BP16K2SEQT": BUFFERPOOL fields BP16K2 - SEQT
## The values of field BP16K2SEQT specify the sequential steal threshold of BP16K2.
BP16K2SEQT=
## "BP16K2DWQT": BUFFERPOOL fields BP16K2 - DWQT
## The values of field BP16K2DWQT specify deferred write threshold of BP16K2.
BP16K2DWQT=
## "BP16K2VDWQT": BUFFERPOOL fields BP16K2 - VDWQT
## The values of field BP16K2VDWQT specify vertical deferred write threshold of BP16K2.
BP16K2VDWQT=
## "BP16K3" on panel DSNTIP2: BUFFERPOOL fields BP16K3
## The values of field BP16K3 specify the number of 16 KB buffers in BP16K3.
BP16K3=0
## "BP16K3SEQT": BUFFERPOOL fields BP16K3 - SEQT
## The values of field BP16K3SEQT specify the sequential steal threshold of BP16K3.
BP16K3SEQT=
## "BP16K3DWQT": BUFFERPOOL fields BP16K3 - DWQT
## The values of field BP16K3DWQT specify deferred write threshold of BP16K3.
BP16K3DWQT=
## "BP16K3VDWQT": BUFFERPOOL fields BP16K3 - VDWQT
## The values of field BP16K3VDWQT specify vertical deferred write threshold of BP16K3.
BP16K3VDWQT=
## "BP16K4" on panel DSNTIP2: BUFFERPOOL fields BP16K4
## The values of field BP16K4 specify the number of 16 KB buffers in BP16K4.
BP16K4=0
## "BP16K4SEQT": BUFFERPOOL fields BP16K4 - SEQT
## The values of field BP16K4SEQT specify the sequential steal threshold of BP16K4.
BP16K4SEQT=
## "BP16K4DWQT": BUFFERPOOL fields BP16K4 - DWQT
## The values of field BP16K4DWQT specify deferred write threshold of BP16K4.
BP16K4DWQT=
## "BP16K4VDWQT": BUFFERPOOL fields BP16K4 - VDWQT
## The values of field BP16K4VDWQT specify vertical deferred write threshold of BP16K4.
BP16K4VDWQT=
## "BP16K5" on panel DSNTIP2: BUFFERPOOL fields BP16K5
## The values of field BP16K5 specify the number of 16 KB buffers in BP16K5.
BP16K5=0
## "BP16K5SEQT": BUFFERPOOL fields BP16K5 - SEQT
## The values of field BP16K5SEQT specify the sequential steal threshold of BP16K5.
BP16K5SEQT=
## "BP16K5DWQT": BUFFERPOOL fields BP16K5 - DWQT
## The values of field BP16K5DWQT specify deferred write threshold of BP16K5.
BP16K5DWQT=
## "BP16K5VDWQT": BUFFERPOOL fields BP16K5 - VDWQT
## The values of field BP16K5VDWQT specify vertical deferred write threshold of BP16K5.
BP16K5VDWQT=
## "BP16K6" on panel DSNTIP2: BUFFERPOOL fields BP16K6
## The values of field BP16K6 specify the number of 16 KB buffers in BP16K6.
BP16K6=0
## "BP16K6SEQT": BUFFERPOOL fields BP16K6 - SEQT
## The values of field BP16K6SEQT specify the sequential steal threshold of BP16K6.
BP16K6SEQT=
## "BP16K6DWQT": BUFFERPOOL fields BP16K6 - DWQT
## The values of field BP16K6DWQT specify deferred write threshold of BP16K6.
BP16K6DWQT=
## "BP16K6VDWQT": BUFFERPOOL fields BP16K6 - VDWQT
## The values of field BP16K6VDWQT specify vertical deferred write threshold of BP16K6.
BP16K6VDWQT=
## "BP16K7" on panel DSNTIP2: BUFFERPOOL fields BP16K7
## The values of field BP16K7 specify the number of 16 KB buffers in BP16K7.
BP16K7=0
## "BP16K7SEQT": BUFFERPOOL fields BP16K7 - SEQT
## The values of field BP16K7SEQT specify the sequential steal threshold of BP16K7.
BP16K7SEQT=
## "BP16K7DWQT": BUFFERPOOL fields BP16K7 - DWQT
## The values of field BP16K7DWQT specify deferred write threshold of BP16K7.
BP16K7DWQT=
## "BP16K7VDWQT": BUFFERPOOL fields BP16K7 - VDWQT
## The values of field BP16K7VDWQT specify vertical deferred write threshold of BP16K7.
BP16K7VDWQT=
## "BP16K8" on panel DSNTIP2: BUFFERPOOL fields BP16K8
## The values of field BP16K8 specify the number of 16 KB buffers in BP16K8.
BP16K8=0
## "BP16K8SEQT": BUFFERPOOL fields BP16K8 - SEQT
## The values of field BP16K8SEQT specify the sequential steal threshold of BP16K8.
BP16K8SEQT=
## "BP16K8DWQT": BUFFERPOOL fields BP16K8 - DWQT
## The values of field BP16K8DWQT specify deferred write threshold of BP16K8.
BP16K8DWQT=
## "BP16K8VDWQT": BUFFERPOOL fields BP16K8 - VDWQT
## The values of field BP16K8VDWQT specify vertical deferred write threshold of BP16K8.
BP16K8VDWQT=
## "BP16K9" on panel DSNTIP2: BUFFERPOOL fields BP16K9
## The values of field BP16K9 specify the number of 16 KB buffers in BP16K9.
BP16K9=0
## "BP16K9SEQT": BUFFERPOOL fields BP16K9 - SEQT
## The values of field BP16K9SEQT specify the sequential steal threshold of BP16K9.
BP16K9SEQT=
## "BP16K9DWQT": BUFFERPOOL fields BP16K9 - DWQT
## The values of field BP16K9DWQT specify deferred write threshold of BP16K9.
BP16K9DWQT=
## "BP16K9VDWQT": BUFFERPOOL fields BP16K9 - VDWQT
## The values of field BP16K9VDWQT specify vertical deferred write threshold of BP16K9.
BP16K9VDWQT=
## "BP32K" on panel DSNTIP2: BUFFERPOOL fields BP32K
## The values of field BP32K specify the number of 32 KB buffers in BP32K.
BP32K=5000
## "BP32KSEQT": BUFFERPOOL fields BP32K - SEQT
## The values of field BP32KSEQT specify the sequential steal threshold of BP32K.
BP32KSEQT=
## "BP32KDWQT": BUFFERPOOL fields BP32K - DWQT
## The values of field BP32KDWQT specify deferred write threshold of BP32K.
BP32KDWQT=
## "BP32KVDWQT": BUFFERPOOL fields BP32K - VDWQT
## The values of field BP32KVDWQT specify vertical deferred write threshold of BP32K.
BP32KVDWQT=
## "BP32K1" on panel DSNTIP2: BUFFERPOOL fields BP32K1
## The values of field BP32K1 specify the number of 32 KB buffers in BP32K1.
BP32K1=5000
## "BP32K1SEQT": BUFFERPOOL fields BP32K1 - SEQT
## The values of field BP32K1SEQT specify the sequential steal threshold of BP32K1.
BP32K1SEQT=
## "BP32K1DWQT": BUFFERPOOL fields BP32K1 - DWQT
## The values of field BP32K1DWQT specify deferred write threshold of BP32K1.
BP32K1DWQT=
## "BP32K1VDWQT": BUFFERPOOL fields BP32K1 - VDWQT
## The values of field BP32K1VDWQT specify vertical deferred write threshold of BP32K1.
BP32K1VDWQT=
## "BP32K2" on panel DSNTIP2: BUFFERPOOL fields BP32K2
## The values of field BP32K2 specify the number of 32 KB buffers in BP32K2.
BP32K2=5000
## "BP32K2SEQT": BUFFERPOOL fields BP32K2 - SEQT
## The values of field BP32K2SEQT specify the sequential steal threshold of BP32K2.
BP32K2SEQT=
## "BP32K2DWQT": BUFFERPOOL fields BP32K2 - DWQT
## The values of field BP32K2DWQT specify deferred write threshold of BP32K2.
BP32K2DWQT=
## "BP32K2VDWQT": BUFFERPOOL fields BP32K2 - VDWQT
## The values of field BP32K2VDWQT specify vertical deferred write threshold of BP32K2.
BP32K2VDWQT=
## "BP32K3" on panel DSNTIP2: BUFFERPOOL fields BP32K3
## The values of field BP32K3 specify the number of 32 KB buffers in BP32K3.
BP32K3=0
## "BP32K3SEQT": BUFFERPOOL fields BP32K3 - SEQT
## The values of field BP32K3SEQT specify the sequential steal threshold of BP32K3.
BP32K3SEQT=
## "BP32K3DWQT": BUFFERPOOL fields BP32K3 - DWQT
## The values of field BP32K3DWQT specify deferred write threshold of BP32K3.
BP32K3DWQT=
## "BP32K3VDWQT": BUFFERPOOL fields BP32K3 - VDWQT
## The values of field BP32K3VDWQT specify vertical deferred write threshold of BP32K3.
BP32K3VDWQT=
## "BP32K4" on panel DSNTIP2: BUFFERPOOL fields BP32K4
## The values of field BP32K4 specify the number of 32 KB buffers in BP32K4.
BP32K4=0
## "BP32K4SEQT": BUFFERPOOL fields BP32K4 - SEQT
## The values of field BP32K4SEQT specify the sequential steal threshold of BP32K4.
BP32K4SEQT=
## "BP32K4DWQT": BUFFERPOOL fields BP32K4 - DWQT
## The values of field BP32K4DWQT specify deferred write threshold of BP32K4.
BP32K4DWQT=
## "BP32K4VDWQT": BUFFERPOOL fields BP32K4 - VDWQT
## The values of field BP32K4VDWQT specify vertical deferred write threshold of BP32K4.
BP32K4VDWQT=
## "BP32K5" on panel DSNTIP2: BUFFERPOOL fields BP32K5
## The values of field BP32K5 specify the number of 32 KB buffers in BP32K5.
BP32K5=0
## "BP32K5SEQT": BUFFERPOOL fields BP32K5 - SEQT
## The values of field BP32K5SEQT specify the sequential steal threshold of BP32K5.
BP32K5SEQT=
## "BP32K5DWQT": BUFFERPOOL fields BP32K5 - DWQT
## The values of field BP32K5DWQT specify deferred write threshold of BP32K5.
BP32K5DWQT=
## "BP32K5VDWQT": BUFFERPOOL fields BP32K5 - VDWQT
## The values of field BP32K5VDWQT specify vertical deferred write threshold of BP32K5.
BP32K5VDWQT=
## "BP32K6" on panel DSNTIP2: BUFFERPOOL fields BP32K6
## The values of field BP32K6 specify the number of 32 KB buffers in BP32K6.
BP32K6=0
## "BP32K6SEQT": BUFFERPOOL fields BP32K6 - SEQT
## The values of field BP32K6SEQT specify the sequential steal threshold of BP32K6.
BP32K6SEQT=
## "BP32K6DWQT": BUFFERPOOL fields BP32K6 - DWQT
## The values of field BP32K6DWQT specify deferred write threshold of BP32K6.
BP32K6DWQT=
## "BP32K6VDWQT": BUFFERPOOL fields BP32K6 - VDWQT
## The values of field BP32K6VDWQT specify vertical deferred write threshold of BP32K6.
BP32K6VDWQT=
## "BP32K7" on panel DSNTIP2: BUFFERPOOL fields BP32K7
## The values of field BP32K7 specify the number of 32 KB buffers in BP32K7.
BP32K7=0
## "BP32K7SEQT": BUFFERPOOL fields BP32K7 - SEQT
## The values of field BP32K7SEQT specify the sequential steal threshold of BP32K7.
BP32K7SEQT=
## "BP32K7DWQT": BUFFERPOOL fields BP32K7 - DWQT
## The values of field BP32K7DWQT specify deferred write threshold of BP32K7.
BP32K7DWQT=
## "BP32K7VDWQT": BUFFERPOOL fields BP32K7 - VDWQT
## The values of field BP32K7VDWQT specify vertical deferred write threshold of BP32K7.
BP32K7VDWQT=
## "BP32K8" on panel DSNTIP2: BUFFERPOOL fields BP32K8
## The values of field BP32K8 specify the number of 32 KB buffers in BP32K8.
BP32K8=0
## "BP32K8SEQT": BUFFERPOOL fields BP32K8 - SEQT
## The values of field BP32K8SEQT specify the sequential steal threshold of BP32K8.
BP32K8SEQT=
## "BP32K8DWQT": BUFFERPOOL fields BP32K8 - DWQT
## The values of field BP32K8DWQT specify deferred write threshold of BP32K8.
BP32K8DWQT=
## "BP32K8VDWQT": BUFFERPOOL fields BP32K8 - VDWQT
## The values of field BP32K8VDWQT specify vertical deferred write threshold of BP32K8.
BP32K8VDWQT=
## "BP32K9" on panel DSNTIP2: BUFFERPOOL fields BP32K9
## The values of field BP32K9 specify the number of 32 KB buffers in BP32K9.
BP32K9=0
## "BP32K9SEQT": BUFFERPOOL fields BP32K9 - SEQT
## The values of field BP32K9SEQT specify the sequential steal threshold of BP32K9.
BP32K9SEQT=
## "BP32K9DWQT": BUFFERPOOL fields BP32K9 - DWQT
## The values of field BP32K9DWQT specify deferred write threshold of BP32K9.
BP32K9DWQT=
## "BP32K9VDWQT": BUFFERPOOL fields BP32K9 - VDWQT
## The values of field BP32K9VDWQT specify vertical deferred write threshold of BP32K9.
BP32K9VDWQT=
## "TBSBPOOL" on panel DSNTIP2: DEFAULT 4-KB BUFFER POOL FOR USER DATA
## The TBSBPOOL subsystem parameter specifies the default buffer pool to use for 4 KB page size table spaces that are created implicitly.
TBSBPOOL=BP1
## "TBSBP8K" on panel DSNTIP2: DEFAULT 8-KB BUFFER POOL FOR USER DATA
## The TBSBP8K subsystem parameter specifies the default buffer pool to use for 8 KB page size table spaces that are created implicitly.
TBSBP8K=BP8K1
## "TBSBP16K" on panel DSNTIP2: DEFAULT 16-KB BUFFER POOL FOR USER DATA
## The TBSBP16K subsystem parameter specifies the default buffer pool to use for 16 KB page size table spaces that are created implicitly.
TBSBP16K=BP16K1
## "TBSBP32K" on panel DSNTIP2: DEFAULT 32-KB BUFFER POOL FOR USER DATA
## The TBSBP32K subsystem parameter specifies the default buffer pool to use for 32 KB page size table spaces that are created implicitly.
TBSBP32K=BP32K1
## "TBSBPLOB" on panel DSNTIP2: DEFAULT BUFFER POOL FOR USER LOB DATA
## The TBSBPLOB subsystem parameter specifies the default buffer pool that is to be used for LOB table spaces that are created implicitly. This parameter also applies to LOB tables spaces that are created explicitly without the BUFFERPOOL clause.
TBSBPLOB=BP32K2
## "TBSBPXML" on panel DSNTIP2: DEFAULT BUFFER POOL FOR USER XML DATA
## The TBSBPXML subsystem parameter specifies the default buffer pool that is to be used for XML table spaces that are created implicitly.
TBSBPXML=BP16K2
## "IDXBPOOL" on panel DSNTIP2: DEFAULT BUFFER POOL FOR USER INDEXES
## The IDXBPOOL subsystem parameter identifies the default buffer pool that is to be used for indexes on user data.
IDXBPOOL=BP2
## -- PANEL DSNTIP4 (APPLICATION PROGRAMMING DEFAULTS PANEL 2) --
## "DECDIV3" on panel DSNTIP4: MINIMUM DIVIDE SCALE
## The DECDIV3 subsystem parameter determines whether to retain at least three digits to the right of the decimal point after any decimal division.
DECDIV3=NO
## "DECARTH" on panel DSNTIP4: DECIMAL ARITHMETIC
## The DECARTH DECP value specifies the rules that are to be used when both operands in a decimal operation have precisions of 15 or less.
DECARTH=DEC15
## "DYNRULS" on panel DSNTIP4: USE FOR DYNAMICRULES
## The DYNRULS DECP value specifies whether DB2 is to use the application programming default values that are specified on this panel. The other option is to use the values of the DB2 precompiler options for dynamic SQL statements that are bound by using DYNAMICRULES bind, define, or invoke behavior.
DYNRULS=YES
## "DESCSTAT" on panel DSNTIP4: DESCRIBE FOR STATIC
## The DESCSTAT subsystem parameter controls whether DB2 is to build a DESCRIBE SQL descriptor area (SQLDA) when binding static SQL statements. DESCRIBE SQLDAs allow DESCRIBE requests for static SQL statements to execute successfully.
DESCSTAT=YES
## "DEFDATE" on panel DSNTIP4: DATE FORMAT
## The DATE DECP value controls the default format that is to be used to represent dates in output.
DEFDATE=ISO
## "DEFTIME" on panel DSNTIP4: TIME FORMAT
## The value of the TIME FORMAT field specifies which format is to be used as a default output to represent times.
DEFTIME=ISO
## "DEFDATEL" on panel DSNTIP4: LOCAL DATE LENGTH
## If you use a locally defined date exit routine, the DATELEN DECP value defines the length of the longest field that is required to hold a date. To use your own default date format, you must also enter LOCAL for the DATE FORMAT field on panel DSNTIP4.
DEFDATEL=0
## "DEFTIMEL" on panel DSNTIP4: LOCAL TIME LENGTH
## Accept the default value of 0 if you want to use one of the IBM-supplied time formats (ISO, JIS, USA, or EUR).
DEFTIMEL=0
## "IMTZ" on panel DSNTIP4: IMPLICIT TIME ZONE
## The IMPLICIT_TIMEZONE DECP value determines the implicit time zone that is to be used when a time zone is not provided. This parameter applies to DB2 table columns and routing parameters that are declared with TIMESTAMP WITH TIME ZONE data types.
IMTZ=CURRENT
## "DEFSQLVL" on panel DSNTIP4: STD SQL LANGUAGE
## The STD SQL LANGUAGE field specifies the SQL standard that is to be used in writing application programs. Specifically, the parameter specifies whether the SQL language conforms to the portions of the 1992 ANSI SQL standard that are implemented by DB2.
DEFSQLVL=NO
## "PADNTSTR" on panel DSNTIP4: PAD NUL-TERMINATED
## The PADNTSTR subsystem parameter determines whether output host variables that are nul-terminated strings are to be padded with blanks and a nul-terminator.
PADNTSTR=NO
## -- PANEL DSNTIP5 (DISTRIBUTED DATA FACILITY PANEL 2) --
## "CMTSTAT" on panel DSNTIP5: DDF THREADS
## The CMTSTAT subsystem parameter controls whether threads are to be made active or inactive after they successfully commit or roll back and hold no cursors. A thread can become inactive only if it holds no cursors, has no temporary tables defined, and executes no statements from the dynamic statement cache.
CMTSTAT=INACTIVE
## "MAXTYPE1" on panel DSNTIP5: MAX INACTIVE DBATS
## The MAXTYPE1 subsystem parameter determines the number of inactive DBATs that DB2 is to allow.
MAXTYPE1=0
## "IDTHTOIN" on panel DSNTIP5: IDLE THREAD TIMEOUT
## The IDTHTOIN subsystem parameter controls the amount of time, in seconds, that an active server thread is to be allowed to remain idle. This amount of time is the timeout value. The thread is canceled after the timeout value expires, and its locks and cursors are released.
IDTHTOIN=120
## "EXTSEC" on panel DSNTIP5: EXTENDED SECURITY
## The EXTSEC subsystem parameter specifies how two related security options are to be set. These settings control what happens when a DDF connection has security errors and whether RACF users can change their passwords through the DRDA change password function.
EXTSEC=YES
## "TCPALVER" on panel DSNTIP5: TCP/IP ALREADY VERIFIED
## The TCPALVER subsystem parameter specifies whether DB2 is to accept TCP/IP connection requests that contain only a user ID (no password, RACF PassTicket, or Kerberos ticket). Or, this parameter specifies if a stronger form of security is required. This parameter is not relevant to trusted context users that have been switched.
TCPALVER=NO
## "EXTRAREQ" on panel DSNTIP5: EXTRA BLOCKS REQ
## The EXTRAREQ subsystem parameter limits the number of extra DRDA query blocks that DB2 is to request from a remote DRDA server. This parameter does not limit the size of the SQL query answer set. It simply controls the total amount of data that can be transmitted on a network exchange.
EXTRAREQ=100
## "EXTRASRV" on panel DSNTIP5: EXTRA BLOCKS SRV
## The EXTRASRV subsystem parameter limits the number of extra DRDA query blocks that DB2 is to return to a DRDA client. This parameter not limit the size of the SQL query answer set. It simply controls the total amount of data that can be transmitted on a network exchange.
EXTRASRV=100
## "TCPKPALV" on panel DSNTIP5: TCP/IP KEEPALIVE
## The TCPKPALV subsystem parameter determines whether the TCP/IP KeepAlive value in the TCP/IP configuration is to be overridden with a different value. This option can be used in cases where the TCP/IP KeepAlive value in the TCP/IP configuration is not appropriate for the DB2 subsystem.
TCPKPALV=120
## "POOLINAC" on panel DSNTIP5: POOL THREAD TIMEOUT
## The POOLINAC subsystem parameter specifies the approximate time, in seconds, that a database access thread (DBAT) can remain idle in the pool before it is terminated.
POOLINAC=120
## "MAXCONQN" on panel DSNTIP5: CONN QUEUE MAX DEPTH
## The MAXCONQN subsystem parameter specifies the maximum number of inactive or new connections that can be queued waiting for a DBAT to process the request.
MAXCONQN=OFF
## "MAXCONQW" on panel DSNTIP5: CONN QUEUE MAX WAIT
## The MAXCONQW subsystem parameter specifies the maximum length of time that a client connection waits for a DBAT to process the next unit-of-work or new connection request.
MAXCONQW=OFF
## -- PANEL DSNTIP6 (DB2 UTILITIES PARAMETERS 1) --
## "VOLTDEVT" on panel DSNTIP6: TEMP DS UNIT NAME
## The VOLTDEVT subsystem parameter specifies the device type or unit name that is to be used by the DB2 COPY CONCURRENT and CHECK utilities for dynamically allocating temporary data sets. Specifying a value for VOLTDEVT removes the need to specify the FILTERDDN DD in the utility job.
VOLTDEVT=SYSDA
## "UTTEMPSC" on panel DSNTIP6: UTIL TEMP STORCLAS
## The UTIL_TEMP_STORCLAS subsystem parameter specifies the storage class that the CHECK INDEX, CHECK DATA, and CHECK LOB utilities are to use when allocating temporary shadow data sets. (These utilities allocate shadow data sets when you specify the SHRLEVEL CHANGE option.)
UTTEMPSC=
## "STATHIST" on panel DSNTIP6: STATISTICS HISTORY
## The STATHIST subsystem parameter specifies which inserts and updates are to be recorded in catalog history tables.
STATHIST=NONE
## "STATROLL" on panel DSNTIP6: STATISTICS ROLLUP
## The STATROLL subsystem parameter specifies whether the RUNSTATS utility is to aggregate the partition-level statistics, even though some parts might not contain data.
STATROLL=YES
## "UTIMOUT" on panel DSNTIP6: UTILITY TIMEOUT
## The UTIMOUT subsystem parameter specifies how long, in number of resource values, that a utility or utility command is to wait for a resource. The utility or utility command waits until a lock or all claims on a resource of a particular claim class is released.
UTIMOUT=6
## "IGNSORTN" on panel DSNTIP6: IGNORE SORTNUM STMT
## The IGNSORTN subsystem parameter determines whether occurrences of the SORTNUM clause in utility control statements are to be ignored.
IGNSORTN=NO
## "TPTM" on panel DSNTIP6: TEMPLATE TIME
## The TEMPLATE_TIME subsystem parameter specifies the default setting for the TIME option of the TEMPLATE statement.
TPTM=UTC
## "UMD" on panel DSNTIP6: MAX UTILS PARALLELISM
## The PARAMDEG_UTIL subsystem parameter specifies the maximum number of parallel subtasks for some utilities.
UMD=99
## "STACS" on panel DSNTIP6: STATISTICS COLGROUP DATA SORT STG LIMIT
## The STATCLGSRT parameter specifies how SORT is to be used by the RUNSTATS utility or by an inline statistics job when collecting statistics on a single column that is defined with the COLGROUP option.
STACS=10
## "STPGSAM" on panel DSNTIP6: PAGE LEVEL SAMPLING
## The STATPGSAMP subsystem parameter specifies whether the RUNSTATS utility should collect statistics using page sampling by default. Valid values are YES, NO, and SYSTEM.
STPGSAM=SYSTEM
## "UBCDC" on panel DSNTIP6: UTILS BLOCK FOR CDC
## The UTILS_BLOCK_FOR_CDC subsystem parameter specifies whether to block Db2 utilities from updating replicated tables or table spaces with replication enabled.
UBCDC=NO
## -- PANEL DSNTIP61 (DB2 UTILITIES PARAMETERS PANEL 2) --
## "RECFASRP" on panel DSNTIP61: FAST RESTORE
## The REC_FASTREPLICATION parameter specifies whether the RECOVER utility should use FlashCopy to recover from a FlashCopy image copy.
RECFASRP=PREFERRED
## "CYFR" on panel DSNTIP61: COPY FAST REPLICATION
##Corresponds to the COPY_FASTREPLICATION subsystem parameter.  Specifies for the COPY utility whether FlashCopy fast replication is preferred, required, or not used for the creation of the FlashCopy image copy.
CYFR=PREFERRED
## "FCPPRC" on panel DSNTIP61: FLASHCOPY PPRC
## The FLASHCOPY_PPRC subsystem parameter specifies the behavior for DFSMSdss FlashCopy requests when the target disk storage volume is the primary device in a peer-to-peer remote copy (Metro Mirror) relationship.
FCPPRC=REQUIRED
## "FCXC" on panel DSNTIP61: FLASHCOPY_XRCP
## The value of the FLASHCOPY_XRCP subsystem parameter specifies whether a data set level FlashCopy operation is allowed to a primary volume in an XRC relationship when the z/OS DFSMSdss support for RPFC for XRC is installed and enabled.
FCXC=YES
## "FCCP" on panel DSNTIP61: COPY
## The value of the FLASHCOPY_COPY parameter specifies whether the FLASHCOPY option of the COPY utility is to be used by default.
FCCP=NO
## "FCLD" on panel DSNTIP61: LOAD
## The value of the FLASHCOPY_LOAD subsystem parameter specifies whether the FLASHCOPY option of the LOAD utility is to be used by default.
FCLD=NO
## "FCROT" on panel DSNTIP61: REORG TABLESPACE
## The value of the FLASHCOPY_REORG_TS subsystem parameter specifies whether the FLASHCOPY option of the REORG TABLESPACE utility is to be used by default.
FCROT=NO
## "FCRBI" on panel DSNTIP61: REBUILD INDEX
## The value of the FLASHCOPY_REBUILD_INDEX subsystem parameter specifies whether the FLASHCOPY option of the REBUILD INDEX utility is to be used by default.
FCRBI=NO
## "FCROI" on panel DSNTIP61: REORG INDEX
## The value of the FLASHCOPY_REORG_INDEX subsystem parameter specifies whether the FLASHCOPY option of the REORG INDEX utility is to be used by default.
FCROI=NO
## -- PANEL DSNTIP62 (DB2 UTILITIES PARAMETERS PANEL 3) --
## "SYSLVLBK" on panel DSNTIP62: SYSTEM-LEVEL BACKUPS
## The RECOVER utility uses image copies and concurrent copies for object-level recoveries. The SYSTEM_LEVEL_BACKUPS subsystem parameter specifies whether the RECOVER utility is to also use system-level backups as a recovery base for object-level recoveries.
SYSLVLBK=NO
## "RESRECFD" on panel DSNTIP62: RESTORE/RECOVER
## The RESTORE_ RECOVER_FROMDUMP subsystem parameter controls whether the system-level backup for the RESTORE SYSTEM and the RECOVER utilities is to occur from the dump on tape.
RESRECFD=NO
## "UTDUMPCL" on panel DSNTIP62: DUMP CLASS NAME
## A system-level backup can occur from a dump on tape or from a disk copy. For backups that occur from the dump on tape, the UTILS_DUMP_CLASS_NAME subsystem parameter specifies the name of the DFSMShsm dump class that is to be used.
UTDUMPCL=
## "RESTORTU" on panel DSNTIP62: MAXIMUM TAPE UNITS
## When the RESTORE SYSTEM utility restores a system-level backup that has been dumped to tape, it allocates a number of tape units or tape drives. The RESTORE_TAPEUNITS subsystem parameter specifies the maximum number of tape units or tape drives that the RESTORE SYSTEM utility can allocate.
RESTORTU=NOLIMIT
## "BSACP" on panel DSNTIP62: ALTERNATE COPY POOL
## Corresponds to the ALTERNATE_CP subsystem parameter.  Specifies the name of an alternate SMS copy pool for the BACKUP SYSTEM utility. If a copy pool is specified, BACKUP SYSTEM alternates between using that copy pool and the standard copy pool when the utility creates system-level backups.
BSACP=NO
## "UDBSG" on panel DSNTIP62: DB BACKUP STG GROUP
## Corresponds to the UTIL_DBBSG subsystem parameter.  Specifies the name of a backup SMS storage group to be used by the BACKUP SYSTEM utility for the database copy pool. Set this field to a non-blank value only if the value of the ALTERNATE_CP parameter is also non-blank.
UDBSG=
## "ULBSG" on panel DSNTIP62: LOG BACKUP STG GROUP
## Corresponds to the UTIL_LGBSG subsystem parameter.  Specifies the name of a backup SMS storage group to be used by the BACKUP SYSTEM utility for the log copy pool.  Set this field to a non-blank value only if the value of the ALTERNATE_CP parameter is also non-blank.
ULBSG=
## "UHMDH" on panel DSNTIP62: HSM MESSAGE DS HLQ
## Corresponds to the UTILS_HSM_MSGDS_HLQ subsystem parameter.  Specifies the high-level qualifier for data sets to be allocated by the DB2 BACKUP SYSTEM and RESTORE SYSTEM utilities in order to receive messages from IBM Hierarchical Storage Management (HSM) and IBM Data Facility Data Set Services (DFDSS). These messages will be included for diagnostic purposes in DB2 utility SYSPRINT DD output.
UHMDH=
## -- PANEL DSNTIP63 (DB2 UTILITIES PARAMETERS PANEL 4) --
## "RPSN" on panel DSNTIP63: REORG PART SORT NPSI
## The REORG_PART_SORT_NPSI subsystem parameter specifies whether the REORG TABLESPACE PART utility decides to sort all of the keys of a non-partitioned secondary index. The setting is ignored for a REORG that is not part-level or without non-partitioned secondary indexes.
RPSN=AUTO
## "RLPR" on panel DSNTIP63: REORG LIST PROCESSING
## The REORG_LIST_PROCESSING subsystem parameter specifies the default setting for the PARALLEL option of the DB2 REORG TABLESPACE utility.
RLPR=PARALLEL
## "RMDB" on panel DSNTIP63: REORG MAPPING DB
## The REORG_MAPPING_DATABASE subsystem parameter specifies the default database that REORG TABLESPACE SHRLEVEL CHANGE uses to implicitly create the mapping table.
RMDB=
## "RPBG" on panel DSNTIP63: REORG DROP PBG PARTS
## The REORG_DROP_PBG_PARTS subsystem parameter specifies whether the REORG utility removes trailing empty partitions when operating on an entire partition-by-growth table space. An empty trailing partition occurs when the REORG utility moves all data records from a partition into lower numbered partitions.
RPBG=DISABLE
## "REONOPAD" on panel DSNTIP63: REORG TS NOPAD DEFAULT
## The REORG_TS_NOPAD_DEFAULT subsystem parameter specifies the default setting for the NOPAD option of the UNLOAD EXTERNAL specification or the DISCARD specification of the REORG TABLESPACE utility. In other words, the setting to use when NOPAD is not given explicitly in the REORG TABLESPACE statement.
REONOPAD=YES
## -- PANEL DSNTIP7 (SQL OBJECT DEFAULTS PANEL 1) --
## "OBCF" on panel DSNTIP7: OBJECT CREATE FORMAT
## The OBJECT_CREATE_FORMAT subsystem parameter specifies whether DB2 is to create new table spaces and indexes to use a basic or extended log record format.
OBCF=EXTENDED
## "UTOC" on panel DSNTIP7: UTILITY OBJECT CONVERSION
## The value of the UTILITY_OBJECT_CONVERSION parameter specifies whether DB2 utilities that accept the RBALRSN_CONVERSION option will convert existing table spaces and indexes to 6-byte page format, to a 10-byte page format, or perform no conversion.
UTOC=EXTENDED
## "DSVCI" on panel DSNTIP7: VARY DS CONTROL INTERVAL
## The DSVCI subsystem parameter controls whether DB2-managed data sets that are created by CREATE TABLESPACE or CREATE INDEX statements are to have variable VSAM control intervals.
DSVCI=YES
## "TSQTY" on panel DSNTIP7: TABLE SPACE ALLOCATION
## The TSQTY subsystem parameter specifies the amount of space in KB that is to be allocated for primary and secondary spaces. This parameter applies to DB2-defined data sets for table spaces that are created without the PRIQTY and SECQTY clauses.
TSQTY=0
## "IXQTY" on panel DSNTIP7: INDEX SPACE ALLOCATION
## The IXQTY subsystem parameter controls the amount of space in KB that is to be allocated for primary and secondary spaces. This parameter applies to DB2-defined data sets for index spaces that are created without the PRIQTY and SECQTY clauses.
IXQTY=0
## "MGEXTSZ" on panel DSNTIP7: OPTIMIZE EXTENT SIZING
## The MGEXTSZ subsystem parameter controls whether secondary extent allocations for DB2-managed data sets are to be sized according to a sliding scale. Sizing the secondary extents on a sliding scale optimizes the likelihood of reaching the maximum data set size before secondary extents are exhausted.
MGEXTSZ=YES
## "TSCT" on panel DSNTIP7: TS COMPRESSION TYPE
## The TS_COMPRESSION_TYPE subsystem parameter specifies the type of compression algorithm to use when creating new compressed table spaces and when reorganizing existing compressed table spaces.
TSCT=FIXED_LENGTH
## -- PANEL DSNTIP71 (SQL OBJECT DEFAULTS PANEL 2) --
## "DPSEGSZ" on panel DSNTIP71: DEFAULT PARTITION SEGSIZE
## The DPSEGSZ subsystem parameter specifies the default segment size that is to be used for partitioned table spaces when the CREATE TABLESPACE statement does not include the SEGSIZE parameter.
DPSEGSZ=32
## "PFUP" on panel DSNTIP71: PERCENT FREE FOR UPDATE
## The PCTFREE_UPD subsystem parameter specifies the default value to use for the PCTFREE FOR UPDATE clause of CREATE TABLESPACE or ALTER TABLESPACE statements. It specifies the default amount of free space to reserve on each page for use by subsequent UPDATE operations when data is added to the table by INSERT operations or utilities.
PFUP=AUTO
## "PSPN" on panel DSNTIP71: PAGE SET PAGE NUMBERING
## Corresponds to the PAGESET_PAGENUM subsystem parameter.  Specifies whether range-partitioned table spaces and associated partitioned indexes are created to use absolute page numbers across partitions or relative page numbers.
PSPN=ABSOLUTE
## "RSO" on panel DSNTIP71: RETRY_STOPPED_OBJECTS
## The RSO variable specifies whether DB2 immediately rejects requests for a stopped object or rechecks whether the object is started, up to the IRLM timeout limit.
RSO=NO
## "PADIX" on panel DSNTIP71: PAD INDEXES BY DEFAULT
## The PADIX subsystem parameter determines whether new indexes are to be padded by default.
PADIX=NO
## "IXMC" on panel DSNTIP71: INDEX MEMORY CONTROL
## Corresponds to the INDEX_MEMORY_CONTROL subsystem parameter.  Specifies the amount of memory that DB2 allocates for fast traversing of indexes.
IXMC=AUTO
## "DDLM" on panel DSNTIP71: DDL MATERIALIZATION
## Corresponds to the DDL_MATERIALIZATION subsystem parameter.  Specifies when DB2 materializes changes to object definitions.
DDLM=ALWAYS_IMMEDIATE
## "DINA" on panel DSNTIP71: DEFAULT INSERT ALGORITHM
## Corresponds to the DEFAULT_INSERT_ALGORITHM subsystem parameter.  Specifies the default algorithm for inserting data into table spaces.
DINA=2
## -- PANEL DSNTIP72 (SQL OBJECT DEFAULTS PANEL 3) --
## "IMPDSDEF" on panel DSNTIP72: DEFINE DATA SETS
## The IMPDSDEF subsystem parameter specifies whether DB2 is to define the underlying data set for certain implicitly created table spaces and indexes.
IMPDSDEF=YES
## "IMPTSCMP" on panel DSNTIP72: USE DATA COMPRESSION
## The IMPTSCMP subsystem parameter determines whether a table space that is created in an implicitly created database is to use data compression.
IMPTSCMP=NO
## "PALK" on panel DSNTIP72: PREVENT ALTER LIMITKEY
## PREVENT_ALTERTB_LIMITKEY determines whether DB2 disallows altering the limit key by using an ALTER TABLE statement for index-controlled partitioned table spaces. This alter operation places the table space in REORG-pending (REORP) restrictive status, and the data is unavailable until the affected partitions are reorganized. Use PREVENT_ALTERTB_LIMITKEY to avoid this data unavailability.
PALK=YES
## "XPKE" on panel DSNTIP72: EXCLUDE PART KEY ELEMENTS
## The IX_TB_PART_CONV_EXCLUDE subsystem parameter specifies whether to exclude trailing columns from the table-controlled partitioning keys when table spaces are converted from index-controlled partitioning to table-controlled partitioning.
XPKE=YES
## "ERTS" on panel DSNTIP72: RENAMETABLE
## The ERTS variable specifies whether RENAME TABLE issues an error or allows the operation when RENAME TABLE is issued for a table that is referenced in a view definition or the definition of an SQL table function.
ERTS=DISALLOW_DEP_VIEW_SQLTUDF
## -- PANEL DSNTIP8 (PERFORMANCE AND OPTIMIZATION) --
## "CACHEDYN" on panel DSNTIP8: CACHE DYNAMIC SQL
## The CACHEDYN subsystem parameter controls whether prepared, dynamic SQL statements are to be cached for later use by eligible application processes.
CACHEDYN=YES
## "CDST" on panel DSNTIP8: CACHE DYN STABILITY
## Corresponds to the CACHEDYN_STABILIZATION subsystem parameter.  Specifies whether dynamic SQL statements can be captured for stabilization and whether DB2 uses the captured run time structures to process stabilized dynamic SQL statements that are not present in the dynamic statement cache. DB2 avoids processing full prepares when it uses the captured run time structures.
CDST=BOTH
## "OPTHINTS" on panel DSNTIP8: OPTIMIZATION HINTS
## The OPTHINTS subsystem parameter specifies whether DB2 applies various methods for influencing access path selection when static SQL statements are bound or dynamic SQL statements are prepared.
OPTHINTS=YES
## "EVALUNC" on panel DSNTIP8: EVALUATE UNCOMMITTED
## The EVALUNC subsystem parameter controls whether predicate evaluation is to be allowed on uncommitted data of other transactions. This parameter applies only to stage 1 predicate processing that uses table access for queries with isolation level RS or CS. Table access includes table space scan, index-to-data access, and RID-list processing.
EVALUNC=NO
## "SKIPUNCI" on panel DSNTIP8: SKIP UNCOMM INSERTS
## The SKIPUNCI subsystem parameter specifies whether statements ignore a row that was inserted by another transaction if the row has not yet been detected as committed. A newly inserted row can be detected as committed only after the lock held on the row has been released.
SKIPUNCI=NO
## "IMMEDWRI" on panel DSNTIP8: IMMEDIATE WRITE
## The IMMEDWRI subsystem parameter determines when updates to group buffer pool-dependent buffers are to be written to the coupling facility.
IMMEDWRI=NO
## "PLANMGMT" on panel DSNTIP8: PLAN MANAGEMENT
## The PLANMGMT subsystem parameter specifies which default plan management policy to use when the PLANMGMT option is not explicitly specified for the bind or rebind of a package.
PLANMGMT=EXTENDED
## "PMSCOPE" on panel DSNTIP8: PLAN MANAGEMENT SCOPE
## The PLANMGMTSCOPE subsystem parameter specifies the default plan management scope to use when the PLANMGMTSCOPE option is not explicitly specified for the bind or rebind of a package.
PMSCOPE=STATIC
## "PKRC" on panel DSNTIP8: PACKAGE RELEASE COMMIT
## The PKGREL_COMMIT subsystem parameter specifies whether, at COMMIT or ROLLBACK, a persistent DB2 thread will release a package that is active on that thread if certain DB2 operations are waiting for exclusive access to that package.
PKRC=YES
## "XRDI" on panel DSNTIP8: RANDOMIZE XML DOCID
## Specifies whether DB2 is to sequentially or randomly generate the DOCID values for XML columns.
XRDI=NO
## "STATSINT" on panel DSNTIP8: REAL TIME STATS
## The STATSINT subsystem parameter specifies the interval, in minutes, at which DB2 writes in-memory page set statistics to the real-time statistics tables. The value of the STATSINT subsystem parameter also controls the interval for writing statistics recommendations to the SYSIBM.SYSSTATSFEEDBACK catalog table. DB2 waits the specified number of minutes after the completion of the previous operation to begin the next operation.
STATSINT=30
## "DEDR" on panel DSNTIP8: DISABLE EDM RTS
## The DISABLE_EDMRTS subsystem parameter specifies whether to disable the collection of real-time statistics by the environmental description manager (EDM). By default, EDM collects real-time statistics to track when packages were last used.
DEDR=NO
## "SFBS" on panel DSNTIP8: STATISTICS FEEDBACK
## The STATFDBK_SCOPE subsystem parameter specifies the scope of the SQL statements that DB2 collects statistics recommendations for in the SYSIBM.SYSSTATFEEDBACK catalog table.
SFBS=ALL
## "SFPR" on panel DSNTIP8: STATS PROFILE FEEDBACK
## Corresponds to the STATFDBK_PROFILE subsystem parameter.  Specifies whether statistics recommendations identified during query optimization directly result in modifications to statistics profiles.
SFPR=YES
## -- PANEL DSNTIP81 (PERFORMANCE AND OPTIMIZATION (PANEL 2)) --
## "CDSSRDEF" on panel DSNTIP81: CURRENT DEGREE
## The CDSSRDEF subsystem parameter determines the default value that is to be used for the CURRENT DEGREE special register. The default value is used when a degree is not explicitly set in the SQL statement SET CURRENT DEGREE.
CDSSRDEF=1
## "PARAMDEG" on panel DSNTIP81: MAX DEGREE
## The PARAMDEG subsystem parameter specifies the maximum degree of parallelism that is to be allowed for a parallel group. When you specify a value for this parameter, you limit the degree of parallelism so that DB2 cannot create too many parallel tasks that use virtual storage.
PARAMDEG=16
## "DEGD" on panel DSNTIP81: MAX DEGREE FOR DPSI
## The PARAMDEG_DPSI subsystem parameter specifies the maximum degree of parallelism that you can specify for a parallel group in which a data partitioned secondary index (DPSI) is used to drive parallelism.
DEGD=0
## "PARAEFF" on panel DSNTIP81: PARALLELISM EFFICIENCY
## The PARA_EFF subsystem parameter controls the efficiency that DB2 assumes for parallelism when DB2 chooses an access path. The integer value that is used for this parameter represents a percentage efficiency.
PARAEFF=50
## "STARJOIN" on panel DSNTIP81: STAR JOIN QUERIES
## The STARJOIN subsystem parameter specifies whether star join processing is to be enabled.
STARJOIN=DISABLE
## "MXDTCACH" on panel DSNTIP81: MAX DATA CACHING
## The MXDTCACH subsystem parameter specifies the maximum amount of memory, in MB, that is to be allocated for data caching per thread.
MXDTCACH=20
## "REFSHAGE" on panel DSNTIP81: CURRENT REFRESH AGE
## The REFSHAGE subsystem parameter specifies the default value for the CURRENT REFRESH AGE special register. The default value is used when no value is explicitly set by using the SET CURRENT REFRESH AGE statement.
REFSHAGE=0
## "MAINTYPE" on panel DSNTIP81: CURRENT MAINT TYPES
## The MAINTYPE subsystem parameter specifies the default value for the CURRENT MAINTAINED TABLE TYPES FOR OPTIMIZATION special register. This value is to be used when no value is explicitly set by using the SQL statement SET CURRENT MAINTAINED TABLE TYPES FOR OPTIMIZATION.
MAINTYPE=SYSTEM
## -- PANEL DSNTIP82 (QUERY ACCELERATOR PREFERENCES) --
## "ACCEL" on panel DSNTIP82: ACCELERATOR STARTUP
## Specifies whether accelerator servers can be used with a DB2 subsystem, and how the accelerator servers are to be enabled and started. An accelerator server cannot be started unless it is enabled.
ACCEL=NO
## "CGAA" on panel DSNTIP82: GET ACCEL ARCHIVE
## The GET_ACCEL_ARCHIVE subsystem parameter determines the default value that is to be used for the CURRENT GET_ACCEL_ARCHIVE special register.
CGAA=NO
## "QACO" on panel DSNTIP82: ACCELERATION OPTIONS
## The QUERY_ACCEL_OPTIONS subsystem parameter controls whether certain types of queries are allowed to execute on an accelerator server.
QACO=NONE
## "CQAC" on panel DSNTIP82: CURRENT QUERY ACCEL
## The QUERY_ACCELERATION subsystem parameter determines the default value that is to be used for the CURRENT QUERY ACCELERATION special register.
CQAC=NONE
## "QAWFD" on panel DSNTIP82: WAIT FOR DATA
## The QUERY_ACCEL_WAITFORDATA subsystem parameter determines the default value that is to be used for the CURRENT QUERY ACCELERATION WAITFORDATA special register.
QAWFD=0
## -- PANEL DSNTIP9 (WORK FILE DATABASE) --
## "S4KNOTS" on panel DSNTIP9: 4K SORT WORK TS'S
## The value of the 4K SORT WORK TS'S field specifies the number of 4 KB sort work file table spaces that are to be created.
S4KNOTS=1
## "S4KSGSZ" on panel DSNTIP9: 4K SORT WORK SEG SIZE
## The value of the 4K SORT WORK SEG SIZE field specifies the segment size that is to be used for 4 KB sort work file table spaces. The value must be a multiple of 4 between 4 and 64, inclusive.
S4KSGSZ=16
## "S32KNOTS" on panel DSNTIP9: 32K SORT WORK TS'S
## The value of the 32K SORT WORK TS'S field specifies the number of 32 KB sort work file table spaces that are to be created.
S32KNOTS=1
## "S32KSGSZ" on panel DSNTIP9: 32K SORT WORK SEG SIZE
## The value of the 32K SORT WORK SEG SIZE field specifies the segment size that is to be used for 32 KB sort work file table spaces. The value must be a multiple of 4 between 4 and 64, inclusive.
S32KSGSZ=16
## "T4KNOTS" on panel DSNTIP9: 4K TEMP WORK TS'S
## The value of the NUMBER OF 4K TEMP WORK TABLE SPACES field specifies the number of 4 KB temporary work file table spaces.
T4KNOTS=1
## "T4KSGSZ" on panel DSNTIP9: 4K TEMP WORK SEG SIZE
## The value of the 4K TEMP WORK SEG SIZE field specifies the segment size that is to be used for 4 KB temporary work file table spaces. The value must be a multiple of 4 between 4 and 64, inclusive.
T4KSGSZ=16
## "T32KNOTS" on panel DSNTIP9: 32K TEMP WORK TS'S
## The value of the NUMBER OF 32K TEMP WORK TABLE SPACES field specifies the number of 32 KB temporary work file table spaces.
T32KNOTS=1
## "T32KSGSZ" on panel DSNTIP9: 32K TEMP WORK SEG SIZE
## The value of the 32K TEMP WORK SEG SIZE field specifies the segment size that is to be used for 32 KB temporary work file table spaces. The value must be a multiple of 4 between 4 and 64, inclusive.
T32KSGSZ=16
## "S32KTSSZ" on panel DSNTIP9: 32K SORT PRIMARY SPACE SIZE
## The value of the 32K SORT PRIMARY SPACE SIZE field specifies the total amount of space for all 32 KB sort work table spaces in the work file database. This value is specified in MB but you can enter the value in GB by specifying a suffix of G, for example 1024G.
S32KTSSZ=20
## "S4KTSSZ" on panel DSNTIP9: 4K SORT PRIMARY SPACE SIZE
## The value of the 4K SORT PRIMARY SPACE SIZE field specifies the total amount of space for all 4 KB sort work table spaces in the work file database. This value is specified in MB but you can enter the value in GB by specifying a suffix of G, for example 1024G.
S4KTSSZ=20
## "T32KDSSZ" on panel DSNTIP9: DSSIZE OF 32K TEMP WORK TABLE SPACES
## The value of the DSSIZE OF 32K TEMP WORK TABLE SPACES field specifies the data set size of 32 KB temporary work file table spaces.
T32KDSSZ=
## "T32KMXPT" on panel DSNTIP9: MAXPART OF 32K TEMP WORK TABLE SPACES
## The value of the MAXPART OF 32K TEMP WORK TABLE SPACES field specifies the maximum number of 32 KB temporary work file table space partitions.
T32KMXPT=
## "T32KTSSZ" on panel DSNTIP9: 32K TEMP WORK TABLE SPACE SIZE
## The value of the 32K TEMP WORK TABLE SPACE SIZE field specifies the table space size of 32 KB temporary work file.
T32KTSSZ=20
## "T4KDSSZ" on panel DSNTIP9: DSSIZE OF 4K TEMP WORK TABLE SPACES
## The value of the DSSIZE OF 4K TEMP WORK TABLE SPACES field specifies the data set size of 4 KB temporary work file table spaces.
T4KDSSZ=
## "T4KMXPT" on panel DSNTIP9: MAXPART OF 4K TEMP WORK TABLE SPACES
## The value of the MAXPART OF 4K TEMP WORK TABLE SPACES field specifies the maximum number of 4 KB temporary work file table space partitions.
T4KMXPT=
## "T4KTSSZ" on panel DSNTIP9: 4K TEMP WORK TABLE SPACE SIZE
## The value of the 4K TEMP WORK TABLE SPACE SIZE field specifies the table space size of 4 KB temporary work file.
T4KTSSZ=20
## -- PANEL DSNTIP91 (WORK FILE DATABASE - PANEL 2) --
## "MAXTEMPS" on panel DSNTIP91: MAX TEMP STG/AGENT
## The MAXTEMPS subsystem parameter determines the maximum amount of temporary storage in the work file database that a single agent can use at any given time for any type of usage. The usage can be for sort work files, created global temporary tables, declared global temporary tables, scrollable cursors result tables, and so on.
MAXTEMPS=0
## "WFDBSEP" on panel DSNTIP91: SEPARATE WORK FILES
## The WFDBSEP subsystem parameter specifies whether DB2 should provide an unconditional separation of table spaces in the work file database based on the allocation attributes of the table spaces.
WFDBSEP=YES
## "MXTMPRID" on panel DSNTIP91: MAX TEMP RID
## The MAXTEMPS_RID subsystem parameter determines the maximum amount of temporary storage in the work file database that a single RID list can use at a time.
MXTMPRID=NOLIMIT
## "WFSAT" on panel DSNTIP91: AGENT LEVEL THRESHOLD
## The WFSTGUSE_AGENT_THRESHOLD subsystem parameter determines the percentage of available space in the work file database on a DB2 subsystem or data sharing member that can be consumed by a single agent before a warning message is issued.
WFSAT=0
## "WFSST" on panel DSNTIP91: SYSTEM LEVEL THRESHOLD
## The WFSTGUSE_SYSTEM_THRESHOLD subsystem parameter determines the percentage of available space in the work file database on a DB2 subsystem or data sharing member that can be consumed by all agents before a warning message is issued.
WFSST=90
## -- No Related Panel --
## "MEMLIMIT" : MEMLIMIT
## Specifies the z/OS MEMLIMIT setting of the DB2 DBM1 address space.
MEMLIMIT=19
## "SPCLOG" : THE ACTIVE LOG DATA SET SPACE
## The space of the active log data sets
SPCLOG=34560
## "B": END OF LINE
## B is the "End of line" used as line break in z/OSMF. Please DO NOT remove this variable.
B=
