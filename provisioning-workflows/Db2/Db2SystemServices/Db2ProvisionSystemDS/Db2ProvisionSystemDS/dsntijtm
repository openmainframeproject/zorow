//*********************************************************************
//*
//* JOB NAME = DSNTIJTM
//*
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM
//*
//*    Licensed Materials - Property of IBM
//*    5650-DB2
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 12
//*
//* FUNCTION = CREATE WORK FILE DATABASE AND TABLE SPACES FOR DB2
//*
//* PSEUDOCODE =
//*   DSNTIAD  STEP      PRECOMPILE, ASSEMBLE, LINKEDIT
//*                            DYNAMIC SQL PROGRAM
//*   DSNTIAB  STEP      DEFINE BUFFERPOOL SIZES
//*                            WITH ALTER BUFFERPOOL COMMANDS
//*   DSNTIAS  STEP      DROP WORK FILE DATA BASE (${WKDBNAME})
//*                            AND DEFAULT STORAGE GROUP (SYSDEFLT)
//*                            ALSO BIND DYNAMIC SQL PROGRAM
//*   DSNTICR  STEP      CREATE WORK FILE DATA BASE
//*                            AND DEFAULT STORAGE GROUP (SYSDEFLT)
//*   DSNTIRX  STEP      BIND DB2 REXX LANGUAGE SUPPORT
//*   DSNTIST  STEP      CREATE WORK FILE TABLE SPACES
//*
//* CHANGE ACTIVITY =
//*   05/16/2011 SORT WORK FILE support                  DK1516/PM17336
//*   11/07/2012 Add RETAIN to BIND PLAN stmts    dn1651_inst1 / dn1651
//*              Add SET CURRENT SQLID
//*   05/15/2013 Precompile DSNTIAD with VERSION(AUTO)    90698_040_678
//*   10/02/2015 Installation w/o SYSADM            s24922_inst1 s24922
//*   02/15/2016 Long data set names                            PI42601
//*
//*********************************************************************
// JCLLIB ORDER=${PPROCLIB}
//*
//JOBLIB  DD  DISP=SHR,
//            DSN=${DSNLOAD}
//*
//DSNTIAD EXEC DSNHASM,MEM=DSNTIAD,
//       PARM.PC='HOST(ASM),DECP(${DSNHDECP}),STDSQL(NO),VERSION(AUTO)'
//PC.DBRMLIB   DD DISP=SHR,
//         DSN=${DBRMLIB}(DSNTIAD)
//PC.SYSLIB    DD DSN=${DSNSAMP},
//             DISP=SHR
//PC.SYSIN     DD DISP=SHR,
//         DSN=${DSNSAMP}(DSNTIAD)
//ASM.SYSLIB   DD
//             DD DISP=SHR,
//             DSN=${DSNSAMP}
//LKED.SYSLMOD DD DISP=SHR,
//         DSN=${RUNLIB}(DSNTIAD)
//LKED.SYSIN   DD *
  INCLUDE SYSLIB(DSNELI)
  NAME DSNTIAD(R)
//*
//DSNTIAB EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
  DSN SYSTEM(${MVSSNAME})
  -ALTER BUFFERPOOL (BP0) +
#if (${BP0SEQT}!="")
         VPSEQT(${BP0SEQT}) +
#end
#if (${BP0DWQT}!="")
         DWQT(${BP0DWQT}) +
#end
#if (${BP0VDWQT}!="")
         VDWQT(${BP0VDWQT}) +
#end
         VPSIZE(${BP0})
  -ALTER BUFFERPOOL (BP8K0) +
#if (${BP8K0SEQT}!="")
         VPSEQT(${BP8K0SEQT}) +
#end
#if (${BP8K0DWQT}!="")
         DWQT(${BP8K0DWQT}) +
#end
#if (${BP8K0VDWQT}!="")
         VDWQT(${BP8K0VDWQT}) +
#end
         VPSIZE(${BP8K0})
  -ALTER BUFFERPOOL (BP16K0) +
#if (${BP16K0SEQT}!="")
         VPSEQT(${BP16K0SEQT}) +
#end
#if (${BP16K0DWQT}!="")
         DWQT(${BP16K0DWQT}) +
#end
#if (${BP16K0VDWQT}!="")
         VDWQT(${BP16K0VDWQT}) +
#end
         VPSIZE(${BP16K0})
  -ALTER BUFFERPOOL (BP32K) +
#if (${BP32KSEQT}!="")
         VPSEQT(${BP32KSEQT}) +
#end
#if (${BP32KDWQT}!="")
         DWQT(${BP32KDWQT}) +
#end
#if (${BP32KVDWQT}!="")
         VDWQT(${BP32KVDWQT}) +
#end
         VPSIZE(${BP32K})
  -ALTER BUFFERPOOL (BP1) +
#if (${BP1SEQT}!="")
         VPSEQT(${BP1SEQT}) +
#end
#if (${BP1DWQT}!="")
         DWQT(${BP1DWQT}) +
#end
#if (${BP1VDWQT}!="")
         VDWQT(${BP1VDWQT}) +
#end
         VPSIZE(${BP1})
  -ALTER BUFFERPOOL (BP2) +
#if (${BP2SEQT}!="")
         VPSEQT(${BP2SEQT}) +
#end
#if (${BP2DWQT}!="")
         DWQT(${BP2DWQT}) +
#end
#if (${BP2VDWQT}!="")
         VDWQT(${BP2VDWQT}) +
#end
         VPSIZE(${BP2})
  -ALTER BUFFERPOOL (BP8K1) +
         VPSIZE(5000)
  -ALTER BUFFERPOOL (BP16K1) +
         VPSIZE(5000)
  -ALTER BUFFERPOOL (BP16K2) +
         VPSIZE(5000)
  -ALTER BUFFERPOOL (BP32K1) +
         VPSIZE(5000)
  -ALTER BUFFERPOOL (BP32K2) +
         VPSIZE(5000)
//*
//DSNTIAS EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
  DSN SYSTEM(${MVSSNAME})
  BIND PACKAGE(DSNTIA12) MEM(DSNTIAD) -
#if( ${INSPKOWN} != "" )
       OWNER(${INSPKOWN}) +
#end
       ACT(REP) ISO(CS) CURRENTDATA(YES) ENCODING(EBCDIC) -
       LIB('${DBRMLIB}')
  BIND PLAN(DSNTIA12) PKLIST(DSNTIA12.DSNTIAD) -
#if( ${INSPKOWN} != "" )
       OWNER(${INSPKOWN}) +
#end
       ACTION(REPLACE) RETAIN +
       ISO(CS) CURRENTDATA(YES) ENCODING(EBCDIC)
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA12) PARM('RC0') -
       LIB('${RUNLIB}')
  END
//SYSIN    DD  *
   SET CURRENT SQLID = '${INSSQLID}';
   DROP DATABASE ${WKDBNAME};
   DROP STOGROUP SYSDEFLT;
//*
//DSNTICR EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
  DSN SYSTEM(${MVSSNAME})
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA12) -
       LIB('${RUNLIB}')
  END
//SYSIN    DD  *
   SET CURRENT SQLID = '${INSSQLID}';
   CREATE STOGROUP SYSDEFLT
          VOLUMES ("*")
#if ( ${DATACLS3}=="" && ${MGMTCLS3}=="" &&
      ${STORCLS3}=="" )
          VCAT    ${VCATALOG};
#else
          VCAT    ${VCATALOG}
#end
#if ( ${DATACLS3}!="" && ${MGMTCLS3}=="" &&
      ${STORCLS3}=="" )
         DATACLAS ${DATACLS3};
#elseif ( ${DATACLS3}!="" )
         DATACLAS ${DATACLS3}
#end
#if (${MGMTCLS3}!="" && ${STORCLS3}=="")
         MGMTCLAS ${MGMTCLS3};
#elseif (${MGMTCLS3}!="")
         MGMTCLAS ${MGMTCLS3}
#end
#if (${STORCLS3}!= "")
         STORCLAS ${STORCLS3};
#end
   CREATE DATABASE ${WKDBNAME} AS WORKFILE FOR ${MEMBNAME};
   GRANT EXECUTE ON PLAN DSNTIA12
         TO ${INSGRLST};
   GRANT CREATETAB, CREATETS ON DATABASE DSNDB04
         TO ${INSGRLST};
   GRANT USE OF BUFFERPOOL ${TBSBPOOL}
         TO PUBLIC;
   GRANT USE OF BUFFERPOOL ${TBSBP8K}
         TO PUBLIC;
   GRANT USE OF BUFFERPOOL ${TBSBP16K}
         TO PUBLIC;
   GRANT USE OF BUFFERPOOL ${TBSBP32K}
         TO PUBLIC;
#grntbplob("${TBSBPLOB}","${TBSBPOOL}","${TBSBP8K}",
           "${TBSBP16K}","${TBSBP32K}")
#grntbpxml("${TBSBPXML}","${TBSBP16K}","${TBSBPLOB}")
#grntbpidx("${IDXBPOOL}","${TBSBPOOL}","${TBSBP8K}",
           "${TBSBP16K}","${TBSBP32K}","${TBSBPLOB}",
           "${TBSBPXML}")
   GRANT USE OF STOGROUP SYSDEFLT
         TO ${INSGRLST};
   GRANT USE OF TABLESPACE DSNDB04.SYSDEFLT
         TO ${INSGRLST};
//*
//DSNTIRX EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
  DSN SYSTEM(${MVSSNAME})
  BIND PACKAGE(DSNREXX) MEMBER(DSNREXX)  ACTION(REPLACE) ISO(CS)-
#if( ${INSPKOWN} != "" )
       OWNER(${INSPKOWN}) +
#end
       LIBRARY('${DSNDBRM}')-
       VALIDATE(BIND) CURRENTDATA(NO)-
       ENCODING(EBCDIC)
  BIND PACKAGE(DSNREXUR) MEMBER(DSNREXX) ACTION(REPLACE) ISO(UR)-
#if( ${INSPKOWN} != "" )
       OWNER(${INSPKOWN}) +
#end
       LIBRARY('${DSNDBRM}')-
       VALIDATE(BIND)-
       ENCODING(EBCDIC)
  BIND PACKAGE(DSNREXCS) MEMBER(DSNREXX) ACTION(REPLACE) ISO(CS)-
#if( ${INSPKOWN} != "" )
       OWNER(${INSPKOWN}) +
#end
       LIBRARY('${DSNDBRM}')-
       VALIDATE(BIND) CURRENTDATA(NO)-
       ENCODING(EBCDIC)
  BIND PACKAGE(DSNREXRS) MEMBER(DSNREXX) ACTION(REPLACE) ISO(RS)-
#if( ${INSPKOWN} != "" )
       OWNER(${INSPKOWN}) +
#end
       LIBRARY('${DSNDBRM}')-
       VALIDATE(BIND)-
       ENCODING(EBCDIC)
  BIND PACKAGE(DSNREXRR) MEMBER(DSNREXX) ACTION(REPLACE) ISO(RR)-
#if( ${INSPKOWN} != "" )
       OWNER(${INSPKOWN}) +
#end
       LIBRARY('${DSNDBRM}')-
       VALIDATE(BIND)-
       ENCODING(EBCDIC)
  BIND PLAN(DSNREXX) -
#if( ${INSPKOWN} != "" )
       OWNER(${INSPKOWN}) +
#end
       PKLIST(*.DSNREXX.DSNREXX, -
              *.DSNREXUR.DSNREXX, -
              *.DSNREXCS.DSNREXX, -
              *.DSNREXRS.DSNREXX, -
              *.DSNREXRR.DSNREXX) -
       ACTION(REPLACE) RETAIN +
       ISO(CS) CURRENTDATA(YES) SQLRULES(DB2) -
       ENCODING(EBCDIC)
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA12) -
       LIB('${RUNLIB}')
  END
//SYSIN    DD  *
  SET CURRENT SQLID = '${INSSQLID}';
  GRANT EXECUTE ON PACKAGE DSNREXX.DSNREXX
        TO ${INSGRLST};
  GRANT EXECUTE ON PACKAGE DSNREXUR.DSNREXX
        TO ${INSGRLST};
  GRANT EXECUTE ON PACKAGE DSNREXCS.DSNREXX
        TO ${INSGRLST};
  GRANT EXECUTE ON PACKAGE DSNREXRS.DSNREXX
        TO ${INSGRLST};
  GRANT EXECUTE ON PACKAGE DSNREXRR.DSNREXX
        TO ${INSGRLST};
  GRANT EXECUTE ON PLAN    DSNREXX
        TO ${INSGRLST};
//*
//* DSNTWFG: ADD 4-KB AND 32-KB TABLE SPACES IN THE WORK FILE DB
//*   PARAMETERS:
//*     DB2SSN          : LOCAL DB2 SSID
//*     AUTHID          : AUTHORIZATION ID TO PERFORM THE WORK
//*     WFDBNAME        : NAME OF THE DB2 WORK FILE DATABASE
//*
//*     TEMP4K_QTY      : NUMBER OF 4-KB TYPE TABLE SPACES TO BE ADDED
//*                       FOR TEMPORARY (DGTT) WORK
//*     TEMP4K_MAXPARTS : THE MAXPARTITIONS PER 4-KB TYPE TEMP WORK
//*                       FILE PBG TABLE SPACE.
//*                       * IF SPECIFIED AND NOT NULL, THE
//*                         TEMP4K_DSSIZE PARAMETER ALSO MUST
//*                         BE SPECIFIED AND NOT NULL; AND THE
//*                         TEMP4K_PRIQTY PARAMETER MUST BE
//*                         NULL OR NOT SPECIFIED.
//*                       * IF NULL OR NOT SPECIFIED, THE
//*                         TEMP4K_DSSIZE PARAMETER ALSO MUST
//*                         BE NULL OR NOT SPECIFIED; AND THE
//*                         TEMP4K_PRIQTY PARAMETER MUST BE
//*                         SPECIFIED AND NOT NULL.
//*     TEMP4K_DSSIZE   : THE MAXIMUM GB PER PARTITION (DSSIZE) PER
//*                       4-KB TYPE TEMP WORK FILE PBG TABLE SPACE.
//*                       * IF SPECIFIED AND NOT NULL, THE
//*                         TEMP4K_MAXPARTS PARAMETER ALSO MUST
//*                         BE SPECIFIED AND NOT NULL; AND THE
//*                         TEMP4K_PRIQTY PARAMETER MUST BE
//*                         NULL OR NOT SPECIFIED
//*                       * IF NULL OR NOT SPECIFIED, THE
//*                         TEMP4K_MAXPARTS PARAMETER ALSO MUST
//*                         BE NULL OR NOT SPECIFIED; AND THE
//*                         TEMP4K_PRIQTY PARAMETER MUST BE
//*                         SPECIFIED AND NOT NULL.
//*     TEMP4K_PRIQTY   : PRIMARY SPACE IN MB FOR EACH 4-KB TYPE TEMP
//*                       WORK FILE SEGMENTED TABLE SPACE
//*                       * IF SPECIFIED AND NOT NULL, THE
//*                         TEMP4K_MAXPARTS AND TEMP4K_DSSIZE
//*                         PARAMETERS MUST BE NULL OR NOT SPECIFIED.
//*                       * IF NULL OR NOT SPECIFIED, THE
//*                         TEMP4K_MAXPARTS AND TEMP4K_DSSIZE
//*                         PARAMETERS MUST BE SPECIFIED AND NOT
//*                         NULL.
//*     TEMP4K_SEGSIZE  : SEGMENT TYPE FOR 4-KB TYPE TEMP WORK TS'S
//*     TEMP4K_BPOOL    : DB2 BUFFERPOOL FOR 4-KB TYPE TEMP WORK TS'S
//*     TEMP4K_STOGROUP : DB2 STOGROUP FOR 4-KB TYPE TEMP WORK TS'S
//*
//*     TEMP32K_QTY     : NUMBER OF 32-KB TYPE TABLE SPACES TO BE ADDED
//*                       FOR TEMPORARY (DGTT) WORK
//*     TEMP32K_MAXPARTS: THE MAXPARTITIONS PER 32-KB TYPE TEMP WORK
//*                       FILE PBG TABLE SPACE.
//*                       * IF SPECIFIED AND NOT NULL, THE
//*                         TEMP32K_DSSIZE PARAMETER ALSO MUST
//*                         BE SPECIFIED AND NOT NULL; AND THE
//*                         TEMP32K_PRIQTY PARAMETER MUST BE
//*                         NULL OR NOT SPECIFIED.
//*                       * IF NULL OR NOT SPECIFIED, THE
//*                         TEMP32K_DSSIZE PARAMETER ALSO MUST
//*                         BE NULL OR NOT SPECIFIED; AND THE
//*                         TEMP32K_PRIQTY PARAMETER MUST BE
//*                         SPECIFIED AND NOT NULL
//*     TEMP32K_DSSIZE  : THE MAXIMUM GB PER PARTITION (DSSIZE) PER
//*                       32-KB TYPE TEMP WORK FILE PBG TABLE SPACE.
//*                       * IF SPECIFIED AND NOT NULL, THE
//*                         TEMP32K_MAXPARTS PARAMETER ALSO MUST
//*                         BE SPECIFIED AND NOT NULL; AND THE
//*                         TEMP32K_PRIQTY PARAMETER MUST BE
//*                         NULL OR NOT SPECIFIED
//*                       * IF NULL OR NOT SPECIFIED, THE
//*                         TEMP32K_MAXPARTS PARAMETER ALSO MUST
//*                         BE NULL OR NOT SPECIFIED; AND THE
//*                         TEMP32K_PRIQTY PARAMETER MUST BE
//*                         SPECIFIED AND NOT NULL
//*     TEMP32K_PRIQTY  : PRIMARY SPACE IN MB FOR EACH 32-KB TYPE TEMP
//*                       WORK FILE SEGMENTED TABLE SPACE
//*                       * IF SPECIFIED AND NOT NULL, THE
//*                         TEMP32K_MAXPARTS AND TEMP32K_DSSIZE
//*                         PARAMETERS MUST BE NULL OR NOT SPECIFIED.
//*                       * IF NULL OR NOT SPECIFIED, THE
//*                         TEMP32K_MAXPARTS AND TEMP32K_DSSIZE
//*                         PARAMETERS MUST BE SPECIFIED AND NOT
//*                         NULL.
//*     TEMP32K_SEGSIZE : SEGMENT TYPE FOR 32-KB TYPE TEMP WORK TS'S
//*     TEMP32K_BPOOL   : DB2 BUFFERPOOL FOR 32-KB TYPE TEMP WORK TS'S
//*     TEMP32K_STOGROUP: DB2 STOGROUP FOR 32-KB TYPE TEMP WORK TS'S
//*
//*     SORT4K_QTY      : NUMBER OF 4-KB TYPE TABLE SPACES TO BE ADDED
//*                       FOR SORT WORK
//*     SORT4K_PRIQTY   : PRIMARY SPACE IN MB FOR EACH 4-KB TYPE SORT
//*                       WORK TABLE SPACE
//*     SORT4K_SEGSIZE  : SEGMENT TYPE FOR 4-KB TYPE SORT WORK TS'S
//*     SORT4K_BPOOL    : DB2 BUFFERPOOL FOR 4-KB TYPE SORT WORK TS'S
//*     SORT4K_STOGROUP : DB2 STOGROUP FOR 4-KB TYPE SORT WORK TS'S
//*
//*     SORT32K_QTY     : NUMBER OF 32-KB TYPE TABLE SPACES TO BE ADDED
//*                       FOR SORT WORK
//*     SORT32K_PRIQTY  : PRIMARY SPACE IN MB FOR EACH 32-KB TYPE SORT
//*                       WORK TABLE SPACE
//*     SORT32K_SEGSIZE : SEGMENT TYPE FOR 32-KB TYPE SORT WORK TS'S
//*     SORT32K_BPOOL   : DB2 BUFFERPOOL FOR 32-KB TYPE SORT WORK TS'S
//*     SORT32K_STOGROUP: DB2 STOGROUP FOR 32-KB TYPE SORT WORK TS'S
//*
//DSNTIST EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSEXEC  DD DISP=SHR,DSN=${DSNCLIST}
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
  DSNTWFG +
    DB2SSN(${MVSSNAME}) +
    AUTHID(${INSSQLID}) +
    WFDBNAME(${WKDBNAME}) +
    +
    TEMP4K_QTY(${T4KNOTS}) +
    TEMP4K_MAXPARTS(${T4KMXPT}) +
    TEMP4K_DSSIZE(${T4KDSSZ}) +
    TEMP4K_PRIQTY(${T4KTSSZ}) +
    TEMP4K_SEGSIZE(${T4KSGSZ}) +
    TEMP4K_BPOOL(BP0) +
    TEMP4K_STOGROUP(SYSDEFLT) +
    +
    TEMP32K_QTY(${T32KNOTS}) +
    TEMP32K_MAXPARTS(${T32KMXPT}) +
    TEMP32K_DSSIZE(${T32KDSSZ}) +
    TEMP32K_PRIQTY(${T32KTSSZ}) +
    TEMP32K_SEGSIZE(${T32KSGSZ}) +
    TEMP32K_BPOOL(BP32K) +
    TEMP32K_STOGROUP(SYSDEFLT) +
    +
    SORT4K_QTY(${S4KNOTS}) +
    SORT4K_PRIQTY(${S4KTSSZ}) +
    SORT4K_SEGSIZE(${S4KSGSZ}) +
    SORT4K_BPOOL(BP0) +
    SORT4K_STOGROUP(SYSDEFLT) +
    +
    SORT32K_QTY(${S32KNOTS}) +
    SORT32K_PRIQTY(${S32KTSSZ}) +
    SORT32K_SEGSIZE(${S32KSGSZ}) +
    SORT32K_BPOOL(BP32K) +
    SORT32K_STOGROUP(SYSDEFLT)
//*
## Macro to generate GRANT USE OF BUFFERPOOL TO PUBLIC
## for user LOB data default buffer pool
## $bplob is the default buffer pool for user LOB data
## $bp4 is the default 4-KB buffer pool for user data
## $bp8 is the default 8-KB buffer pool for user data
## $bp16 is the default 16-KB buffer pool for user data
## $bp32 is the default 32-KB buffer pool for user data
#macro (grntbplob $bplob $bp4 $bp8 $bp16 $bp32)
#set ($bplob = $bplob.toUpperCase())
#set ($bp4  = $bp4.toUpperCase())
#set ($bp8  = $bp8.toUpperCase())
#set ($bp16 = $bp16.toUpperCase())
#set ($bp32 = $bp32.toUpperCase())
#if ($bplob!=$bp4 && $bplob!=$bp8 && $bplob!=$bp16 && $bplob!=$bp32)
   GRANT USE OF BUFFERPOOL $bplob
         TO PUBLIC;
#else#end#end
## Macro to generate GRANT USE OF BUFFERPOOL TO PUBLIC
## for user XML data default buffer pool
## $bpxml is the default buffer pool for user XML data
## $bp16 is the default 16-KB buffer pool for user data
## $bplob is the default buffer pool for user LOG data
#macro (grntbpxml $bpxml $bp16k $bplob)
#set ($bpxml = $bpxml.toUpperCase())
#set ($bp16 = $bp16.toUpperCase())
#set ($bplob = $bplob.toUpperCase())
#if ($bpxml != $bp16k && $bpxml != $bplob)
   GRANT USE OF BUFFERPOOL $bpxml
         TO PUBLIC;
#else#end#end
## Macro to generate GRANT USE OF BUFFERPOOL TO PUBLIC
## for user indexes default buffer pool
## $bpidx is the default buffer pool for user indexes
## $bp4 is the default 4-KB buffer pool for user data
## $bp8 is the default 8-KB buffer pool for user data
## $bp16 is the default 16-KB buffer pool for user data
## $bp32 is the default 32-KB buffer pool for user data
## $bplob is the default buffer pool for user LOG data
## $bpxml is the default buffer pool for user XML data
#macro (grntbpidx $bpidx $bp4 $bp8 $bp16 $bp32 $bplob $bpxml)
#set ($bpidx = $bpidx.toUpperCase())
#set ($bp4  = $bp4.toUpperCase())
#set ($bp8  = $bp8.toUpperCase())
#set ($bp16 = $bp16.toUpperCase())
#set ($bp32 = $bp32.toUpperCase())
#set ($bplob = $bplob.toUpperCase())
#set ($bpxml = $bpxml.toUpperCase())
#if ($bpidx != $bp4 && $bpidx != $bp8 && $bpidx != $bp16 && $bpidx != $bp32)
#if ($bpidx != $bplob && $bpidx != $bpxml)
   GRANT USE OF BUFFERPOOL $bpidx
         TO PUBLIC;
#else#end#else#end#end
## Macro to append suffix for data sets
## $suffix is the data set suffix
## return the suffix with the right period
#macro (libs $suffix)
#if ($suffix !=  "")
.$suffix#else#end#end
